{"version":3,"sources":["webpack:///static/js/0.b3e4449d8b8370f0b1f8.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/component/dataset/DatasetModel.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/helper/WhiskerBoxDraw.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./src/pages/home/index.vue","webpack:///src/pages/home/index.vue","webpack:///./src/pages/home/index.vue?34a3","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/chart/tree/commonLayout.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./src/pages/home/index.vue?9458","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./src/pages/home/index.vue?85f0","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/zrender/lib/svg/helper/ShadowManager.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./src/pages/home/index.vue?97e3","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/component/axis/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/chart/tree/radialLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./src/pages/home/index.vue?fb8e","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/tree/orthogonalLayout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/axis.js"],"names":["webpackJsonp","+Dgo","module","exports","__webpack_require__","extendComponentView","type","+PQg","isUserFeatureName","featureName","indexOf","echarts","zrUtil","textContain","featureManager","graphic","Model","DataDiffer","listComponentHelper","_default","render","toolboxModel","ecModel","api","payload","processFeature","newIndex","oldIndex","feature","featureNames","oldName","featureOpt","featureOpts","featureModel","model","onclick","option","Feature","get","features","dispose","unusable","remove","createIconPaths","setIconStatus","iconName","status","this","iconPaths","iconStatus","trigger","iconStyleModel","getModel","iconStyleEmphasisModel","icons","getIcons","titles","icon","title","each","iconStr","path","createIcon","x","itemSize","y","width","height","setStyle","getItemStyle","hoverStyle","setHoverStyle","__title","on","text","textPosition","textFill","fill","stroke","textAlign","group","add","bind","removeAll","_features","opt","name","push","_featureNames","update","curry","execute","layout","makeBackground","getBoundingRect","eachChild","titleText","rect","makeFont","offsetX","position","offsetY","needPutOnTop","getHeight","topOffset","getWidth","updateView","+bDV","setEncodeAndDimensions","source","seriesModel","encodeDefine","parallelModel","getComponent","createHashMap","dimensions","axisDim","dataDimIndex","convertDimNameToNumber","set","dimName","replace","_util","SeriesModel","createListFromArray","extend","dependencies","visualColorAccessPath","getInitialData","progressive","animation","getSource","getRawIndicesByActiveState","activeState","coordSys","coordinateSystem","data","getData","indices","eachActiveState","theActiveState","dataIndex","getRawIndex","defaultOption","zlevel","z","parallelIndex","label","show","inactiveOpacity","activeOpacity","lineStyle","opacity","emphasis","smooth","animationEasing","+bS+","getPointDimIndex","axis","isHorizontal","getGlobalExtent","dimIndex","getRect","XY","WH","BaseAxisPointer","viewHelper","singleAxisHelper","AxisView","SingleAxisPointer","makeElOption","elOption","value","axisModel","axisPointerModel","otherExtent","pixelValue","dataToPoint","axisPointerType","elStyle","buildElStyle","pointerOption","pointerShapeBuilder","style","graphicKey","pointer","layoutInfo","buildCartesianSingleLabelElOption","getHandleTransform","labelInside","labelMargin","getTransformedPosition","rotation","labelDirection","Math","PI","updateHandleTransform","transform","delta","axisExtent","currPosition","min","max","cursorOtherValue","cursorPoint","tooltipOption","verticalAlign","line","targetShape","makeLineShape","subPixelOptimizeLine","shape","shadow","bandWidth","getBandWidth","span","makeRectShape","registerAxisPointerClass","+jMe","Tree","hostModel","levelOptions","leavesOption","root","_nodes","levelModels","map","levelDefine","leavesModel","addChild","child","node","children","parentNode","linkList","List","createDimensions","TreeNode","hostTree","depth","viewChildren","prototype","constructor","isRemoved","eachNode","options","cb","context","isString","order","suppressVisitSub","attr","call","i","length","updateDepthAndHeight","getNodeById","id","getId","len","res","contains","getAncestors","includeSelf","ancestors","reverse","getValue","dimension","getDimension","setLayout","merge","setItemLayout","getLayout","getItemLayout","itemModel","getItemModel","levelModel","getLevelModel","isExpand","getLeavesModel","setVisual","key","setItemVisual","getVisual","ignoreParent","getItemVisual","isAncestorOf","parent","isDescendantOf","getNodeByDataIndex","rawIndex","getNodeByName","nodes","count","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","buildHierarchy","dataNode","dimMax","isArray","listData","tree","levels","leaves","dimensionsInfo","coordDimensions","dimensionsCount","list","initData","mainData","struct","structAttr","+pdh","helper","noop","actionTypes","registerAction","handleRootToNode","index","types","targetInfo","retrieveTargetInfo","originViewRoot","getViewRoot","direction","aboveViewRoot","resetViewRoot","eachComponent","mainType","subType","query","+u5N","createGraphFromNodeEdge","_format","encodeHTML","SankeySeries","links","edges","getGraph","graph","getEdgeData","edgeData","formatTooltip","multipleSeries","dataType","params","getDataParams","rawDataOpt","html","target","superCall","left","top","right","bottom","nodeWidth","nodeGap","layoutIterations","color","fontSize","itemStyle","borderWidth","borderColor","curveness","animationDuration","/99E","/BOW","Axis","ParallelAxis","dim","scale","coordExtent","axisType","axisIndex","inherits","/gZK","nameList","/vN/","createListSimply","modelUtil","_number","getPercentWithPrecision","dataSelectableMixin","_dataProvider","retrieveRawAttr","PieSeries","extendSeriesModel","init","superApply","arguments","legendDataProvider","getRawData","updateSelectedMap","_createSelectableList","_defaultLabelLine","mergeOption","newOption","valueDim","mapDimension","targetList","getName","selected","valueList","percent","$vars","defaultEmphasis","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","legendHoverLink","hoverAnimation","center","radius","clockwise","startAngle","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","rotate","length2","animationType","mixin","0BNI","getAxisLineShape","polar","rExtent","angle","slice","start","coordToPoint","end","x1","y1","x2","y2","getRadiusIdx","getRadiusAxis","inverse","elementList","axisPointerClass","angleAxisModel","angleAxis","radiusExtent","getExtent","ticksAngles","getTicksCoords","pop","isBlank","_axisLine","lineStyleModel","circle","Circle","cx","cy","r","getLineStyle","z2","silent","_axisTick","tickModel","tickLen","lines","tickAngle","Line","mergePath","defaults","_axisLabel","categoryData","getCategories","labelModel","labels","getFormattedLabels","labelsAngles","getLabelsCoords","p","labelTextAlign","abs","labelTextVerticalAlign","textStyle","textEl","Text","setTextStyle","getTextColor","textVerticalAlign","_splitLine","splitLineModel","lineColors","lineCount","Array","splitLines","colorIndex","_splitArea","splitAreaModel","areaStyleModel","areaColors","splitAreas","RADIAN","prevAngle","r0","r1","Sector","endAngle","getAreaStyle","0BOU","Calendar","calendarModel","_model","doConvert","methodName","finder","numberUtil","CoordinateSystem","getDimensionsInfo","getRangeInfo","_rangeInfo","_rect","getCellWidth","_sw","getCellHeight","_sh","getOrient","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","date","parseDate","getFullYear","m","getMonth","d","getDate","day","getDay","time","getTime","formatedDate","getNextNDay","n","Date","setDate","cellSizeSpecified","cellSize","idx","_lineWidth","lineWidth","_getRangeInfo","_initRangeOption","weeks","whNames","layoutParams","getBoxLayoutParams","cellNumbers","whGlobal","calendarRect","getLayoutRect","clamp","dayInfo","range","NaN","week","nthWeek","pointToData","point","pointToDate","dataToRect","contentShape","tl","tr","br","bl","nthX","floor","nthY","_getDateByWeeksAndDay","convertToPixel","convertFromPixel","rg","test","firstDay","setMonth","tmp","reversed","allDay","startDateNum","endDateNum","sign","fweek","lweek","rangeInfo","nthDay","create","calendarList","calendar","eachSeries","calendarSeries","register","0O1a","preprocessor","registerPreprocessor","0fQF","Diff","buildValues","diff","components","newArr","oldArr","componentPos","componentLen","newPos","oldPos","component","removed","added","clonePath","callback","arrayDiff","equals","a","b","self","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","ret","diagonalPath","basePath","addPath","removePath","undefined","canAdd","canRemove","pushComponent","last","commonCount","tokenize","join","0jKn","parseInt10","val","parseInt","VMLPainter","storage","vmlCore","initVML","vmlViewport","document","createElement","vmlRoot","cssText","appendChild","_vmlRoot","_vmlViewport","resize","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","el","onRemove","onAdd","_firstPaint","createMethodNotSupport","method","zrLog","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","getDisplayList","_paintList","invisible","ignore","__alreadyNotVisible","__dirty","beforeBrush","brushVML","brush","afterBrush","_getWidth","_getHeight","_width","_height","vmlViewportStyle","innerHTML","clear","removeChild","stl","currentStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","0nGg","getItemOpacity","item","opacityPath","fadeOutItem","opacityRatio","getGraphicEl","downplay","traverse","fadeInItem","highlight","SymbolDraw","LineDraw","RoamController","roamHelper","_cursorHelper","onIrrelevantElement","adjustEdge","nodeOpacityPath","lineOpacityPath","extendChartView","symbolDraw","lineDraw","_controller","getZr","_controllerHost","_symbolDraw","_lineDraw","_firstRender","_nodeScaleRatio","groupNewProp","updateProps","_getNodeGlobalScale","updateData","_updateNodeAndLinkScale","_updateController","clearTimeout","_layoutTimeout","forceLayout","layoutAnimation","_startForceLayoutIteration","eachItemGraphicEl","off","draggable","warmUp","_layouting","setFixed","setUnfixed","setDraggable","__focusNodeAdjacency","__unfocusNodeAdjacency","dispatchAction","seriesId","eachEdge","edge","edgeDataIndex","circularRotateLabel","symbolPath","getSymbolPath","pos","rad","atan2","isLeft","textRotation","textOrigin","focusNodeAdjacency","getNodeByIndex","getEdgeByIndex","adjacentEdge","node1","node2","unfocusNodeAdjacency","step","stopped","updateLayout","setTimeout","controller","controllerHost","setPointerChecker","e","applyTransform","contain","disable","enable","zoomLimit","zoom","getZoom","dx","dy","updateViewOnPan","mouseX","mouseY","updateViewOnZoom","originX","originY","nodeScale","invScale","nodeScaleRatio","groupScale","groupZoom","0pMY","Brush","_brushType","_brushMode","lang","brushLang","toolbox","polygon","lineX","lineY","keep","clone","proto","brushType","brushMode","isBrushed","brushModel","brushOption","areas","availableIcons","intervals","command","1A4n","updateDataSelected","uid","hasAnimation","from","toggleItemSelected","getItemGraphicEl","isSelected","midAngle","cos","sin","offset","animate","when","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","Group","sector","Polyline","ChartView","piePieceProto","firstCreate","stopAnimation","animateTo","childAt","sectorShape","setShape","getShallow","initProps","visualColor","useStyle","lineJoin","cursorStyle","isAnimationEnabled","_updateLabel","labelText","labelLayout","points","linePoints","origin","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","PieView","sectorGroup","_sectorGroup","oldData","_data","isFirstRender","onSectorClick","selectedMode","piePiece","setItemGraphicEl","newIdx","oldIdx","removeClipPath","setClipPath","_createClipPath","clipPath","containPoint","itemLayout","sqrt","1FNb","categoryFilter","visualSymbol","categoryVisual","edgeVisual","simpleLayout","circularLayout","createView","registerProcessor","registerVisual","registerLayout","registerCoordinateSystem","1Nix","seriesType","plan","createRenderPlanner","reset","progress","segCount","isLargeRender","Float32Array","dimLen","tmpIn","tmpOut","dims","isNaN","pipelineContext","large","isDimensionStacked","getCalculationInfo","_dataStackHelper","1VkX","updateStyle","itemGroup","normalItemStyleModel","normalStyleAccessPath","whiskerEl","whiskerIndex","bodyEl","bodyIndex","emphasisStyleAccessPath","_whiskerBoxCommon","viewMixin","CandlestickView","getStyleUpdater","1bHA","getSymbolSize","symbolSize","getScale","SymbolClz","seriesScope","driftSymbol","drift","_symbol","createSymbol","parsePercent","_labelHelper","getDefaultLabel","symbolProto","_createSymbol","symbolType","culling","_symbolType","stopSymbolAnimation","toLastFrame","setZ","cursor","isInit","_updateCommon","fadeIn","_seriesModel","normalLabelAccessPath","emphasisLabelAccessPath","getLabelDefaultText","useNameLabel","strokeNoScale","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hasItemOption","setColor","symbolInnerColor","isRectText","incremental","ratio","fadeOut","keepLabel","1bf2","1uRk","generateNodeKey","Node","inEdges","outEdges","hostGraph","Edge","n1","n2","_config","__DEV__","_clazz","enableClassCheck","Graph","directed","_directed","_nodesMap","_edgesMap","graphProto","isDirected","addNode","nodesMap","rawIdx","addEdge","edgesMap","isInstance","getEdge","breadthFirstTraverse","startNode","edgeType","__visited","queue","currentNode","shift","otherNode","filterSelf","degree","inDegree","outDegree","createGraphDataProxyMixin","hostName","dataName","2Ow2","createGridClipShape","rectEl","Rect","createLinePoints","isEmptyValue","getAxis","addEl","dataGroup","updateElCommon","seriesStyleModel","ParallelView","_dataGroup","_renderForNormal","newDataIndex","oldDataIndex","animationModel","2W4A","eachSeriesByType","colorList","itemStyleModel","areaColor","seriesIndex","2m1D","getMarkerPosition","pt","clampData","size","getBaseAxis","barMinHeight","barMinAngle","2tOJ","markPoint","3n/B","43ae","updateAxisPointer","axisView","forceRender","Clazz","getAxisPointerClass","axisPointerModelHelper","getAxisPointerModel","_axisPointer","disposeAxisPointer","axisPointer","fixValue","force","axisPointerClazz","clazz","4A6G","lineData","lineCoords","isLarge","isPolyline","totalCoordsCount","getLineCoordsCount","getLineCoords","k","pts","j","4RQY","coordDim","concat","hasValue","simpleLayoutEdge","_simpleLayoutHelper","4SGL","virtualRoot","treeRoot","rootDepth","sort","initChildren","validDataCount","sum","unitRadian","renderRollupNode","rPerLevel","restAngle","PI2","valueSumLargerThanMinAngle","dir","renderNode","rStart","rEnd","siblingAngle","isAsc","sortOrder","4SW2","4UDB","layoutPoints","dataSample","PRIORITY","PROCESSOR","STATISTIC","4V7L","4w1v","round4","mathRound","isAroundZero","EPSILON","pathHasFill","isText","NONE","pathHasStroke","textStroke","setTransform","svgEl","arrayJoin","setAttribute","attrXLink","setAttributeNS","bindStyle","getAttribute","textStrokeWidth","host","getLineScale","lineDash","lineDashOffset","lineCap","miterLimit","pathDataToString","str","dataLength","cmd","cmdStr","nData","CMD","M","L","Q","C","A","rx","ry","theta","dTheta","psi","dThetaPositive","isCircle","x0","mathCos","y0","mathSin","Z","R","w","h","getVerticalAlignForSvg","_core","PathProxy","BoundingRect","textHelper","round","svgPath","__svgEl","createPathProxy","__dirtyPath","beginPath","buildPath","pathStr","svgTextDrawRectText","svgImage","image","HTMLImageElement","src","dw","dh","__imageSrc","svgText","tmpRect","textRect","normalizeTextStyle","textSvgEl","__textSvgEl","distance","textDistance","align","font","fontStyle","fontWeight","fontFamily","DEFAULT_FONT","lineHeight","adjustTextPositionOnRect","textPadding","transformText","copy","transformCoordToGlobal","textLines","split","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","createTextNode","drawRectText","5/bM","dataColor","funnelLayout","dataFilter","56C7","globalListener","AxisPointerView","globalAxisPointerModel","globalTooltipModel","triggerOn","currTrigger","unregister","5Hn/","getOtherDim","thisDim","getCursor","orient","eventTool","throttle","DataZoomView","sliderMove","linearMap","asc","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dragging","_dataShadowInfo","dataZoomModel","createOrUpdate","_buildView","_updateView","thisGroup","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","positionInfo","getLayoutParams","layoutRect","padding","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","info","_prepareDataShadowInfo","series","otherDim","getShadowDim","otherDataExtent","getDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","isEmpty","otherCoord","Polygon","showDataShadow","result","eachTargetAxis","dimNames","seriesModels","getAxisProxy","getTargetSeriesModels","thisAxis","getOtherAxis","displaybles","handles","handleLabels","filler","_onDragMove","onmousemove","stop","event","ondragstart","_showDataInfo","ondragend","_onDragEnd","onmouseover","onmouseout","subPixelOptimizeRect","handleIndex","bRect","handleColor","textStyleModel","textFont","getFont","getPercentRange","viewExtent","_updateInterval","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","minSpan","maxSpan","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","setLabel","barTransform","getTransform","transformDirection","textPoint","orderedHandleEnds","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","valueWindow","getDataValueWindow","_formatLabel","labelFormatter","labelPrecision","getPixelPrecision","valueStr","getLabel","toFixed","isFunction","showOrHide","getLocalTransform","vertex","realtime","_dispatchZoomAction","localPoint","transformCoordToLocal","dataZoomId","getTargetCoordInfo","coordInfoList","5KWC","globalColors","eachRawSeriesByType","defaulColor","legendSymbol","borderColorQuery","isSeriesFiltered","5Mek","zr","pointerChecker","_zr","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","Eventful","controlType","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","isPinching","_pinching","notLeftMouse","_x","_y","checkKeyBinding","gestureEvent","interactionMutex","isTaken","oldX","oldY","wheelDelta","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","prop","setting","5dr1","Cartesian2D","Cartesian","getAxesByScale","axisX","axisY","toLocalCoord","containData","reserved","out","xAxis","yAxis","toGlobalCoord","dataToCoord","xAxisExtent","yAxisExtent","coordToData","5vFd","isAxisUsedInTheGrid","gridModel","getCoordSysModel","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","ceil","isLabelIgnored","unrotatedSingleRect","getTextRect","singleRect","union","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","onZero","onZeroAxisIndex","otherAxis","canNotOnZeroToAxis","hasOwnProperty","ifAxisCrossZero","updateAxisTransform","coordBase","axisExtentSum","coord","findAxesModels","axesTypes","getReferringComponents","isCartesian2D","_layout","axisHelper","Axis2D","niceScaleExtent","gridProto","axisPointerEnabled","_updateScale","ignoreContainLabel","adjustAxes","axesList","extent","gridRect","setExtent","labelUnionRect","margin","axesMapOnDim","getAxes","getCartesian","xAxisIndex","yAxisIndex","isObject","coordList","getCartesians","_findConvertTarget","cartesian","xAxisModel","yAxisModel","coordsList","componentIndex","grid","createAxisCreator","axisPosition","axisPositionUsed","createScaleByModel","isCategory","onBand","axesCount","addAxis","unionExtent","unionExtentFromData","Infinity","axesModels","getTooltipAxes","baseAxes","otherAxes","baseAxis","grids","6HcI","polarOptArr","polarNotRadar","polarOpt","indicator","radar","seriesOpt","polarIndex","radarIndex","6HoR","_poly","_layers","keyGetter","process","oldLayersGroups","points0","points1","layerSeries","textLayout","layerGroup","newLayersGroups","stackedOnPoints","stackedOnSmooth","smoothConstraint","hoverItemStyleModel","getFormattedLabel","getLayerSeries","boundaryGap","dataDiffer","_layersSeries","6JAQ","isNameSpecified","LegendModel","extendComponentModel","layoutMode","ignoreSize","parentModel","mergeDefaultAndTheme","optionUpdated","_updateData","legendData","hasSelected","select","potentialData","availableNames","eachRawSeries","seriesName","isPotential","names","mapArray","_availableNames","rawData","dataItem","unSelect","toggleSelected","backgroundColor","borderRadius","itemGap","itemWidth","itemHeight","inactiveColor","tooltip","6MCj","env","_vector","colorTool","RectText","Displayable","ZImage","Path","Gradient","mathMax","canvasSupported","Z2","initRootElStyle","coordsize","coordorigin","encodeHtmlAttribute","s","String","rgb2Str","g","append","getZIndex","parseFloat","maxValue","lastIndexOf","setColorAndOpacity","colorArr","parse","getColorAndAlpha","updateFillNode","zrEl","gradientType","focus","expansion","rectWidth","rectHeight","p0","p1","stops","colorStops","cs1","cs2","colorAndAlphaList","colors","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateStrokeNode","dashstyle","updateFillAndStroke","vmlEl","isFill","getElementsByTagName","createNode","nPoint","xi","yi","x3","y3","sx","sy","_vmlEl","needTransform","strokeEl","det","weight","toStatic","zIndex","removeRectText","appendRectText","isImage","img","tagName","toUpperCase","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sw","sWidth","sh","sHeight","hasCrop","doc","vmlElStyle","hasRotation","scaleX","scaleY","p2","p3","maxX","maxY","transformFilter","filter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","Image","onload","overflow","cropElStyle","filterStr","alpha","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","getFontStyle","fontString","variant","fontVariant","family","$override","body","ex","offsetWidth","fromTextEl","rich","contentBlock","parseRichText","tokens","textLine","adjustTextX","adjustTextY","pathEl","textPathEl","skewEl","textVmlEl","_textVmlEl","firstChild","nextSibling","textpathok","to","coords","textVmlElStyle","matrix","string","6UfY","AngleAxis","angleExtent","dataToAngle","angleToData","6axr","RadiusAxis","Polar","_radiusAxis","_angleAxis","pointToCoord","scaleType","radiusAxis","getAngleAxis","dataToRadius","radiusToData","maxAngle","radian","6f6q","legendSelectActionHandler","selectedMap","isToggleSelect","legendModel","isItemSelected","6n1D","ctor","_ctor","LineGroup","doAdd","lineNeedsDraw","doUpdate","oldLineData","newLineData","itemEl","makeSeriesScope","hoverLineStyle","isPointNaN","lineDrawProto","isPersistent","_lineData","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","useHoverLayer","_clearIncremental","_incremental","clearDisplaybles","7XrG","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","animationDurationUpdate","animationEasingUpdate","crossStyle","7bL3","themeRiverLayout","themeRiverVisual","80cc","legendFilter","Component","registerSubTypeDefaulter","80zD","makeAction","actionInfo","geoModel","geo","regions","region","82Fv","_sourceHelper","detectSourceFormat","_sourceType","SERIES_LAYOUT_BY_COLUMN","DatasetModel","seriesLayoutBy","sourceHeader","87tG","8DFW","_dimensionHelper","getDimensionTypeByAxis","nest","ThemeRiverSeries","nameMap","fixData","rawDataLength","dataByName","entries","layData","dataList","values","layerNum","largestLayer","timeValue","keyIndex","l","singleAxisModel","queryComponents","filterData","dimensionsDefine","single","itemName","comparer","index1","index2","timeDim","lenCount","indexArr","getAxisTooltipData","nestestValue","minDist","Number","MAX_VALUE","nearestIdx","pointNum","theValue","dist","dataIndices","htmlName","htmlValue","singleAxisIndex","8Mpj","DataZoomModel","disabled","zoomLock","8RN9","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","_listComponent","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","resetInner","itemAlign","renderInner","viewportSize","maxSize","mainRect","layoutInner","contentGroup","legendDrawnMap","selectMode","newline","getSeriesByName","legendSymbolType","_createItem","indexOfName","itemIcon","tooltipModel","legendGlobalTooltipModel","textX","formatter","content","hitRect","formatterParams","componentType","legendIndex","__legendDataIndex","box","contentRect","8UWf","orthogonalLayout","radialLayout","8YpK","dataToCoordSize","dataSize","halfSize","997V","9Owa","newSnapshot","store","giveStore","batchItem","percentRange","head","snapshot","ATTR","9Z3y","getSum","roseType","currentAngle","9cSo","candlestickVisual","candlestickLayout","A6Kt","sunburstLayout","AKXb","axisTrigger","link","coordSysAxesInfo","collect","ARaV","isInifinity","isFinite","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","markerHelper","updateSingleMarkerEndLayout","isFrom","xPx","yPx","getValues","createList","mlModel","coordDimsInfos","getDimensionInfo","fromData","toData","optData","markLineTransform","dimValueGetter","MarkerView","mlType","valueDataDim","retrieve","axisInfo","getAxisInfo","valueAxis","numCalculate","valueIndex","baseIndex","mlFrom","mlTo","precision","dataTransform","updateTransform","markLineModel","mlData","__from","__to","markerGroupMap","renderSeries","updateDataVisualAndLayout","symbol","seriesData","lineDrawMap","setData","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","dataModel","__keep","AbHi","SaveAsImage","saveAsImageLang","saveAsImage","excludeComponents","pixelRatio","$a","download","url","getConnectedDataURL","href","MouseEvent","browser","ie","window","navigator","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","tab","open","write","evt","view","bubbles","cancelable","dispatchEvent","AjK0","defaultSymbolType","performRawSeries","dataEach","rawValue","getRawValue","itemSymbolType","itemSymbolSize","hasCallback","AjST","boxplotVisual","boxplotLayout","B123","visualDefault","visualType","active","inactive","colorHue","colorSaturation","colorLightness","colorAlpha","BqCv","fromAxisAreaSelect","findComponents","getCoverInfoList","activeIntervals","interval","panelId","AxisBuilder","BrushController","brushHelper","_brushController","_onBrush","oldAxisGroup","_axisGroup","coordSysModel","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","strokeContainThreshold","axisBuilder","getGroup","_refreshBrushController","groupTransition","extentLen","extra","mount","enableGlobalPan","setPanels","makeRectPanelClipPath","isTargetByCursor","makeRectIsTargetByCursor","getLinearBrushOtherExtent","makeLinearBrushOtherExtent","enableBrush","brushStyle","removeOnClick","updateCovers","coverInfoList","coverInfo","isEnd","parallelAxisId","BuI2","ComponentModel","containLabel","C6b9","ROOT_TO_NODE_ACTION","HIGHLIGHT_ACTION","handleHighlight","handleUnhighlight","unhighlight","CUwD","symbolNeedsDraw","getTreeNodeStyle","updateNode","symbolEl","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","realRoot","rootLayout","__edge","BezierCurve","getEdgeShape","removeNode","cpx1","cpy1","cpx2","cpy2","radialCoor1","radialCoordinate","radialCoor2","curvature","radialCoor3","radialCoor4","_layoutHelper","_oldTree","_mainGroup","expandAndCollapse","CWSg","opacityMap","normal","itemOpacity","opacityAccessPath","CiLi","WhiskerBox","styleUpdater","_createContent","transInit","initBaseline","makeWhiskerEndsShape","whiskerEnds","ends","WhiskerBoxDraw","WhiskerPath","ctx","moveTo","lineTo","whiskerBoxProto","constDim","chartLayout","bodyEnds","updateMethod","whiskerBoxDrawProto","Cuh7","SankeyShape","extendShape","halfExtent","bezierCurveTo","closePath","nodeData","curve","n1Layout","n2Layout","edgeLayout","ty","D7EH","getAxisDimIndex","cartesianAxisHelper","CartesianAxisPointer","tooltipOptions","DHpS","getAxisType","axisName","makeStyleMapper","axisModelCreator","axisModelCommonMixin","AxisModel","setActiveIntervals","getActiveState","DPh+","BaseBarSeries","brushSelector","DZTl","visualMap","has","pieces","splitList","piece","obj","DknX","DataZoom","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","history","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","BrushTargetManager","include","makePanelOpts","xAxisDeclared","yAxisDeclared","dataZoomLang","dataZoom","DATA_ZOOM_ID_BASE","back","handlers","unmount","nextActive","setBatch","minMax","findDataZoom","minValueSpan","maxValueSpan","startValue","endValue","found","dzModel","matchOutputRanges","area","coordRange","batch","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","newOpt","$fromToolbox","dataZoomOpts","opts","toolboxOpt","DnWC","SunburstPiece","SunburstView","doRenderNode","newNode","oldNode","renderLabelForZeroData","that","newRoot","newChildren","oldChildren","_oldChildren","getKey","processNode","newId","oldId","viewRoot","_onclickEvent","_rootToNode","highlightPolicy","_initEvents","targetFound","nodeClick","linkTarget","targetNode","DpwM","handler","inner","records","initGlobalListeners","useHandler","eventType","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","pendingList","makeInner","E7aA","dataZoomInfo","theDataZoomId","theCoordId","coordId","dataZoomInfos","allCoordIds","cleanStore","createController","controllerParams","mergeControllerParams","containsPoint","throttleUtil","throttleRate","shouldRecordRange","generateCoordId","coordModel","newRecord","onPan","onZoom","newX","newY","wrapAndDispatch","panGetRange","zoomGetRange","getRange","typePriority","type_true","type_move","type_false","type_undefined","oneType","roamControllerOpt","E8YU","getItemAlign","visualMapModel","modelOption","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","dataIndexInside","ERCD","hierNode","defaultAncestor","ancestor","prelim","modifier","change","thread","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","apportion","secondWalk","nodeX","defaultSeparation","radialCoor","getViewRect","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","wl","wr","F8oC","TimelineModel","controlPosition","autoPlay","rewind","loop","playInterval","currentIndex","_names","_initData","setCurrentIndex","getCurrentIndex","isIndexMax","setPlayState","state","getPlayState","thisOption","dataArr","idxArr","newItem","getDataItemValue","dimType","category","FP3a","__webpack_exports__","injectStyle","ssrContext","Object","defineProperty","echarts_default","home","props","computed","watch","created","mounted","initLine","methods","getElementById","setOption","_vm","_h","$createElement","_c","_self","staticClass","attrs","slot","_v","staticStyle","float","staticRenderFns","esExports","pages_home","normalizeComponent","__vue_styles__","Fkmw","markAreaFilter","getSingleMarkerEndPoint","maModel","areaData","markAreaTransform","colorUtil","lt","rb","ltCoord","rbCoord","mergeAll","dimPermutations","markAreaModel","areaGroupMap","polygonGroup","__data","modifyAlpha","FlXs","checkTrigger","parallelPreprocessor","_api","_handlers","eventName","_throttledDispatchExpand","_dispatchExpand","_mouseDownPoint","mouseDownPoint","pow","getSlidedAxisExpandWindow","behavior","axisExpandWindow","debounceNextCall","FvdC","_roamHelper","updateCenterAndZoom","componentModel","setCenter","setZoom","seriesGroup","GQGX","timelineOpt","timeline","compatibleEC2","ec2Types","number","transferItem","controlStyle","itemStyleEmphasis","labelNormal","excludeLabelAttr","GWV8","calculateDataExtent","dataExtent","seriesExtent","getApproximateExtent","fixExtentByAxis","getMin","isCategoryAxis","axisDataLen","getMax","setAxisModel","isRestore","percentWindow","_percentWindow","_valueWindow","useOrigin","setRange","setMinMaxSpan","_minMaxSpan","_dataZoomModel","valueSpan","_dataExtent","AxisProxy","_dimName","_axisIndex","hostedBy","getDataPercentWindow","isCoordSupported","getOtherAxisModel","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","rangePropMode","getRangePropMode","boundValue","boundPercent","targetSeries","dataWindow","restore","isInWindow","filterMode","dataDims","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","selectRange","setApproximateExtent","GbHy","_barGrid","Gevp","RadarSeries","generateCoord","generateCoordCount","indicatorAxes","getIndicatorAxes","GnMB","normalizeSymbolSize","updateRipplePath","rippleGroup","effectCfg","ripplePath","EffectSymbol","beforeUpdate","_graphic","effectSymbolProto","stopEffectAnimation","startEffectAnimation","delay","period","effectOffset","rippleScale","animateStyle","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","propName","showEffectOn","Goha","intersectCurveCircle","curvePoints","t","radiusSquare","_t","v1","quadraticAt","mathAbs","v2DistSquare","next","v2","v3","nextDiff","tmp0","quadraticSubdivide","curveTool","pts2","v","__original","vec2","originalPoints","sub","normalize","scaleAndAdd","distSquare","Gp87","ComponentView","H4Od","TransformDummy","Transformable","View","_roamTransformable","_rawTransformable","_center","_zoom","vector","v2ApplyTransform","setBoundingRect","setViewRect","transformTo","_viewRect","rawTransform","calculateTransform","decomposeTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","getRoamTransform","rawTransformMatrix","roamTransform","defaultCenter","roamTransformable","rawTransformable","_rawTransform","invTransform","invert","getViewRectAfterRoam","noRoam","H4Wn","setSelected","HGSA","preprocessForPiecewise","pieceList","hasSpecialVisual","originIndex","visual","preprocessForSpecifiedCategory","categories","categoryMap","cate","visualArr","CATEGORY_DEFAULT_VISUAL_INDEX","setVisualToOption","normalizeVisualRange","doNotNeedPair","makePartialColorVisualHandler","applyValue","applyVisual","getter","setter","mapValueToVisual","_doMap","makeDoMap","doMapToArray","normalized","makeApplyVisual","doMapCategory","doMapFixed","sourceExtent","linear","piecewise","getSpecifiedVisual","fixed","pieceIndex","VisualMapping","findPieceIndex","parsedVisual","zrColor","littleThan","close","mappingMethod","_normalizeData","normalizers","visualHandler","visualHandlers","getColorMapper","assert","getNormalizer","isNormalized","returnRGBArray","fastLerp","stringify","modifyHSL","symbolCfg","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","updatePossible","newAbs","possibleI","pieceValue","HcG6","Geo","geoJson","specialAreas","_nameCoordMap","loadGeoJson","parseGeoJson","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","geoFixFuncs","containCoord","message","regionsMap","regionName","addGeoCoord","specialArea","_regionsMap","fixFunc","getRegion","getRegionByCoord","geoCoord","getGeoCoord","regionRect","ILx8","ITiI","gravity","random","pp","friction","v12","nLen","repFact","rep","IkDM","Breadcrumb","containerGroup","makeItemPoints","tail","ARRAY_LENGTH","splice","packEventData","itemNode","eventData","componentSubType","selfType","treePathInfo","wrapTreePathInfo","_treeHelper","onSelect","normalStyleModel","layoutParam","emptyItemWidth","totalWidth","renderList","_prepare","_renderContent","positionElement","TEXT_PADDING","lastX","availableSize","getAvailableSize","JFJR","IndicatorAxis","JIsR","legendModels","filterSeries","JMu0","Restore","restoreLang","resetOption","JNWs","GaugeSeries","dataOpt","splitNumber","axisLine","splitLine","axisTick","axisLabel","offsetCenter","detail","JRc4","Jd65","EffectPolyline","EffectLine","_lastFrame","_lastFramePercent","effectPolylineProto","createLine","updateAnimationPoints","_points","accLenArr","_offsets","_length","getLineLength","updateSymbolPosition","__t","offsets","frame","lastFrame","lerp","tx","JzYe","Single","_axis","_init","SingleAxis","_adjustAxis","_updateAxisTransform","extentSum","KAfT","linkedNodesFinder","createLinkedNodesFinder","eachAxisDim","effectedModels","apply","setRawRange","KGuM","aspect","viewList","coordSysType","positions","bbox","fromPoints","viewRect","bbWidth","bbHeight","viewWidth","viewHeight","viewCoordSys","KjPy","parallelAxisIndex","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","_initDimensions","setAxisExpand","axisModels","dependentModels","parallelAxis","LBXi","getFixedItemStyle","updateMapSelectHandler","mapDraw","mapOrGeoModel","fromView","_mouseDownFlag","__regions","action","updateMapSelected","otherRegionEl","MapDraw","updateGroup","_updateGroup","draw","isGeo","mapSeries","getHostGeoModel","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","compoundPath","CompoundPath","paths","dataIdx","regionModel","getRegionModel","geometries","geometry","exterior","interiors","showLabel","hoverShowLabel","isDataNaN","geoIndex","hoverSilentOnTouch","makeActionBase","LGKB","treeOption","treeDepth","expandTreeDepth","initialTreeDepth","getRawDataItem","collapsed","LRsb","unitAngle","cp1","x12","y12","LbEf","barPolar","LgWN","Heatmap","canvas","createCanvas","blurSize","pointSize","maxOpacity","minOpacity","_gradientPixels","colorFunc","isInRange","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","getContext","globalAlpha","drawImage","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","gradient","putImageData","brushCanvas","_brushCanvas","clearRect","shadowOffsetX","shadowBlur","shadowColor","arc","gradientPixels","pixelsSingleState","Uint8ClampedArray","LjPz","LzVd","sep","eachAfter","eachBefore","kx","ky","coorX","coorY","finalCoor","_traversalHelper","M9eA","travelTree","designatedVisual","levelItemStyles","seriesItemStyleModel","viewRootAncestors","nodeModel","nodeLayout","isInView","thisNodeColor","nodeItemStyleModel","ITEM_STYLE_NORMAL","levelItemStyle","visuals","buildVisuals","borderColorSaturation","calculateColor","calculateBorderColor","mapping","buildVisualMapping","visualName","getValueVisualDefine","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","childVisuals","mappingType","mapIdToIndex","MOpb","createEl","graphicType","graphicUtil","makePath","pathData","__customPathData","__customImagePath","__customText","Clz","charAt","__customGraphicType","updateEl","animatableModel","targetProps","elOptionStyle","targetStyle","prepareStyleTransition","targetOpacity","styleEmphasis","oldElStyle","makeRenderItem","customSeries","updateCache","currDataIndexInside","currDirty","currItemModel","currLabelNormalModel","LABEL_NORMAL","currLabelEmphasisModel","LABEL_EMPHASIS","currVisualColor","ITEM_STYLE_NORMAL_PATH","retrieve2","ITEM_STYLE_EMPHASIS_PATH","retrieve3","barLayout","getLayoutOnAxis","currentSeriesIndices","getCurrentSeriesIndices","renderItem","prepareResult","prepareCustoms","userAPI","getDevicePixelRatio","userParams","dataInsideLength","encode","wrapEncodeDef","encodeDef","dimInfo","isExtraCoord","coordDimIndex","doCreateOrUpdate","elOptionType","diffChildrenByName","diffGroupChildren","processAddUpdate","processRemove","GROUP_DIFF_PREFIX","childOption","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","cartesian2d","singleAxis","incrementalPrepareRender","incrementalRender","setIncrementalAndHoverLayer","MRvz","parallelAxisModel","MXTC","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","isMono","drawMono","drawNonMono","lastDiff","prevIdx","prevP","ctrlLen","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","fixClipWithShadow","stackedOnBBox","Mlni","fillLabel","formatUtil","dataFormatMixin","addCommas","MarkerModel","extraOpt","createdBySelf","hostSeries","__hostSeries","modelPropName","markerOpt","markerModel","formattedValue","Mn6+","markArea","MsVc","dirty","BoxplotView","Mxrs","minValue","mapValueToColor","customColor","N1UU","NAKW","_circularLayoutHelper","NGRG","datas","main","datasAttr","linkAll","TRANSFERABLE_METHODS","wrapMethod","transferInjection","cloneShallowInjection","CHANGABLE_METHODS","changeInjection","isMainData","DATAS","linkSingle","MAIN_DATA","cloneShallow","getLinkedData","NKek","targetCoordSysModel","getComponentByElement","topTarget","IRRELEVANT_EXCLUDES","NUWb","hasKeys","createVisualMappings","stateList","supplementVisualOption","createMappings","Creater","__hidden","visualMappings","mappings","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","keys","getValueState","scope","eachItem","valueOrIndex","rawDataItem","valueState","visualTypesMap","incrementalApplyVisual","NjeB","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","O523","treemapVisual","treemapLayout","OCS9","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","removeDuplicate","DEFAULT_TOOLBOX_BTNS","arr","flag","OQAC","PictorialBarSeries","symbolPosition","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","barGap","stack","OcRu","getIsInPiecewiseRange","dataSpan","lastIndex","getIsInContinuousRange","isGeoCoordSys","HeatmapLayer","visualMapOfThisSeries","eachTargetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","_renderOnGeo","hoverStl","inRangeVisuals","targetVisuals","inRange","outOfRangeVisuals","outOfRange","hmLayer","_hmLayer","lng","lat","getPieceList","OlnU","getColorStopValues","stopValues","VisualMapModel","DEFAULT_BAR_BOUND","ContinuousModel","calculable","hoverLink","hoverLinkDataSize","hoverLinkOnHandle","resetExtent","resetVisual","_resetRange","resetItemSize","auto","completeVisualOption","getSelected","findTargetDataIndices","getDataDimension","getVisualMeta","getColorVisual","setStop","oVals","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","outerColors","OpfW","dimIdx","Oq2I","Osoq","Ou7x","moveAnimation","propsEqual","lastProp","lastProps","newProps","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","clazzUtil","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","hide","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","useSnap","seriesDataCount","pointerEl","handleModel","onmousedown","_onHandleDragMove","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axesInfo","doClear","buildLabel","xy","wh","xDimIndex","enableClassExtend","OvrE","geoCreator","MapSeries","needsDrawMap","getFilledRegions","getMapType","_fillOption","mapName","seriesNames","otherIndex","originalData","getTooltipPosition","aspectScale","showLegendSymbol","dataRangeHoverLink","boundingCoords","scaleLimit","OxCu","getSeriesByIndex","queryDataIndex","P05t","array","keysFunction","keyFunction","mapObject","valuesByKey","keyValue","entriesMap","sortKeyFunction","sortKeysFunction","sortKeys","P0a5","global","compatEc2","itemOpt","fromName","toName","concatArray","globalObj","Uint32Arr","Uint32Array","Float64Arr","Float64Array","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","appendData","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","dataCount","buffer","preventIncremental","getProgressive","getProgressiveThreshold","progressiveThreshold","effect","constantSpeed","trailLength","largeThreshold","P7Q7","effectType","rippleEffect","P7ry","PBlc","resizePolar","polarModel","updatePolarScale","setAxis","_axisHelper","polarCreator","polarList","radiusAxisModel","findAxisModel","PKM0","version","sources","file","sourceRoot","PWa9","sampling","rate","sampler","samplers","downSample","indexSampler","average","nearest","PYc7","PdL8","mapModel","_mapDraw","_renderSymbols","fullData","mainSeries","fullIndex","polygonGroups","normalText","emphasisText","extendFrom","__mapOriginalZ2","PiQa","_createPolyline","polylineProto","_updateCommonStl","Pmfi","Definable","zrId","svgRoot","tagNames","markLabel","domName","_zrId","_svgRoot","_tagNames","_markLabel","_domName","nextId","ZText","getDefs","isForceCreating","defs","insertBefore","element","onUpdate","dom","addDom","removeDom","getDoms","doms","tags","markAllUnused","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","Po+l","seriesModelMixin","BoxplotSeries","defaultValueDimensions","boxWidth","shadowOffsetY","Pobh","getBarItemStyle","excludes","getBorderLineDash","Pwgp","TimelineAxis","_autoLabelInterval","getLabelInterval","timelineModel","labelInterval","getAxisLabelInterval","getTicks","Q5xN","checkParentAvailable","insertAfter","prevSibling","prepend","util","GradientManager","ClippathManager","ShadowManager","SVGPainter","_opts","gradientManager","clipPathManager","shadowManager","viewport","_viewport","_visibleList","setBackgroundColor","background","visibleList","listLen","newVisibleList","svgProxy","svgElement","prevSvgElement","textSvgElement","addWithoutUpdate","_getDefs","display","_getSize","viewportStyle","whIdx","cwh","plt","prb","defaultView","getComputedStyle","pathToDataUrl","outerHTML","QCrJ","seriesInvolved","coordSysMap","collectAxesInfo","collectSeriesInfo","linksOption","linkGroups","getCoordinateSystems","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","useHandle","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","coordSysKey","triggerAxis","cross","tooltipAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","seriesTooltipTrigger","seriesTooltipShow","linkOption","checkPropInLink","linkPropValue","axisPropValue","QML+","locals","QZ7o","processedMapType","mapType","mapSymbolOffsets","subMapSeries","QbUQ","getLabelPosition","axisAngle","translate","labelRotation","innerTextLayout","PolarAxisPointer","coordValue","capitalFirst","labelPos","buildLabelElOption","makeSectorShape","Qv0P","Region","R0U9","scrollDataIndex","setScrollDataIndex","RAps","cellWidth","cellHeight","dayCount","RKzr","RTd5","MagicType","magicTypeLang","magicType","bar","tiled","seriesOptGenreator","markLine","radioTypes","generateNewSeriesTypes","newSeriesOpt","categoryAxis","radio","currentType","RjA7","labelDims","retrieveRawValue","vals","S+iL","setAreas","SMB/","hasShadow","textShadowBlur","textShadowOffsetX","textShadowOffsetY","_shadowDom","_shadowDomId","updateDom","domChild","blur","textShadowColor","stdDx","stdDy","stdDeviation","SZjP","markerModelKey","SlE6","diffData","newData","diffResult","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","prepareDataCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","dataDimsForPoint","getStackedOnPoint","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","current","stackedOnCurrent","stackedOnNext","_helper","T6W2","graphSeries","categoriesData","getCategoriesData","categoryNames","TCXJ","AxisPointerModel","shadowStyle","TDz/","__clipPaths","parentEl","clipPaths","clipPathEl","mul","cloneNode","_dom","_textDom","TTCf","TXKS","colorQuery","opacityQuery","UOrf","getSortedIndices","valueArr","isAscending","textY","labelPosition","isLabelInside","labelLineLen","sizeExtent","funnelAlign","gap","getLinePoints","offY","US3d","LargeLineDraw","IncrementalDisplayable","lineContain","quadraticContain","LargeLineShape","segs","quadraticCurveTo","findDataIndex","containStroke","largeLineProto","lineEl","rectHover","_setCommon","addDisplayable","__startIndex","isIncremental","UeW/","targetElParent","elMap","__ecGraphicId","removeEl","existEl","existElParent","removeKey","getCleanedElOption","LOCATION_PARAMS","isSetLoc","isSet","setKeyInfoToNewElOption","resultItem","newElOption","existElOption","exist","keyInfo","parentId","newElParentOption","parentOption","mergeNewElOptionToExist","existList","newElOptCopy","$action","mergeLayoutParam","copyLayoutParams","setLayoutInfoToExist","existItem","hv","graphicOption","elements","GraphicModel","_elOptionsToUpdate","newList","flattenedList","_flatten","mappingResult","mappingToExists","makeIdAndName","elOptionsToUpdate","optionList","useElOptionsToUpdate","els","_elMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","textBaseline","elOptionCleaned","__ecGraphicWidth","__ecGraphicHeight","elOptions","containerInfo","boundingMode","bounding","UkNE","Vb+l","createDataSelectAction","pieLayout","VewU","createElementNS","svgURI","VmZa","registerPainter","WK/r","_labelInterval","WO3U","WbrJ","roams","InsideZoomView","coordSysName","coordInfo","dataZoomOption","_onPan","_onZoom","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","WxG6","geoCoordMap","cp","Russia","United States","United States of America","XAC3","buildTooltipModel","modelCascade","resultModel","tooltipOpt","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","isCenterAlign","TooltipContent","findPointFromSeries","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","wxa","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","axisId","getAxisRawValue","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","formatTpl","cbTicket","setContent","getSize","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","XCrL","targetInfoList","_targetInfoList","foundCpts","parseFinder","targetInfoBuilders","builder","formatMinMax","includeMainTypes","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","rangeOrCoordRange","xyMinMax","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","COORD_CONVERTS","setOutputRanges","coordRanges","coordConvert","__rangeOffset","diffProcessor","findTargetInfo","coordSyses","setInputRanges","rangeOffset","getDefaultBrushType","getPanelRect","defaultBrushType","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","geoModels","xminymin","xmaxymax","XFat","XLwt","_echarts","_export","XRkS","actionInfos","XhgW","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","len2","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelLineLen2","labelRotate","XiVP","VisualMapView","PiecewiseVisualMapView","doRender","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","textGap","_getItemAlign","viewData","_getViewData","endsText","_renderEndsText","viewPieceList","renderBackground","positionGroup","onHoverLink","shapeParam","getControllerVisual","newKey","getSelectedMapKey","o","visualMapId","Y3kp","pointsLayout","effectSymbolDraw","_updateGroupTransform","YbE0","groupResult","groupSeriesByAxis","groupItem","calculateBase","layoutSingleSeries","boxOffsetList","boxWidthList","axisList","seriesCount","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","base","cDim","halfWidth","variableDim","coordDims","vDims","getPoint","axisDimVal","addBodyEnd","point1","point2","layEndLine","endCenter","args","median","end1","end5","YpIy","newZoom","zoomMin","zoomMax","zoomScale","YqdL","YsUA","Z2m1","mapLocation","ZJ+T","normalizeRect","localPoints","clipPointsByRect","specifiedXYIndex","xyIndex","brushWidth","targetModel","localCursorPoint","ZRmN","foundAxisModel","ZgE8","sourcesContent","ZtEr","ZuqD","SliderTimelineModel","checkpointStyle","showPlayBtn","showPrevBtn","showNextBtn","playIcon","stopIcon","nextIcon","prevIcon","a1DW","CandlestickSeries","color0","borderColor0","barMaxWidth","barMinWidth","barWidth","animationUpdate","selectors","brushRect","aYad","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","toHex","borderName","camelCase","toCamelCase","normalizeCssArray","container","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","normalizeEvent","dispatch","onmouseleave","_hideDelay","domStyle","viewportRootOffset","painter","isShow","akwy","paletteScope","categoryNameIdxMap","getColorFromPalette","auIi","ToolboxModel","showTitle","iconStyle","ay5B","rectBound","positionMap","horizontal","vertical","directionMap","tickDirection","nameDirection","b/SY","getTargetSeries","seriesModelMap","isOverallFilter","overallReset","valueRange","bzOU","makeSymbolTypeKey","symbolCategory","symbolUtil","LinePath","setLinePoints","updateSymbolAndLabelBeforeLineUpdate","lineGroup","symbolFrom","childOfName","symbolTo","fromPos","pointAt","toPos","tangent","tangentAt","__position","halfPercent","__verticalAlign","__textAlign","_createLine","SYMBOL_CATEGORIES","lineProto","visualOpacity","defaultLabelColor","rawVal","labelStyle","linePath","cI6i","doCreateNode","vmlInited","styleSheets","createStyleSheet","addRule","urn","win","namespaces","zrvml","cN90","coordSysCreator","cO/Q","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","dataCoordInfo","xExtent","yExtent","expandSize","createPolarClipShape","createClipShape","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stopLen","minCoord","maxCoord","coordSpan","unshift","LinearGradient","lineAnimationDiff","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","valueOrigin","showSymbol","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","coordSysClipShape","isIgnore","clipShape","_stackedOnPoints","_updateAnimation","_newPolyline","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","animators","during","cU6c","coordFix","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","cWq4","sankeyLayout","sankeyVisual","ct4P","dimAxisMapper","_axes","_dimList","toLowerCase","_dataCoordConvert","input","dimList","output","cuL/","d1IL","beforeLink","linkNameList","validEdges","linkCount","coordSysCtor","dimensionNames","dCQY","dZZy","symbolCtor","_symbolCtor","normalizeUpdateOpt","symbolDrawProto","SymbolCtor","enableAnimation","dp0Z","mergeAndNormalizeLayoutParams","raw","ScrollableLegendModel","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","inputPositionParams","dtW/","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","minDiff","seriesNestestValue","dataDim","indicesOfNearest","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","outputAxesInfo","valItem","sampleItem","escapeConnect","lastHighlights","newHighlights","toHighlight","toDownplay","dzlV","normalStyle","labelPositionOutside","fixPosition","e+YR","createWrap","doneCallback","elExistsMap","easing","done","eH0a","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","themeModel","getTheme","getDefaultOption","__ordinalMeta","OrdinalMeta","createByAxisModel","getOrdinalMeta","axisDefault","eHPu","removeRect","removeSector","isPolar","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","barItemStyle","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","isUpdate","rectShape","animateProperty","animateTarget","isRadial","fixedLineWidth","signX","signY","eQYg","FunnelSeries","minSize","ecfp","resetRange","restoreData","gridIndex","gridId","extraOption","envY","SliderZoomModel","dataBackground","areaStyle","fillerColor","handleIcon","handleStyle","showDetail","f0h+","commonLayout","fAbo","positiveColorQuery","negativeColorQuery","positiveBorderColorQuery","negativeBorderColorQuery","fm2I","squarify","hideChildren","thisLayout","PATH_BORDER_WIDTH","halfGapWidth","PATH_GAP_WIDTH","upperLabelHeight","getUpperLabelHeight","upperHeight","layoutOffset","layoutOffsetUpper","totalArea","rowFixedLength","mathMin","best","row","score","worst","squareRatio","childrenVisibleMin","orderBy","overLeafDepth","leafDepth","statistic","filterByThreshold","isLeafRoot","orderedChildren","visibleMin","deletePoint","areaMax","areaMin","squareArea","f","flush","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","estimateRootSize","containerWidth","containerHeight","currNode","defaultSize","viewArea","zoomToNodeRatio","currNodeValue","MAX_SAFE_INTEGER","calculateRootPosition","rootRect","defaultPosition","targetCenter","prunning","clipRect","viewAbovePath","nodeInViewAbovePath","isAboveViewRoot","intersect","childClipRect","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","retrieveValue","ecWidth","ecHeight","seriesOption","payloadType","getPathToRoot","rootSize","viewRootLayout","childValue","setLayoutInfo","g8A/","seriesItem","gLqW","completeTreeValue","thisValue","setDefault","globalColorList","hasColorDefine","modelColor","_viewRoot","hoverLayerThreshold","clipWindow","drillDownIcon","roam","breadcrumb","ellipsis","upperLabel","gapWidth","visualDimension","idIndexMap","_idIndexMap","_idIndexMapCount","gOx9","validPayloadTypes","targetNodeId","viewPath","nodeDataIndex","gZam","createPolygon","onDrift","onDragEnd","createHandlePoints","textSize","createIndicatorPoints","isRange","halfHoverLinkSize","extentMax","HOVER_LINK_OUT","getHalfHoverLinkSize","HOVER_LINK_SIZE","useHoverLinkOnHandle","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","targetGroup","shapes","_createBarGroup","_dragHandle","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","handleThumb","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","_clearHoverLinkToSeries","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","forceState","convertOpacityToAlpha","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","formatValueText","_showIndicator","cursorValue","textValue","rangeSymbol","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","hoverRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","isTargetSeries","ghha","singles","guZJ","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverPolygonIgnore","polygonIgnore","hoverAreaStyleModel","itemHoverStyle","labelDimIndex","h4VJ","FunnelPiece","funnelPieceProto","FunnelView","funnelPiece","h6Uy","idxMap","hG1p","hZf2","fillOrStroke","hdbT","updateController","$from","modelId","brushId","i6Ks","createParallelIfNeeded","mergeAxisOptionFromParallel","parallel","hasParallelSeries","normalizeToArray","axisOption","parallelOption","iEm+","playState","iZVd","icur","generateBrushOption","transformable","visualSolution","DEFAULT_OUT_OF_BRUSH_COLOR","BrushModel","brushLink","throttleType","throttleDelay","inBrush","outOfBrush","setBrushOption","ii60","previousZoom","fixX","fixY","ilLo","save","coordIndex","coordSysLists","ilox","ix3c","createStorage","nodeGroup","thisStorage","oldStorage","reRoot","lastsForAnimation","willInvisibleEls","thisNode","parentGroup","thisInvisible","__tmWillVisible","prepareText","emphasisStyle","upperLabelRect","iconChar","normalLabelModel","PATH_UPPERLABEL_NORMAL","PATH_LABEL_NOAMAL","emphasisLabelModel","PATH_UPPERLABEL_EMPHASIS","PATH_LABEL_EMPHASIS","truncate","outerWidth","outerHeight","minChar","giveGraphic","storageName","Ctor","oldRawIndex","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","prepareAnimationWhenNoOld","thisRawIndex","old","lastCfg","parentOldX","parentOldY","parentOldBg","fadein","thisWidth","thisHeight","thisViewChildren","isParent","itemStyleNormalModel","itemStyleEmphasisModel","__tmNodeWidth","__tmNodeHeight","bg","Z_BG","useUpperLabel","visualBorderColor","emphasisBorderColor","getItemStyleNormal","getItemStyleEmphasis","upperLabelWidth","Z_CONTENT","contentWidth","contentHeight","zInLevel","zb","Z_BASE","animationUtil","_containerGroup","_storage","_breadcrumb","_state","models","rootNodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","dualTravel","oldViewChildren","sameTree","willDeleteEls","thisTree","oldTree","delEls","__tmWillDelete","animationWrap","targetX","targetY","_clearController","findTarget","_zoomToNode","bgEl","jJrn","Radar","radarModel","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorAxis","IntervalScale","getScaleExtent","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","increaseInterval","exp10","log","LN10","radarSeries","rawExtent","fixedMin","fixedMax","getInterval","setInterval","nicedSplitNumber","halfSplitNumber","radarList","jLnL","jMTz","clipOverflow","showAllSymbol","jpt2","k7nC","k9Bd","kQD9","_targetList","_selectTargetMap","reduce","targetMap","koEO","rawAxisPosition","axisOffset","posBound","onZeroCoord","dirMap","labelOffset","l2wH","l4Op","lVde","axisBuilderAttrs","_buildAxes","_buildSplitLineAndArea","axisBuilders","getColorIndex","areaOrLine","areaOrLineColorList","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","Ring","realSplitNumber","axesTicksPoints","ticksCoords","tickCoord","prevPoints","lwXq","pointsConverter","m5oG","getSymbolMeta","symbolMeta","prepareBarLength","prepareSymbolSize","boundingLength","pxSign","prepareLineWidth","symbolScale","prepareLayoutInfo","valueLineWidth","repeatCutLength","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","categoryDim","categorySize","pathForLineWidth","unitLength","pathLen","absBoundingLength","hasEndGap","uLenWithMargin","endFix","repeatSpecified","isNumeric","repeatTimes","toIntTimes","sizeFix","pathPosition","bundlePosition","barRectShape","createPath","createOrUpdateRepeatSymbols","makeTarget","unit","onMouseOver","eachPath","onMouseOut","bundle","__pictorialBundle","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","updateHoverAnimation","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","getAnimationDelayParams","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","updateBar","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","updateCommon","barRectHoverStyle","barPositionOutside","posDesc","times","roundedTimes","LAYOUT_ATTRS","BarView","coordSysRect","pictorialShapeStr","mLyJ","getSeriesStackId","getAxisKey","barLayoutPolar","lastStackCoords","barWidthAndOffset","calRadialBar","getSeriesByType","stackId","columnLayoutInfo","columnOffset","columnWidth","baseDim","stacked","valueAxisStart","baseValue","baseCoord","radiusSpan","angleSpan","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","maxWidth","barCategoryGap","barGapPercent","autoWidth","column","lastColumn","widthSum","mcsk","take","resourceKey","userKey","getStore","release","miEh","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","disableBox","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","mlpt","normalizeReverse","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","exists","hasSel","pieceInterval","curr","splitStep","pieceListItem","closeList","infinityList","useMinMax","lg","edgeSymbols","n/n4","n3NR","brushSelected","DISPATCH_FLAG","DISPATCH_METHOD","doDispatch","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","sels","selector","selectorsByElementType","bSelector","sel","brushModelNotControll","seriesIndices","bindSelector","selFn","elType","getBoundingRectFromMinMax","STATE_LIST","PRIORITY_BRUSH","VISUAL","BRUSH","brushIndex","linkOthers","linkedSeriesMap","brushed","stepAParallel","hasBrushExists","hasAxisBrushed","selectedDataIndexForLink","stepAOthers","thisBrushSelected","brushName","rangeInfoBySeries","boundingRect","boundingRectBuilders","seriesBrushSelected","nQkE","baseY0","layerPoints","singleLayer","computeBaseline","baseLine","layerIndex","temp","sums","nUSl","mapSymbolLayout","mapDataStatistic","backwardCompat","nV/6","o0k+","oDOe","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","baseUID","mouseHandlers","doEnableBrush","MUTEX_RESOURCE_KEY","DEFAULT_BRUSH_OPT","doDisableBrush","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","getPanelByPoint","panels","panel","_transform","pn","getPanelByCover","clearCovers","covers","originalLength","shouldShowCover","track","mathPow","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","localD","localZero","xmin","ymin","resetCursor","currPanel","setCursorStyle","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","determineBrushType","getCreatingRange","handleDragEnd","getLineRenderer","localTrack","ne","nw","se","panelOpts","eachCover","brushOptionList","tmpIdPrefix","oldGetKey","addOrUpdate","newBrushOption","oldCovers","newCovers","oYIf","makeIcon","objPath","giveSymbol","onCreate","pointerMoveTo","noAnimation","dragging","pointerModel","TimelineView","_timer","_currentPointer","_labelGroup","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","playPosition","prevBtnPosition","nextBtnPosition","xLeft","xRight","labelAlign","labelBaseline","setOrigin","viewBound","getBound","toBound","boundIdx","rotateOriginX","rotateOriginY","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","_customizeScale","niceTicks","getTicksLabels","newGroup","_renderAxisLine","_renderAxisTick","ticks","hoverStyleModel","symbolOpt","_changeTimeline","tick","_renderControl","makeBtn","iconPath","willRotate","btn","_handlePlayClick","_renderCurrentPointer","me","_handlePointerDrag","_handlePointerDragend","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","handleFrame","axisCoord","nextIndex","od06","og9+","restrict","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","currDistSign","oqQy","ifIgnoreOnTick","SingleAxisView","selfBuilderAttr","lineInterval","showMinLabel","showMaxLabel","getLineDash","orv6","p1Ck","pSwa","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","getNodeColor","getRootId","isNodeHighlighted","activeNode","policy","NodeHighlightPolicy","SELF","ANCESTOR","DESCENDANT","SunburstPieceProto","stateStyle","onHighlight","onDownplay","getLabelAttr","stateAttr","normalModel","labelMinAngle","labelPadding","rotateType","pmYM","pzOI","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","forceInstance","oldStep","_forceHelper","qBny","qSkD","coordSysList","Parallel","qbKW","parallelVisual","r9WW","rFvp","layoutAxis","selfBuilderAttrs","prevRadius","rTVE","rbn0","ri8f","seiresModelMap","__paletteScope","dataAll","filteredIdx","singleDataColor","rjsW","radarLayout","rwkR","s/lY","nameLocation","nameRotate","nameTruncate","placeholder","nameTextStyle","nameGap","triggerEvent","splitArea","deduplication","alignWithLabel","timeAxis","logAxis","logBase","s1Aj","coordType","COORDS","createNameEach","capitalNames","capitalAttrs","nameObj","capital","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","isLinked","hasLink","edgeId","absorb","sourceNode","processSingleNode","existsLink","AXIS_DIMS","s48c","CartesianAxisView","anid","prevX","prevY","areaInterval","sJ4e","retrieveRaw","updateRangeUse","rawOption","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","is","seriesAxisIndex","globalOption","firstAxisModel","ignoreUpdateRangeUsg","getValueRange","axisDimName","sK5G","_baseAxisDim","ordinalMeta","addOrdinal","xAxisType","yAxisType","baseAxisDimIndex","baseAxisDim","baseAxisType","otherAxisType","newOptionData","otherDims","dimsDef","whiskerBoxDraw","_whiskerBoxDraw","sOJ4","isLine","straightLineProto","bezierCurveProto","sTIA","parsePosition","formatLabel","PointerPath","GaugeView","posInfo","_renderMain","axisLineModel","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","forceRich","detailModel","textWidth","textHeight","sYrQ","_axesLayout","layoutAxisWithoutExpand","layoutLength","axisCount","axisNameAvailableWidth","axisLabelShow","layoutAxisWithExpand","nameTruncateMaxWidth","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","mathFloor","mathCeil","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","_layoutAxes","winSize","layoutExtent","positionTable","rotationTable","axisCoordToPoint","dataDimensions","hasActiveSet","lenj","pointCoord","triggerArea","useJump","srbS","resizeGeo","leftTop","rightBottom","boxLayoutOption","useCenterAndSize","setGeoCoords","geoList","mapData","getMap","mapModelGroupBySeries","nameMapList","singleMapSeries","originRegionArr","regionsArr","dataNameMap","properties","swsf","tQk0","tzpD","valueStart","getValueStart","valueAxisDim","baseDataOffset","stackedOverDimension","stackedData","u9lB","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","other","assembleSeriesWithCategoryAxis","tables","headers","columns","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","argLen","getContentFromModel","trim","isTSVFormat","block","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","RegExp","blockMeta","axisKey","DataView","tryMergeDataOption","original","dataViewLang","dataView","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","getOption","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","addEventListener","Error","keyCode","which","selectionStart","selectionEnd","substring","newSeriesOptList","u9yV","uA0k","_updateEffectSymbol","curveUtil","effectLineProto","effectModel","_updateEffectAnimation","delayExpr","isDelayFunc","_period","_loop","animator","__p1","__cp1","__p2","quadraticDerivativeAt","uNEE","LargeSymbolDraw","_updateSymbolDraw","_finished","isLargeDraw","_isLargeDraw","uv9t","LargeSymbolPath","symbolProxy","symbolProxyShape","fillRect","restoreTransform","largeSymbolProto","startIndex","endIndex","byteOffset","extrudeShadow","v/cD","boxLayoutParams","layoutBox","vEM8","updateMarkerLayout","mpData","mpModel","markPointModel","symbolDrawMap","vIe4","dataStatistics","statisticType","mapKey","seriesGroups","hostGeoModel","seriesList","veIh","vjPX","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","remRadian","onLeft","isRadianAroundZero","isSilent","fixMinMaxLabelShow","labelEls","tickEls","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","matrixUtil","identity","isNameLocationCenter","buildAxisTick","tickInterval","pt1","pt2","ticksCnt","tickEl","buildAxisLabel","tickVal","itemLabelModel","labelStr","targetType","_dumbGroup","dumbGroup","hasBuilder","builders","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","gapSignal","nameRotation","truncateOpt","truncatedText","truncateText","__fullText","__truncatedText","axisRotation","rawTick","vx1D","hasXOrY","hasXAndY","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","getPrecision","markerTypeCalculator","baseDataDim","dataDimToCoordDim","dimItem","vxwL","candleWidth","calculateCandleWidth","subPixelOptimize","subPixelOptimizePoint","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","highestPoint","pmin","pmax","w2H/","resultVisual","VISUAL_PRIORITY","COMPONENT","createOnAllSeries","resetDefines","concreteDim","w6Zv","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","formatTplSimple","_yearTextPositionControl","aligns","yearLabel","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","monthLabel","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","dayLabel","firstDayOfWeek","weekText","wH4Y","replacableOptionKeys","dataBound","contentColor","controllerVisuals","getTargetSeriesIndices","optionSeriesIndex","isMinMax","optDim","listDimensions","isCalculationCoord","completeSingle","defa","completeInactive","stateExist","stateAbsent","optExist","optAbsent","completeController","symbolExists","symbolSizeExists","wLWv","LegendView","ScrollableLegendView","_currentIndex","_controllerGroup","_showController","__rectSize","createPageButton","iconIdx","pageDataIndexName","_pageGo","controllerGroup","pageTextStyleModel","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","total","pageCount","getItemRect","itemRect","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemLoc","winRect","startIdx","startItem","startRect","wQkr","wTOJ","computeNodeValues","layoutSankey","iterations","computeNodeBreadths","computeNodeDepths","computeEdgeDepths","value1","getEdgeValue","value2","remainNodes","nextNode","moveSinksRight","scaleNodeBreadths","nodesByBreadth","ascending","initializeNodeDepth","resolveCollisions","relaxRightToLeft","relaxLeftToRight","kyArray","ky0","nodeDy","edgeDy","ascendingDepth","nodeY","weightedTarget","weightedSource","ascendingTargetDepth","ascendingSourceDepth","whrq","selectableMixin","GeoModel","_optionModelMap","optionModelMap","regionOpt","xLO3","defaultsShow","valueAxisDefault","RadarModel","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","yEXw","hvIdx","sizeCalculable","CalendarModel","z+uQ","linesLayout","_updateLineDraw","isSvg","getLayer","_lastZlevel","configLayer","motionBlur","_showEffect","lastFrameAlpha","_clearLayer","hasEffect","_hasEffet","_isPolyline","z81E","GraphSeries","_categoriesData","fillDataTextStyle","_updateCategoriesData","edgeGetParent","parsePath","fakeSeriesModel","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","customizeGetParent","sourceName","targetName","circular","rotateLabel","edgeSymbol","edgeSymbolSize","edgeLabel","zAPJ","styleModel","paddings","confineInContainer","bgColor","zO13","autoPositionValues","targetValue","visualCluster","visualObj","defaultColor","visualMapping","zjhG","linesVisual","zlsk","getLineSelectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","nearZero","namenda","miu","v4","polygonContain","zz1u"],"mappings":"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","file":"static/js/0.b3e4449d8b8370f0b1f8.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"+Dgo\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"82Fv\");\n\nvar echarts = __webpack_require__(\"Icdr\");\n\necharts.extendComponentView({\n  type: 'dataset'\n});\n\n/***/ }),\n\n/***/ \"+PQg\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar listComponentHelper = __webpack_require__(\"v/cD\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"+bDV\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    // Anication is forbiden in progressive data mode.\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"+bS+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar BaseAxisPointer = __webpack_require__(\"Ou7x\");\n\nvar viewHelper = __webpack_require__(\"zAPJ\");\n\nvar singleAxisHelper = __webpack_require__(\"ay5B\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"+jMe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar linkList = __webpack_require__(\"NGRG\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar createDimensions = __webpack_require__(\"hcq/\");\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"+pdh\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar helper = __webpack_require__(\"gOx9\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"+u5N\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createGraphFromNodeEdge = __webpack_require__(\"d1IL\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"/99E\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"0BOU\");\n\n__webpack_require__(\"yEXw\");\n\n__webpack_require__(\"w6Zv\");\n\n/***/ }),\n\n/***/ \"/BOW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"/gZK\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createDimensions = __webpack_require__(\"hcq/\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"/vN/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = __webpack_require__(\"kQD9\");\n\nvar _dataProvider = __webpack_require__(\"5KBG\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0BNI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.getCategories();\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0BOU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0O1a\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar preprocessor = __webpack_require__(\"DZTl\");\n\n__webpack_require__(\"Osoq\");\n\n__webpack_require__(\"w2H/\");\n\n__webpack_require__(\"mlpt\");\n\n__webpack_require__(\"XiVP\");\n\n__webpack_require__(\"H4Wn\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n\n/***/ \"0fQF\":\n/***/ (function(module, exports) {\n\n// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0jKn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrLog = __webpack_require__(\"eZxa\");\n\nvar vmlCore = __webpack_require__(\"cI6i\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0nGg\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar LineDraw = __webpack_require__(\"6n1D\");\n\nvar RoamController = __webpack_require__(\"5Mek\");\n\nvar roamHelper = __webpack_require__(\"YpIy\");\n\nvar _cursorHelper = __webpack_require__(\"NKek\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar adjustEdge = __webpack_require__(\"Goha\");\n\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0pMY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1A4n\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1FNb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"z81E\");\n\n__webpack_require__(\"0nGg\");\n\n__webpack_require__(\"iZVd\");\n\nvar categoryFilter = __webpack_require__(\"T6W2\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar categoryVisual = __webpack_require__(\"akwy\");\n\nvar edgeVisual = __webpack_require__(\"TXKS\");\n\nvar simpleLayout = __webpack_require__(\"4RQY\");\n\nvar circularLayout = __webpack_require__(\"NAKW\");\n\nvar forceLayout = __webpack_require__(\"pzOI\");\n\nvar createView = __webpack_require__(\"KGuM\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});\n\n/***/ }),\n\n/***/ \"1Nix\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = __webpack_require__(\"CqCN\");\n\nvar _dataStackHelper = __webpack_require__(\"qVJQ\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      if (isDimensionStacked(data, dims[0], dims[1])) {\n        dims[0] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      if (isDimensionStacked(data, dims[1], dims[0])) {\n        dims[1] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1VkX\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _whiskerBoxCommon = __webpack_require__(\"sK5G\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1bHA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(\"RjA7\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1bf2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"PBlc\");\n\n__webpack_require__(\"rFvp\");\n\n/***/ }),\n\n/***/ \"1uRk\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _clazz = __webpack_require__(\"BNYN\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"2Ow2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"2W4A\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"2m1D\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"2tOJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"orv6\");\n\n__webpack_require__(\"vEM8\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});\n\n/***/ }),\n\n/***/ \"3n/B\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"PBlc\");\n\n__webpack_require__(\"0BNI\");\n\n/***/ }),\n\n/***/ \"43ae\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar axisPointerModelHelper = __webpack_require__(\"QCrJ\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"4A6G\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createRenderPlanner = __webpack_require__(\"CqCN\");\n\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 2);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"4RQY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = __webpack_require__(\"rbn0\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"4SGL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"4SW2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar preprocessor = __webpack_require__(\"DZTl\");\n\n__webpack_require__(\"Osoq\");\n\n__webpack_require__(\"w2H/\");\n\n__webpack_require__(\"OlnU\");\n\n__webpack_require__(\"gZam\");\n\n__webpack_require__(\"H4Wn\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n\n/***/ \"4UDB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"jMTz\");\n\n__webpack_require__(\"cO/Q\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar layoutPoints = __webpack_require__(\"1Nix\");\n\nvar dataSample = __webpack_require__(\"PWa9\");\n\n__webpack_require__(\"UkNE\");\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n/***/ }),\n\n/***/ \"4V7L\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"ghha\");\n\n__webpack_require__(\"oqQy\");\n\n__webpack_require__(\"rwkR\");\n\n__webpack_require__(\"AKXb\");\n\n__webpack_require__(\"+bS+\");\n\necharts.extendComponentView({\n  type: 'single'\n});\n\n/***/ }),\n\n/***/ \"4w1v\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(\"VewU\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar textHelper = __webpack_require__(\"qjrH\");\n\nvar Text = __webpack_require__(\"/86O\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation * 180 / Math.PI;\n    attr(textSvgEl, 'transform', 'rotate(' + rotate + ',' + x + ',' + y + ')');\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n/***/ }),\n\n/***/ \"5/bM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"eQYg\");\n\n__webpack_require__(\"h4VJ\");\n\nvar dataColor = __webpack_require__(\"ri8f\");\n\nvar funnelLayout = __webpack_require__(\"UOrf\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));\n\n/***/ }),\n\n/***/ \"56C7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar globalListener = __webpack_require__(\"DpwM\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5Hn/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar throttle = __webpack_require__(\"QD+P\");\n\nvar DataZoomView = __webpack_require__(\"ilLo\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5KWC\":\n/***/ (function(module, exports) {\n\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5Mek\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Eventful = __webpack_require__(\"qjvV\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar interactionMutex = __webpack_require__(\"mcsk\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5dr1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Cartesian = __webpack_require__(\"ct4P\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5vFd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar Cartesian2D = __webpack_require__(\"5dr1\");\n\nvar Axis2D = __webpack_require__(\"RKzr\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n__webpack_require__(\"BuI2\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6HcI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6HoR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _poly = __webpack_require__(\"MXTC\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6JAQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6MCj\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar _vector = __webpack_require__(\"C7PF\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar colorTool = __webpack_require__(\"DRaW\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar textHelper = __webpack_require__(\"qjrH\");\n\nvar RectText = __webpack_require__(\"taS8\");\n\nvar Displayable = __webpack_require__(\"9qnA\");\n\nvar ZImage = __webpack_require__(\"MAom\");\n\nvar Text = __webpack_require__(\"/86O\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar Gradient = __webpack_require__(\"wRzc\");\n\nvar vmlCore = __webpack_require__(\"cI6i\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n/***/ }),\n\n/***/ \"6UfY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6axr\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar RadiusAxis = __webpack_require__(\"YqdL\");\n\nvar AngleAxis = __webpack_require__(\"6UfY\");\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6f6q\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ \"6n1D\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar LineGroup = __webpack_require__(\"bzOU\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"7XrG\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"7bL3\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"4V7L\");\n\n__webpack_require__(\"8DFW\");\n\n__webpack_require__(\"6HoR\");\n\nvar themeRiverLayout = __webpack_require__(\"nQkE\");\n\nvar themeRiverVisual = __webpack_require__(\"h6Uy\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));\n\n/***/ }),\n\n/***/ \"80cc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"6JAQ\");\n\n__webpack_require__(\"6f6q\");\n\n__webpack_require__(\"8RN9\");\n\nvar legendFilter = __webpack_require__(\"JIsR\");\n\nvar Component = __webpack_require__(\"Y5nL\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ \"80zD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n__webpack_require__(\"whrq\");\n\n__webpack_require__(\"srbS\");\n\n__webpack_require__(\"jpt2\");\n\n__webpack_require__(\"FvdC\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});\n\n/***/ }),\n\n/***/ \"82Fv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _sourceHelper = __webpack_require__(\"kdOt\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = __webpack_require__(\"+2Ke\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar DatasetModel = echarts.extendComponentModel({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nvar _default = DatasetModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"87tG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"JNWs\");\n\n__webpack_require__(\"sTIA\");\n\n/***/ }),\n\n/***/ \"8DFW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createDimensions = __webpack_require__(\"hcq/\");\n\nvar _dimensionHelper = __webpack_require__(\"mvCM\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = __webpack_require__(\"P05t\");\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      textAlign: 'right',\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"8Mpj\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(\"sJ4e\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"8RN9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _listComponent = __webpack_require__(\"v/cD\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"8UWf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"LGKB\");\n\n__webpack_require__(\"CUwD\");\n\n__webpack_require__(\"PYc7\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar orthogonalLayout = __webpack_require__(\"veIh\");\n\nvar radialLayout = __webpack_require__(\"f0h+\");\n\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);\n\n/***/ }),\n\n/***/ \"8YpK\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"997V\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"jJrn\");\n\n__webpack_require__(\"xLO3\");\n\n__webpack_require__(\"lVde\");\n\n/***/ }),\n\n/***/ \"9Owa\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n/***/ }),\n\n/***/ \"9Z3y\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(\"XhgW\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"9cSo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"a1DW\");\n\n__webpack_require__(\"1VkX\");\n\nvar preprocessor = __webpack_require__(\"g8A/\");\n\nvar candlestickVisual = __webpack_require__(\"fAbo\");\n\nvar candlestickLayout = __webpack_require__(\"vxwL\");\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);\n\n/***/ }),\n\n/***/ \"A6Kt\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n__webpack_require__(\"qBny\");\n\n__webpack_require__(\"DnWC\");\n\n__webpack_require__(\"C6b9\");\n\nvar dataColor = __webpack_require__(\"ri8f\");\n\nvar sunburstLayout = __webpack_require__(\"4SGL\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));\n\n/***/ }),\n\n/***/ \"AKXb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar axisPointerModelHelper = __webpack_require__(\"QCrJ\");\n\nvar axisTrigger = __webpack_require__(\"dtW/\");\n\n__webpack_require__(\"TCXJ\");\n\n__webpack_require__(\"56C7\");\n\n__webpack_require__(\"D7EH\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ \"ARaV\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar markerHelper = __webpack_require__(\"vx1D\");\n\nvar LineDraw = __webpack_require__(\"6n1D\");\n\nvar MarkerView = __webpack_require__(\"SZjP\");\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"AbHi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"AjK0\":\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"AjST\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"Po+l\");\n\n__webpack_require__(\"MsVc\");\n\nvar boxplotVisual = __webpack_require__(\"5KWC\");\n\nvar boxplotLayout = __webpack_require__(\"YbE0\");\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);\n\n/***/ }),\n\n/***/ \"B123\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"BqCv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar BrushController = __webpack_require__(\"oDOe\");\n\nvar brushHelper = __webpack_require__(\"ZJ+T\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"BuI2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"ecfp\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"C6b9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar helper = __webpack_require__(\"gOx9\");\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});\n\n/***/ }),\n\n/***/ \"CUwD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar SymbolClz = __webpack_require__(\"1bHA\");\n\nvar _layoutHelper = __webpack_require__(\"ERCD\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"CWSg\":\n/***/ (function(module, exports) {\n\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"CiLi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater; // There is no old data only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!this._data) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n\nwhiskerBoxDrawProto.incrementalPrepareUpdate = function (seriesModel, ecModel, api) {\n  this.group.removeAll();\n  this._data = null;\n};\n\nwhiskerBoxDrawProto.incrementalUpdate = function (params, seriesModel, ecModel, api) {\n  var data = seriesModel.getData();\n\n  for (var idx = params.start; idx < params.end; idx++) {\n    var symbolEl = new WhiskerBox(data, idx, this.styleUpdater, true);\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Cuh7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"D7EH\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar BaseAxisPointer = __webpack_require__(\"Ou7x\");\n\nvar viewHelper = __webpack_require__(\"zAPJ\");\n\nvar cartesianAxisHelper = __webpack_require__(\"koEO\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DHpS\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar makeStyleMapper = __webpack_require__(\"RYbJ\");\n\nvar axisModelCreator = __webpack_require__(\"eH0a\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DPh+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(\"2m1D\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DZTl\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DknX\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BrushController = __webpack_require__(\"oDOe\");\n\nvar BrushTargetManager = __webpack_require__(\"XCrL\");\n\nvar history = __webpack_require__(\"9Owa\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\n__webpack_require__(\"l2wH\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DnWC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar SunburstPiece = __webpack_require__(\"pSwa\");\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = virtualRoot.piece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (virtualRoot.piece) {\n          // Update\n          virtualRoot.piece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          virtualRoot.piece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(virtualRoot.piece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        virtualRoot.piece.on('click', event);\n      } else if (virtualRoot.piece) {\n        // Remove\n        group.remove(virtualRoot.piece);\n        virtualRoot.piece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DpwM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ \"E7aA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar RoamController = __webpack_require__(\"5Mek\");\n\nvar throttleUtil = __webpack_require__(\"QD+P\");\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;\n\n/***/ }),\n\n/***/ \"E8YU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;\n\n/***/ }),\n\n/***/ \"ERCD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(\"1Xuh\");\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;\n\n/***/ }),\n\n/***/ \"F8oC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"FP3a\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/echarts/index.js\nvar echarts = __webpack_require__(\"XLwt\");\nvar echarts_default = /*#__PURE__*/__webpack_require__.n(echarts);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/home/index.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var home = ({\n  name: '',\n  components: {},\n  props: {},\n  data: function data() {\n    return {\n      line: null,\n      l: {\n        width: '480px',\n        height: '300px'\n      }\n    };\n  },\n\n  computed: {},\n  watch: {},\n  created: function created() {},\n  mounted: function mounted() {\n    this.initLine();\n  },\n\n  methods: {\n    initLine: function initLine() {\n      // this.$nextTick(() => {\n      this.line = echarts_default.a.init(document.getElementById('line'));\n      this.line.setOption({\n        title: {\n          text: 'ECharts 入门示例'\n        },\n        tooltip: {},\n        xAxis: {\n          data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\n        },\n        yAxis: {},\n        series: [{\n          name: '销量',\n          type: 'bar',\n          data: [5, 20, 36, 10, 10, 20]\n        }]\n      });\n      // })\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b4edfd50\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/index.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-index\"},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"echarts-line\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('div',{style:({width: _vm.l.width, height: _vm.l.height}),attrs:{\"id\":\"line\"}})])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ var pages_home = (esExports);\n// CONCATENATED MODULE: ./src/pages/home/index.vue\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"rTVE\")\n  __webpack_require__(\"QML+\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  home,\n  pages_home,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var src_pages_home = __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"Fkmw\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar colorUtil = __webpack_require__(\"DRaW\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar markerHelper = __webpack_require__(\"vx1D\");\n\nvar MarkerView = __webpack_require__(\"SZjP\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}\n\n/***/ }),\n\n/***/ \"FlXs\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar throttleUtil = __webpack_require__(\"QD+P\");\n\nvar parallelPreprocessor = __webpack_require__(\"i6Ks\");\n\n__webpack_require__(\"qSkD\");\n\n__webpack_require__(\"KjPy\");\n\n__webpack_require__(\"LjPz\");\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);\n\n/***/ }),\n\n/***/ \"FvdC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _roamHelper = __webpack_require__(\"ii60\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});\n\n/***/ }),\n\n/***/ \"GQGX\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"GWV8\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar helper = __webpack_require__(\"s1Aj\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"GbHy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _barGrid = __webpack_require__(\"m/6y\");\n\nvar layout = _barGrid.layout;\n\n__webpack_require__(\"5vFd\");\n\n__webpack_require__(\"DPh+\");\n\n__webpack_require__(\"eHPu\");\n\n__webpack_require__(\"UkNE\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n/***/ }),\n\n/***/ \"Gevp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"GnMB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = __webpack_require__(\"0sHC\");\n\nvar Group = _graphic.Group;\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = __webpack_require__(\"1bHA\");\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Goha\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curveTool = __webpack_require__(\"AAi1\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Gp87\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(\"Pgdp\");\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"H4Od\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar vector = __webpack_require__(\"C7PF\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar Transformable = __webpack_require__(\"/ZBO\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"H4Wn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});\n\n/***/ }),\n\n/***/ \"HGSA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar zrColor = __webpack_require__(\"DRaW\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"HcG6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar parseGeoJson = __webpack_require__(\"Axyt\");\n\nvar View = __webpack_require__(\"H4Od\");\n\nvar fixNanhai = __webpack_require__(\"Qv0P\");\n\nvar fixTextCoord = __webpack_require__(\"cU6c\");\n\nvar fixGeoCoord = __webpack_require__(\"WxG6\");\n\nvar fixDiaoyuIsland = __webpack_require__(\"k7nC\");\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ILx8\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"UkNE\");\n\n__webpack_require__(\"D7EH\");\n\n__webpack_require__(\"AKXb\");\n\n/***/ }),\n\n/***/ \"ITiI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;\n\n/***/ }),\n\n/***/ \"IkDM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _treeHelper = __webpack_require__(\"gOx9\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JFJR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JIsR\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JMu0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar history = __webpack_require__(\"9Owa\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JNWs\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JRc4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar preprocessor = __webpack_require__(\"GQGX\");\n\n__webpack_require__(\"od06\");\n\n__webpack_require__(\"iEm+\");\n\n__webpack_require__(\"ZuqD\");\n\n__webpack_require__(\"oYIf\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n\n/***/ \"Jd65\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Polyline = __webpack_require__(\"PiQa\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar EffectLine = __webpack_require__(\"uA0k\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JzYe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SingleAxis = __webpack_require__(\"WK/r\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar each = _util.each;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"KAfT\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar helper = __webpack_require__(\"s1Aj\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n/***/ }),\n\n/***/ \"KGuM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar View = __webpack_require__(\"H4Od\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = __webpack_require__(\"wUOi\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"KjPy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Component = __webpack_require__(\"Y5nL\");\n\n__webpack_require__(\"DHpS\");\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"LBXi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar RoamController = __webpack_require__(\"5Mek\");\n\nvar roamHelper = __webpack_require__(\"YpIy\");\n\nvar _cursorHelper = __webpack_require__(\"NKek\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"LGKB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar Tree = __webpack_require__(\"+jMe\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"LRsb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;\n\n/***/ }),\n\n/***/ \"LbEf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar barPolar = __webpack_require__(\"mLyJ\");\n\n__webpack_require__(\"PBlc\");\n\n__webpack_require__(\"3n/B\");\n\n__webpack_require__(\"1bf2\");\n\n__webpack_require__(\"AKXb\");\n\n__webpack_require__(\"QbUQ\");\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});\n\n/***/ }),\n\n/***/ \"LgWN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"LjPz\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"qSkD\");\n\n__webpack_require__(\"MRvz\");\n\n__webpack_require__(\"BqCv\");\n\n/***/ }),\n\n/***/ \"LzVd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _traversalHelper = __webpack_require__(\"XFat\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = __webpack_require__(\"ERCD\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"M9eA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar zrColor = __webpack_require__(\"DRaW\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"MOpb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphicUtil = __webpack_require__(\"0sHC\");\n\nvar _labelHelper = __webpack_require__(\"RjA7\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar _barGrid = __webpack_require__(\"m/6y\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar prepareCartesian2d = __webpack_require__(\"n/n4\");\n\nvar prepareGeo = __webpack_require__(\"OpfW\");\n\nvar prepareSingleAxis = __webpack_require__(\"8YpK\");\n\nvar preparePolar = __webpack_require__(\"ilox\");\n\nvar prepareCalendar = __webpack_require__(\"RAps\");\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}\n\n/***/ }),\n\n/***/ \"MRvz\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});\n\n/***/ }),\n\n/***/ \"MXTC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar fixClipWithShadow = __webpack_require__(\"dnLe\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  if (smoothMonotone == null) {\n    if (isMono(points, 'x')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n    } else if (isMono(points, 'y')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n    } else {\n      return drawNonMono.apply(this, arguments);\n    }\n  } else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n    return drawMono.apply(this, arguments);\n  } else {\n    return drawNonMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n\n\nfunction isMono(points, smoothMonotone) {\n  if (points.length <= 1) {\n    return true;\n  }\n\n  var dim = smoothMonotone === 'x' ? 0 : 1;\n  var last = points[0][dim];\n  var lastDiff = 0;\n\n  for (var i = 1; i < points.length; ++i) {\n    var diff = points[i][dim] - last;\n\n    if (!isNaN(diff) && !isNaN(lastDiff) && diff !== 0 && lastDiff !== 0 && diff >= 0 !== lastDiff >= 0) {\n      return false;\n    }\n\n    if (!isNaN(diff) && diff !== 0) {\n      lastDiff = diff;\n      last = points[i][dim];\n    }\n  }\n\n  return true;\n}\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n\n/***/ \"Mlni\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar dataFormatMixin = __webpack_require__(\"bBvJ\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Mn6+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"ZtEr\");\n\n__webpack_require__(\"Fkmw\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});\n\n/***/ }),\n\n/***/ \"MsVc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _whiskerBoxCommon = __webpack_require__(\"sK5G\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Mxrs\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"N1UU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n__webpack_require__(\"5vFd\");\n\n__webpack_require__(\"OQAC\");\n\n__webpack_require__(\"m5oG\");\n\nvar _barGrid = __webpack_require__(\"m/6y\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\n__webpack_require__(\"UkNE\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));\n\n/***/ }),\n\n/***/ \"NAKW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _circularLayoutHelper = __webpack_require__(\"LRsb\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"NGRG\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"NKek\":\n/***/ (function(module, exports) {\n\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n\n/***/ \"NUWb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    for (var dataIndex = params.start; dataIndex < params.end; dataIndex++) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;\n\n/***/ }),\n\n/***/ \"NjeB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar axisModelCreator = __webpack_require__(\"eH0a\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);\n\n/***/ }),\n\n/***/ \"O523\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"gLqW\");\n\n__webpack_require__(\"ix3c\");\n\n__webpack_require__(\"+pdh\");\n\nvar treemapVisual = __webpack_require__(\"M9eA\");\n\nvar treemapLayout = __webpack_require__(\"fm2I\");\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);\n\n/***/ }),\n\n/***/ \"OCS9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OQAC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(\"2m1D\");\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OcRu\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar HeatmapLayer = __webpack_require__(\"LgWN\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OlnU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar VisualMapModel = __webpack_require__(\"wH4Y\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OpfW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Oq2I\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"AKXb\");\n\n__webpack_require__(\"7XrG\");\n\n__webpack_require__(\"XAC3\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ \"Osoq\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(\"Y5nL\");\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});\n\n/***/ }),\n\n/***/ \"Ou7x\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar clazzUtil = __webpack_require__(\"BNYN\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar axisPointerModelHelper = __webpack_require__(\"QCrJ\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar throttleUtil = __webpack_require__(\"QD+P\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OvrE\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = __webpack_require__(\"kQD9\");\n\nvar _dataProvider = __webpack_require__(\"5KBG\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = __webpack_require__(\"srbS\");\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OxCu\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"P05t\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;\n\n/***/ }),\n\n/***/ \"P0a5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\nvar globalObj = typeof window === 'undefined' ? global : window;\nvar Uint32Arr = globalObj.Uint32Array || Array;\nvar Float64Arr = globalObj.Float64Array || Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"DuR2\")))\n\n/***/ }),\n\n/***/ \"P7Q7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"P7ry\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"80cc\");\n\n__webpack_require__(\"dp0Z\");\n\n__webpack_require__(\"wLWv\");\n\n__webpack_require__(\"R0U9\");\n\n/***/ }),\n\n/***/ \"PBlc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Polar = __webpack_require__(\"6axr\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = __webpack_require__(\"3yJd\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n__webpack_require__(\"ZRmN\");\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, dim);\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, dim);\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);\n\n/***/ }),\n\n/***/ \"PKM0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"index.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"PWa9\":\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"PYc7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\n\n/***/ }),\n\n/***/ \"PdL8\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar MapDraw = __webpack_require__(\"LBXi\");\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"PiQa\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Pmfi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(\"VewU\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar ZImage = __webpack_require__(\"MAom\");\n\nvar ZText = __webpack_require__(\"/86O\");\n\nvar _graphic = __webpack_require__(\"4w1v\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Po+l\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _whiskerBoxCommon = __webpack_require__(\"sK5G\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Pobh\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(\"RYbJ\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Pwgp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Q5xN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(\"VewU\");\n\nvar createElement = _core.createElement;\n\nvar util = __webpack_require__(\"/gxq\");\n\nvar each = util.each;\n\nvar zrLog = __webpack_require__(\"eZxa\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar ZImage = __webpack_require__(\"MAom\");\n\nvar ZText = __webpack_require__(\"/86O\");\n\nvar arrayDiff = __webpack_require__(\"0fQF\");\n\nvar GradientManager = __webpack_require__(\"hZf2\");\n\nvar ClippathManager = __webpack_require__(\"TDz/\");\n\nvar ShadowManager = __webpack_require__(\"SMB/\");\n\nvar _graphic = __webpack_require__(\"4w1v\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"QCrJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ \"QML+\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"PKM0\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"2cef78ae\", content, true, {});\n\n/***/ }),\n\n/***/ \"QZ7o\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"QbUQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar BaseAxisPointer = __webpack_require__(\"Ou7x\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar viewHelper = __webpack_require__(\"zAPJ\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Qv0P\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Region = __webpack_require__(\"B33o\");\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"R0U9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ \"RAps\":\n/***/ (function(module, exports) {\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"RKzr\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"RTd5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"RjA7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(\"5KBG\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n/***/ }),\n\n/***/ \"S+iL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});\n\n/***/ }),\n\n/***/ \"SMB/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(\"Pmfi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"SZjP\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"SlE6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _helper = __webpack_require__(\"tzpD\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"T6W2\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"TCXJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"TDz/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(\"Pmfi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"TTCf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(\"Mlni\");\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"TXKS\":\n/***/ (function(module, exports) {\n\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"UOrf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"US3d\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar IncrementalDisplayable = __webpack_require__(\"thE4\");\n\nvar lineContain = __webpack_require__(\"u+XU\");\n\nvar quadraticContain = __webpack_require__(\"oBGI\");\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"UeW/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar graphicUtil = __webpack_require__(\"0sHC\");\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\n/***/ }),\n\n/***/ \"UkNE\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\n__webpack_require__(\"5vFd\");\n\n__webpack_require__(\"zz1u\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ \"Vb+l\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n__webpack_require__(\"/vN/\");\n\n__webpack_require__(\"1A4n\");\n\nvar createDataSelectAction = __webpack_require__(\"XRkS\");\n\nvar dataColor = __webpack_require__(\"ri8f\");\n\nvar pieLayout = __webpack_require__(\"9Z3y\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n/***/ }),\n\n/***/ \"VewU\":\n/***/ (function(module, exports) {\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n/***/ }),\n\n/***/ \"VmZa\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"6MCj\");\n\nvar _zrender = __webpack_require__(\"hv2j\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(\"0jKn\");\n\nregisterPainter('vml', Painter);\n\n/***/ }),\n\n/***/ \"WK/r\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"WO3U\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomView = __webpack_require__(\"ilLo\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"WbrJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar DataZoomView = __webpack_require__(\"ilLo\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\nvar roams = __webpack_require__(\"E7aA\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"WxG6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XAC3\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar TooltipContent = __webpack_require__(\"aYad\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar findPointFromSeries = __webpack_require__(\"OxCu\");\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar globalListener = __webpack_require__(\"DpwM\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar axisPointerViewHelper = __webpack_require__(\"zAPJ\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XCrL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar brushHelper = __webpack_require__(\"ZJ+T\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XFat\":\n/***/ (function(module, exports) {\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;\n\n/***/ }),\n\n/***/ \"XLwt\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _echarts = __webpack_require__(\"Icdr\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = __webpack_require__(\"iNHu\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\n__webpack_require__(\"+Dgo\");\n\n__webpack_require__(\"4UDB\");\n\n__webpack_require__(\"GbHy\");\n\n__webpack_require__(\"Vb+l\");\n\n__webpack_require__(\"u9yV\");\n\n__webpack_require__(\"rjsW\");\n\n__webpack_require__(\"nUSl\");\n\n__webpack_require__(\"8UWf\");\n\n__webpack_require__(\"O523\");\n\n__webpack_require__(\"1FNb\");\n\n__webpack_require__(\"87tG\");\n\n__webpack_require__(\"5/bM\");\n\n__webpack_require__(\"qbKW\");\n\n__webpack_require__(\"cWq4\");\n\n__webpack_require__(\"AjST\");\n\n__webpack_require__(\"9cSo\");\n\n__webpack_require__(\"k9Bd\");\n\n__webpack_require__(\"zjhG\");\n\n__webpack_require__(\"o0k+\");\n\n__webpack_require__(\"N1UU\");\n\n__webpack_require__(\"7bL3\");\n\n__webpack_require__(\"A6Kt\");\n\n__webpack_require__(\"MOpb\");\n\n__webpack_require__(\"UeW/\");\n\n__webpack_require__(\"ILx8\");\n\n__webpack_require__(\"P7ry\");\n\n__webpack_require__(\"Oq2I\");\n\n__webpack_require__(\"AKXb\");\n\n__webpack_require__(\"LbEf\");\n\n__webpack_require__(\"80zD\");\n\n__webpack_require__(\"FlXs\");\n\n__webpack_require__(\"4V7L\");\n\n__webpack_require__(\"swsf\");\n\n__webpack_require__(\"/99E\");\n\n__webpack_require__(\"miEh\");\n\n__webpack_require__(\"wQkr\");\n\n__webpack_require__(\"tQk0\");\n\n__webpack_require__(\"2tOJ\");\n\n__webpack_require__(\"p1Ck\");\n\n__webpack_require__(\"Mn6+\");\n\n__webpack_require__(\"JRc4\");\n\n__webpack_require__(\"YsUA\");\n\n__webpack_require__(\"VmZa\");\n\n__webpack_require__(\"jLnL\");\n\n/***/ }),\n\n/***/ \"XRkS\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XhgW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(\"3h1/\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XiVP\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar VisualMapView = __webpack_require__(\"zO13\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar helper = __webpack_require__(\"E8YU\");\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Y3kp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar EffectSymbol = __webpack_require__(\"GnMB\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar pointsLayout = __webpack_require__(\"1Nix\");\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"YbE0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"YpIy\":\n/***/ (function(module, exports) {\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;\n\n/***/ }),\n\n/***/ \"YqdL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"YsUA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"auIi\");\n\n__webpack_require__(\"+PQg\");\n\n__webpack_require__(\"AbHi\");\n\n__webpack_require__(\"RTd5\");\n\n__webpack_require__(\"u9lB\");\n\n__webpack_require__(\"DknX\");\n\n__webpack_require__(\"JMu0\");\n\n/***/ }),\n\n/***/ \"Z2m1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ZJ+T\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar _cursorHelper = __webpack_require__(\"NKek\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = __webpack_require__(\"0sHC\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n/***/ }),\n\n/***/ \"ZRmN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"NjeB\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ZgE8\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.text {\\n  font-size: 14px;\\n}\\n.item {\\n  margin-bottom: 18px;\\n}\\n.clearfix:before,\\n.clearfix:after {\\n  display: table;\\n  content: \\\"\\\";\\n}\\n.clearfix:after {\\n  clear: both\\n}\\n.box-card {\\n  width: 480px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/index.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,gBAAgB;CACjB;AACD;EACE,oBAAoB;CACrB;AACD;;EAEE,eAAe;EACf,YAAY;CACb;AACD;EACE,WAAW;CACZ;AACD;EACE,aAAa;CACd\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.text {\\n  font-size: 14px;\\n}\\n.item {\\n  margin-bottom: 18px;\\n}\\n.clearfix:before,\\n.clearfix:after {\\n  display: table;\\n  content: \\\"\\\";\\n}\\n.clearfix:after {\\n  clear: both\\n}\\n.box-card {\\n  width: 480px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"ZtEr\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(\"Mlni\");\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ZuqD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar TimelineModel = __webpack_require__(\"F8oC\");\n\nvar dataFormatMixin = __webpack_require__(\"bBvJ\");\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"a1DW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _whiskerBoxCommon = __webpack_require__(\"sK5G\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"aYad\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar zrColor = __webpack_require__(\"DRaW\");\n\nvar eventUtil = __webpack_require__(\"UAiw\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"akwy\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"auIi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ay5B\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ \"b/SY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\necharts.registerProcessor({\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  isOverallFilter: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});\n\n/***/ }),\n\n/***/ \"bzOU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar vector = __webpack_require__(\"C7PF\");\n\nvar symbolUtil = __webpack_require__(\"kK7q\");\n\nvar LinePath = __webpack_require__(\"sOJ4\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    normalText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (normalText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      normalText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cI6i\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n/***/ }),\n\n/***/ \"cN90\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cO/Q\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar SymbolClz = __webpack_require__(\"1bHA\");\n\nvar lineAnimationDiff = __webpack_require__(\"SlE6\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar _poly = __webpack_require__(\"MXTC\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar _helper = __webpack_require__(\"tzpD\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: createClipShape(coordSys, false, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      var coordSysClipShape = createClipShape(coordSys, false, seriesModel); // Update clipPath\n\n      lineGroup.setClipPath(coordSysClipShape); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: coordSysClipShape\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cU6c\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cWq4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"+u5N\");\n\n__webpack_require__(\"Cuh7\");\n\nvar sankeyLayout = __webpack_require__(\"wTOJ\");\n\nvar sankeyVisual = __webpack_require__(\"Mxrs\");\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);\n\n/***/ }),\n\n/***/ \"ct4P\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cuL/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(\"Y5nL\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n/***/ }),\n\n/***/ \"d1IL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar Graph = __webpack_require__(\"1uRk\");\n\nvar linkList = __webpack_require__(\"NGRG\");\n\nvar createDimensions = __webpack_require__(\"hcq/\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: (coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value'])\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dCQY\":\n/***/ (function(module, exports) {\n\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n/***/ }),\n\n/***/ \"dZZy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar SymbolClz = __webpack_require__(\"1bHA\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar isObject = _util.isObject;\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will\n  // cut part of the symbol element shape.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dp0Z\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(\"6JAQ\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dtW/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = __webpack_require__(\"QCrJ\");\n\nvar findPointFromSeries = __webpack_require__(\"OxCu\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dzlV\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _labelHelper = __webpack_require__(\"RjA7\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n/***/ }),\n\n/***/ \"e+YR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;\n\n/***/ }),\n\n/***/ \"eH0a\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar axisDefault = __webpack_require__(\"s/lY\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = __webpack_require__(\"iGPw\");\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"eHPu\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _helper = __webpack_require__(\"dzlV\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar barItemStyle = __webpack_require__(\"Pobh\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"eQYg\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ecfp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar axisModelCreator = __webpack_require__(\"eH0a\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"envY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(\"sJ4e\");\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"f0h+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar commonLayout = __webpack_require__(\"LzVd\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"fAbo\":\n/***/ (function(module, exports) {\n\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"fm2I\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar helper = __webpack_require__(\"gOx9\");\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"g8A/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"gLqW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar Tree = __webpack_require__(\"+jMe\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = __webpack_require__(\"gOx9\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"gOx9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;\n\n/***/ }),\n\n/***/ \"gZam\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar LinearGradient = __webpack_require__(\"Gw4f\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar VisualMapView = __webpack_require__(\"zO13\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\nvar helper = __webpack_require__(\"E8YU\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ghha\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Single = __webpack_require__(\"JzYe\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});\n\n/***/ }),\n\n/***/ \"guZJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar symbolUtil = __webpack_require__(\"kK7q\");\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"h4VJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"h6Uy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"hG1p\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"hZf2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(\"Pmfi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar zrLog = __webpack_require__(\"eZxa\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"hdbT\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BrushController = __webpack_require__(\"oDOe\");\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"i6Ks\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"iEm+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});\n\n/***/ }),\n\n/***/ \"iZVd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _roamHelper = __webpack_require__(\"ii60\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});\n\n/***/ }),\n\n/***/ \"icur\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar visualSolution = __webpack_require__(\"NUWb\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ii60\":\n/***/ (function(module, exports) {\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;\n\n/***/ }),\n\n/***/ \"ilLo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(\"Pgdp\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ilox\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ix3c\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar helper = __webpack_require__(\"gOx9\");\n\nvar Breadcrumb = __webpack_require__(\"IkDM\");\n\nvar RoamController = __webpack_require__(\"5Mek\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar animationUtil = __webpack_require__(\"e+YR\");\n\nvar makeStyleMapper = __webpack_require__(\"RYbJ\");\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"jJrn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar IndicatorAxis = __webpack_require__(\"JFJR\");\n\nvar IntervalScale = __webpack_require__(\"tBuv\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar _axisHelper = __webpack_require__(\"3yJd\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"jLnL\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"4w1v\");\n\nvar _zrender = __webpack_require__(\"hv2j\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(\"Q5xN\");\n\nregisterPainter('svg', Painter);\n\n/***/ }),\n\n/***/ \"jMTz\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"jpt2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MapDraw = __webpack_require__(\"LBXi\");\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"k7nC\":\n/***/ (function(module, exports) {\n\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"k9Bd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"P7Q7\");\n\n__webpack_require__(\"Y3kp\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar layoutPoints = __webpack_require__(\"1Nix\");\n\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));\n\n/***/ }),\n\n/***/ \"kQD9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"koEO\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ \"l2wH\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"cuL/\");\n\n__webpack_require__(\"sJ4e\");\n\n__webpack_require__(\"ilLo\");\n\n__webpack_require__(\"r9WW\");\n\n__webpack_require__(\"WO3U\");\n\n__webpack_require__(\"b/SY\");\n\n__webpack_require__(\"KAfT\");\n\n/***/ }),\n\n/***/ \"l4Op\":\n/***/ (function(module, exports) {\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"lVde\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"lwXq\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"m5oG\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = __webpack_require__(\"dzlV\");\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"mLyJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = __webpack_require__(\"qVJQ\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"mcsk\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n/***/ }),\n\n/***/ \"miEh\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n\n/***/ \"mlpt\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar VisualMapModel = __webpack_require__(\"wH4Y\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar visualDefault = __webpack_require__(\"B123\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"n/n4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"n3NR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar visualSolution = __webpack_require__(\"NUWb\");\n\nvar selector = __webpack_require__(\"zlsk\");\n\nvar throttleUtil = __webpack_require__(\"QD+P\");\n\nvar BrushTargetManager = __webpack_require__(\"XCrL\");\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\n/***/ }),\n\n/***/ \"nQkE\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"nUSl\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"OvrE\");\n\n__webpack_require__(\"PdL8\");\n\n__webpack_require__(\"FvdC\");\n\n__webpack_require__(\"srbS\");\n\nvar mapSymbolLayout = __webpack_require__(\"QZ7o\");\n\nvar mapVisual = __webpack_require__(\"2W4A\");\n\nvar mapDataStatistic = __webpack_require__(\"vIe4\");\n\nvar backwardCompat = __webpack_require__(\"Z2m1\");\n\nvar createDataSelectAction = __webpack_require__(\"XRkS\");\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);\n\n/***/ }),\n\n/***/ \"nV/6\":\n/***/ (function(module, exports) {\n\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"o0k+\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"cN90\");\n\n__webpack_require__(\"OcRu\");\n\n/***/ }),\n\n/***/ \"oDOe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Eventful = __webpack_require__(\"qjvV\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar interactionMutex = __webpack_require__(\"mcsk\");\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"oYIf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar TimelineView = __webpack_require__(\"Gp87\");\n\nvar TimelineAxis = __webpack_require__(\"Pwgp\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"od06\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(\"Y5nL\");\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});\n\n/***/ }),\n\n/***/ \"og9+\":\n/***/ (function(module, exports) {\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"oqQy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar singleAxisHelper = __webpack_require__(\"ay5B\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"orv6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(\"Mlni\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"p1Ck\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"TTCf\");\n\n__webpack_require__(\"ARaV\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});\n\n/***/ }),\n\n/***/ \"pSwa\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"pmYM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n\n    },\n    progressive: null\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"pzOI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _forceHelper = __webpack_require__(\"ITiI\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = __webpack_require__(\"rbn0\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = __webpack_require__(\"LRsb\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"qBny\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar Tree = __webpack_require__(\"+jMe\");\n\nvar _treeHelper = __webpack_require__(\"gOx9\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"qSkD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Parallel = __webpack_require__(\"sYrQ\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});\n\n/***/ }),\n\n/***/ \"qbKW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"FlXs\");\n\n__webpack_require__(\"+bDV\");\n\n__webpack_require__(\"2Ow2\");\n\nvar parallelVisual = __webpack_require__(\"CWSg\");\n\necharts.registerVisual(parallelVisual);\n\n/***/ }),\n\n/***/ \"r9WW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(\"sJ4e\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"rFvp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"rTVE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"ZgE8\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"6a030f4f\", content, true, {});\n\n/***/ }),\n\n/***/ \"rbn0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\n/***/ }),\n\n/***/ \"ri8f\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar createHashMap = _util.createHashMap;\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"rjsW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"997V\");\n\n__webpack_require__(\"Gevp\");\n\n__webpack_require__(\"guZJ\");\n\nvar dataColor = __webpack_require__(\"ri8f\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar radarLayout = __webpack_require__(\"lwXq\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\nvar backwardCompat = __webpack_require__(\"6HcI\");\n\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);\n\n/***/ }),\n\n/***/ \"rwkR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar axisModelCreator = __webpack_require__(\"eH0a\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"s/lY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"s1Aj\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n/***/ }),\n\n/***/ \"s48c\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar cartesianAxisHelper = __webpack_require__(\"koEO\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel) && i < ticksCoords.length - 1) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ \"sJ4e\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar helper = __webpack_require__(\"s1Aj\");\n\nvar AxisProxy = __webpack_require__(\"GWV8\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"sK5G\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar WhiskerBoxDraw = __webpack_require__(\"CiLi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _dimensionHelper = __webpack_require__(\"mvCM\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalPrepareUpdate(seriesModel, ecModel, api);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalUpdate(params, seriesModel, ecModel, api);\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;\n\n/***/ }),\n\n/***/ \"sOJ4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"sTIA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PointerPath = __webpack_require__(\"hG1p\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"sYrQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar ParallelAxis = __webpack_require__(\"/BOW\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var dataDimensions = zrUtil.map(dimensions, function (axisDim) {\n      return data.mapDimension(axisDim);\n    });\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dataDimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"srbS\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Geo = __webpack_require__(\"HcG6\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"swsf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar preprocessor = __webpack_require__(\"OCS9\");\n\n__webpack_require__(\"n3NR\");\n\n__webpack_require__(\"icur\");\n\n__webpack_require__(\"hdbT\");\n\n__webpack_require__(\"S+iL\");\n\n__webpack_require__(\"0pMY\");\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n\n/***/ \"tQk0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"4SW2\");\n\n__webpack_require__(\"0O1a\");\n\n/***/ }),\n\n/***/ \"tzpD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataStackHelper = __webpack_require__(\"qVJQ\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar map = _util.map;\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var stacked = isDimensionStacked(data, valueDim, baseDim);\n  var dataDimsForPoint = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  return {\n    dataDimsForPoint: dataDimsForPoint,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;\n\n/***/ }),\n\n/***/ \"u9lB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"u9yV\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"pmYM\");\n\n__webpack_require__(\"uNEE\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar layoutPoints = __webpack_require__(\"1Nix\");\n\n__webpack_require__(\"UkNE\");\n\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });\n\n/***/ }),\n\n/***/ \"uA0k\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Line = __webpack_require__(\"bzOU\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar curveUtil = __webpack_require__(\"AAi1\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"uNEE\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar LargeSymbolDraw = __webpack_require__(\"uv9t\");\n\nvar pointsLayout = __webpack_require__(\"1Nix\");\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});\n\n/***/ }),\n\n/***/ \"uv9t\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = __webpack_require__(\"thE4\");\n\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"v/cD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ \"vEM8\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar markerHelper = __webpack_require__(\"vx1D\");\n\nvar MarkerView = __webpack_require__(\"SZjP\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"vIe4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"veIh\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar commonLayout = __webpack_require__(\"LzVd\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"vjPX\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(\"dOVI\");\n\nvar _vector = __webpack_require__(\"C7PF\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"vx1D\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar _dataStackHelper = __webpack_require__(\"qVJQ\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim, otherDataDim);\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;\n\n/***/ }),\n\n/***/ \"vxwL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = __webpack_require__(\"0sHC\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    });\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"w2H/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar visualSolution = __webpack_require__(\"NUWb\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (!visualMapModel.isTargetSeries(seriesModel)) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}\n\n/***/ }),\n\n/***/ \"w6Zv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"wH4Y\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar visualDefault = __webpack_require__(\"B123\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar visualSolution = __webpack_require__(\"NUWb\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"wLWv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\nvar LegendView = __webpack_require__(\"8RN9\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"wQkr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"cuL/\");\n\n__webpack_require__(\"sJ4e\");\n\n__webpack_require__(\"ilLo\");\n\n__webpack_require__(\"envY\");\n\n__webpack_require__(\"5Hn/\");\n\n__webpack_require__(\"8Mpj\");\n\n__webpack_require__(\"WbrJ\");\n\n__webpack_require__(\"b/SY\");\n\n__webpack_require__(\"KAfT\");\n\n/***/ }),\n\n/***/ \"wTOJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar nest = __webpack_require__(\"P05t\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"whrq\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar selectableMixin = __webpack_require__(\"kQD9\");\n\nvar geoCreator = __webpack_require__(\"srbS\");\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"xLO3\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar axisDefault = __webpack_require__(\"s/lY\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"yEXw\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"z+uQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar LineDraw = __webpack_require__(\"6n1D\");\n\nvar EffectLine = __webpack_require__(\"uA0k\");\n\nvar Line = __webpack_require__(\"bzOU\");\n\nvar Polyline = __webpack_require__(\"PiQa\");\n\nvar EffectPolyline = __webpack_require__(\"Jd65\");\n\nvar LargeLineDraw = __webpack_require__(\"US3d\");\n\nvar linesLayout = __webpack_require__(\"4A6G\");\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    if (!this._finished || seriesModel.pipelineContext.large) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"z81E\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = __webpack_require__(\"d1IL\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"zAPJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ \"zO13\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"zjhG\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"P0a5\");\n\n__webpack_require__(\"z+uQ\");\n\nvar linesLayout = __webpack_require__(\"4A6G\");\n\nvar linesVisual = __webpack_require__(\"nV/6\");\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);\n\n/***/ }),\n\n/***/ \"zlsk\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar polygonContain = __webpack_require__(\"N1qP\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"zz1u\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"ecfp\");\n\n__webpack_require__(\"s48c\");\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.b3e4449d8b8370f0b1f8.js","require(\"./dataset/DatasetModel\");\n\nvar echarts = require(\"../echarts\");\n\necharts.extendComponentView({\n  type: 'dataset'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataset.js\n// module id = +Dgo\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxView.js\n// module id = +PQg\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    // Anication is forbiden in progressive data mode.\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel/ParallelSeries.js\n// module id = +bDV\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../axis/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js\n// module id = +bS+\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Tree.js\n// module id = +jMe\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/treemapAction.js\n// module id = +pdh\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/SankeySeries.js\n// module id = +u5N\n// module chunks = 0","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/calendar.js\n// module id = /99E\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/ParallelAxis.js\n// module id = /BOW\n// module chunks = 0","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListSimply.js\n// module id = /gZK\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = /vN/\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.getCategories();\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AngleAxisView.js\n// module id = 0BNI\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/calendar/Calendar.js\n// module id = 0BOU\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMapPiecewise.js\n// module id = 0O1a\n// module chunks = 0","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/arrayDiff2.js\n// module id = 0fQF\n// module chunks = 0","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/Painter.js\n// module id = 0jKn\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/GraphView.js\n// module id = 0nGg\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Brush.js\n// module id = 0pMY\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 1A4n\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph.js\n// module id = 1FNb\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      if (isDimensionStacked(data, dims[0], dims[1])) {\n        dims[0] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      if (isDimensionStacked(data, dims[1], dims[0])) {\n        dims[1] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/points.js\n// module id = 1Nix\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/CandlestickView.js\n// module id = 1VkX\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Symbol.js\n// module id = 1bHA\n// module chunks = 0","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/radiusAxis.js\n// module id = 1bf2\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Graph.js\n// module id = 1uRk\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel/ParallelView.js\n// module id = 2Ow2\n// module chunks = 0","function _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/mapVisual.js\n// module id = 2W4A\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 2m1D\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/markPoint.js\n// module id = 2tOJ\n// module chunks = 0","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/angleAxis.js\n// module id = 3n/B\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 43ae\n// module chunks = 0","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 2);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/linesLayout.js\n// module id = 4A6G\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/simpleLayout.js\n// module id = 4RQY\n// module chunks = 0","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js\n// module id = 4SGL\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMapContinuous.js\n// module id = 4SW2\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line.js\n// module id = 4UDB\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\necharts.extendComponentView({\n  type: 'single'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/singleAxis.js\n// module id = 4V7L\n// module chunks = 0","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation * 180 / Math.PI;\n    attr(textSvgEl, 'transform', 'rotate(' + rotate + ',' + x + ',' + y + ')');\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/graphic.js\n// module id = 4w1v\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel.js\n// module id = 5/bM\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 56C7\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js\n// module id = 5Hn/\n// module chunks = 0","var borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js\n// module id = 5KWC\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/RoamController.js\n// module id = 5Mek\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 5dr1\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Grid.js\n// module id = 5vFd\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/backwardCompat.js\n// module id = 6HcI\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js\n// module id = 6HoR\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 6JAQ\n// module chunks = 0","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/graphic.js\n// module id = 6MCj\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/AngleAxis.js\n// module id = 6UfY\n// module chunks = 0","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/Polar.js\n// module id = 6axr\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 6f6q\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LineDraw.js\n// module id = 6n1D\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 7XrG\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver.js\n// module id = 7bL3\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 80cc\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/geo.js\n// module id = 80zD\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar DatasetModel = echarts.extendComponentModel({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nvar _default = DatasetModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataset/DatasetModel.js\n// module id = 82Fv\n// module chunks = 0","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge.js\n// module id = 87tG\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      textAlign: 'right',\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js\n// module id = 8DFW\n// module chunks = 0","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js\n// module id = 8Mpj\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 8RN9\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar orthogonalLayout = require(\"./tree/orthogonalLayout\");\n\nvar radialLayout = require(\"./tree/radialLayout\");\n\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree.js\n// module id = 8UWf\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/prepareCustom.js\n// module id = 8YpK\n// module chunks = 0","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/radar.js\n// module id = 997V\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/history.js\n// module id = 9Owa\n// module chunks = 0","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 9Z3y\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick.js\n// module id = 9cSo\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst.js\n// module id = A6Kt\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = AKXb\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkLineView.js\n// module id = ARaV\n// module chunks = 0","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = AbHi\n// module chunks = 0","function _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/symbol.js\n// module id = AjK0\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot.js\n// module id = AjST\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/visualDefault.js\n// module id = B123\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/ParallelAxisView.js\n// module id = BqCv\n// module chunks = 0","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/GridModel.js\n// module id = BuI2\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/sunburstAction.js\n// module id = C6b9\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/TreeView.js\n// module id = CUwD\n// module chunks = 0","var opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel/parallelVisual.js\n// module id = CWSg\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater; // There is no old data only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!this._data) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n\nwhiskerBoxDrawProto.incrementalPrepareUpdate = function (seriesModel, ecModel, api) {\n  this.group.removeAll();\n  this._data = null;\n};\n\nwhiskerBoxDrawProto.incrementalUpdate = function (params, seriesModel, ecModel, api) {\n  var data = seriesModel.getData();\n\n  for (var idx = params.start; idx < params.end; idx++) {\n    var symbolEl = new WhiskerBox(data, idx, this.styleUpdater, true);\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/WhiskerBoxDraw.js\n// module id = CiLi\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/SankeyView.js\n// module id = Cuh7\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = D7EH\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/AxisModel.js\n// module id = DHpS\n// module chunks = 0","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BarSeries.js\n// module id = DPh+\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/preprocessor.js\n// module id = DZTl\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = DknX\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = virtualRoot.piece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (virtualRoot.piece) {\n          // Update\n          virtualRoot.piece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          virtualRoot.piece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(virtualRoot.piece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        virtualRoot.piece.on('click', event);\n      } else if (virtualRoot.piece) {\n        // Remove\n        group.remove(virtualRoot.piece);\n        virtualRoot.piece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/SunburstView.js\n// module id = DnWC\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = DpwM\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/roams.js\n// module id = E7aA\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/helper.js\n// module id = E8YU\n// module chunks = 0","var layout = require(\"../../util/layout\");\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/layoutHelper.js\n// module id = ERCD\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/TimelineModel.js\n// module id = F8oC\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b4edfd50\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b4edfd50\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=1!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b4edfd50\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/index.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"page-index\">\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>echarts-line</span>\r\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\">go</el-button>\r\n      </div>\r\n      <div id=\"line\" :style=\"{width: l.width, height: l.height}\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n  .text {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .item {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  .clearfix:before,\r\n  .clearfix:after {\r\n    display: table;\r\n    content: \"\";\r\n  }\r\n  .clearfix:after {\r\n    clear: both\r\n  }\r\n\r\n  .box-card {\r\n    width: 480px;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import echarts from 'echarts'\r\n\r\n  export default {\r\n    name: '',\r\n    components: {\r\n\r\n    },\r\n    props: {\r\n    },\r\n    data () {\r\n      return {\r\n        line: null,\r\n        l: {\r\n          width: '480px',\r\n          height: '300px'\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n\r\n    },\r\n    watch: {\r\n\r\n    },\r\n    created () {\r\n    },\r\n    mounted () {\r\n      this.initLine()\r\n    },\r\n    methods: {\r\n      initLine () {\r\n        // this.$nextTick(() => {\r\n          this.line = echarts.init(document.getElementById('line'))\r\n          this.line.setOption({\r\n              title: {\r\n                  text: 'ECharts 入门示例'\r\n              },\r\n              tooltip: {},\r\n              xAxis: {\r\n                  data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\r\n              },\r\n              yAxis: {},\r\n              series: [{\r\n                  name: '销量',\r\n                  type: 'bar',\r\n                  data: [5, 20, 36, 10, 10, 20]\r\n              }]\r\n          })\r\n        // })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/home/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-index\"},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"echarts-line\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('div',{style:({width: _vm.l.width, height: _vm.l.height}),attrs:{\"id\":\"line\"}})])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b4edfd50\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/index.vue\n// module id = null\n// module chunks = ","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkAreaView.js\n// module id = Fkmw\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/parallel.js\n// module id = FlXs\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/geoRoam.js\n// module id = FvdC\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/preprocessor.js\n// module id = GQGX\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = GWV8\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar.js\n// module id = GbHy\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/RadarSeries.js\n// module id = Gevp\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/EffectSymbol.js\n// module id = GnMB\n// module chunks = 0","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/adjustEdge.js\n// module id = Goha\n// module chunks = 0","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/TimelineView.js\n// module id = Gp87\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/View.js\n// module id = H4Od\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/visualMapAction.js\n// module id = H4Wn\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/VisualMapping.js\n// module id = HGSA\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Geo.js\n// module id = HcG6\n// module chunks = 0","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/grid.js\n// module id = ILx8\n// module chunks = 0","var vec2 = require(\"zrender/lib/core/vector\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/forceHelper.js\n// module id = ITiI\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/Breadcrumb.js\n// module id = IkDM\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/radar/IndicatorAxis.js\n// module id = JFJR\n// module chunks = 0","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = JIsR\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Restore.js\n// module id = JMu0\n// module chunks = 0","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge/GaugeSeries.js\n// module id = JNWs\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline.js\n// module id = JRc4\n// module chunks = 0","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/EffectPolyline.js\n// module id = Jd65\n// module chunks = 0","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/Single.js\n// module id = JzYe\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = KAfT\n// module chunks = 0","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/createView.js\n// module id = KGuM\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/ParallelModel.js\n// module id = KjPy\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/MapDraw.js\n// module id = LBXi\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/TreeSeries.js\n// module id = LGKB\n// module chunks = 0","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js\n// module id = LRsb\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/polar.js\n// module id = LbEf\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js\n// module id = LgWN\n// module chunks = 0","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/parallelAxis.js\n// module id = LjPz\n// module chunks = 0","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/commonLayout.js\n// module id = LzVd\n// module chunks = 0","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/treemapVisual.js\n// module id = M9eA\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/custom.js\n// module id = MOpb\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/parallelAxisAction.js\n// module id = MRvz\n// module chunks = 0","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  if (smoothMonotone == null) {\n    if (isMono(points, 'x')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n    } else if (isMono(points, 'y')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n    } else {\n      return drawNonMono.apply(this, arguments);\n    }\n  } else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n    return drawMono.apply(this, arguments);\n  } else {\n    return drawNonMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n\n\nfunction isMono(points, smoothMonotone) {\n  if (points.length <= 1) {\n    return true;\n  }\n\n  var dim = smoothMonotone === 'x' ? 0 : 1;\n  var last = points[0][dim];\n  var lastDiff = 0;\n\n  for (var i = 1; i < points.length; ++i) {\n    var diff = points[i][dim] - last;\n\n    if (!isNaN(diff) && !isNaN(lastDiff) && diff !== 0 && lastDiff !== 0 && diff >= 0 !== lastDiff >= 0) {\n      return false;\n    }\n\n    if (!isNaN(diff) && diff !== 0) {\n      lastDiff = diff;\n      last = points[i][dim];\n    }\n  }\n\n  return true;\n}\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/poly.js\n// module id = MXTC\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkerModel.js\n// module id = Mlni\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/markArea.js\n// module id = Mn6+\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/BoxplotView.js\n// module id = MsVc\n// module chunks = 0","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/sankeyVisual.js\n// module id = Mxrs\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pictorialBar.js\n// module id = N1UU\n// module chunks = 0","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/circularLayout.js\n// module id = NAKW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/linkList.js\n// module id = NGRG\n// module chunks = 0","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = NKek\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    for (var dataIndex = params.start; dataIndex < params.end; dataIndex++) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/visualSolution.js\n// module id = NUWb\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/AxisModel.js\n// module id = NjeB\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap.js\n// module id = O523\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/preprocessor.js\n// module id = OCS9\n// module chunks = 0","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js\n// module id = OQAC\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap/HeatmapView.js\n// module id = OcRu\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/ContinuousModel.js\n// module id = OlnU\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/prepareCustom.js\n// module id = OpfW\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = Oq2I\n// module chunks = 0","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/typeDefaulter.js\n// module id = Osoq\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = Ou7x\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/MapSeries.js\n// module id = OvrE\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = OxCu\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/array/nest.js\n// module id = P05t\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar globalObj = typeof window === 'undefined' ? global : window;\nvar Uint32Arr = globalObj.Uint32Array || Array;\nvar Float64Arr = globalObj.Float64Array || Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/LinesSeries.js\n// module id = P0a5\n// module chunks = 0","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js\n// module id = P7Q7\n// module chunks = 0","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legendScroll.js\n// module id = P7ry\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./PolarModel\");\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, dim);\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, dim);\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/polarCreator.js\n// module id = PBlc\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"index.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-b4edfd50\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=1!./src/pages/home/index.vue\n// module id = PKM0\n// module chunks = 0","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataSample.js\n// module id = PWa9\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/treeAction.js\n// module id = PYc7\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/MapView.js\n// module id = PdL8\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Polyline.js\n// module id = PiQa\n// module chunks = 0","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/Definable.js\n// module id = Pmfi\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js\n// module id = Po+l\n// module chunks = 0","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/barItemStyle.js\n// module id = Pobh\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/TimelineAxis.js\n// module id = Pwgp\n// module chunks = 0","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/Painter.js\n// module id = Q5xN\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = QCrJ\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b4edfd50\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=1!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"2cef78ae\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-b4edfd50\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=1!./src/pages/home/index.vue\n// module id = QML+\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/mapSymbolLayout.js\n// module id = QZ7o\n// module chunks = 0","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js\n// module id = QbUQ\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/nanhai.js\n// module id = Qv0P\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = R0U9\n// module chunks = 0","function _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/calendar/prepareCustom.js\n// module id = RAps\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Axis2D.js\n// module id = RKzr\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = RTd5\n// module chunks = 0","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/labelHelper.js\n// module id = RjA7\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/brushAction.js\n// module id = S+iL\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/ShadowManager.js\n// module id = SMB/\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkerView.js\n// module id = SZjP\n// module chunks = 0","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = SlE6\n// module chunks = 0","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/categoryFilter.js\n// module id = T6W2\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = TCXJ\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/ClippathManager.js\n// module id = TDz/\n// module chunks = 0","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkLineModel.js\n// module id = TTCf\n// module chunks = 0","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/edgeVisual.js\n// module id = TXKS\n// module chunks = 0","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/funnelLayout.js\n// module id = UOrf\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LargeLineDraw.js\n// module id = US3d\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/graphic.js\n// module id = UeW/\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/gridSimple.js\n// module id = UkNE\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = Vb+l\n// module chunks = 0","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/core.js\n// module id = VewU\n// module chunks = 0","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/vml.js\n// module id = VmZa\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/SingleAxis.js\n// module id = WK/r\n// module chunks = 0","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = WO3U\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js\n// module id = WbrJ\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/geoCoord.js\n// module id = WxG6\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = XAC3\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushTargetManager.js\n// module id = XCrL\n// module chunks = 0","/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/traversalHelper.js\n// module id = XFat\n// module chunks = 0","var _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/index.js\n// module id = XLwt\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = XRkS\n// module chunks = 0","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = XhgW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/PiecewiseView.js\n// module id = XiVP\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js\n// module id = Y3kp\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js\n// module id = YbE0\n// module chunks = 0","/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/roamHelper.js\n// module id = YpIy\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/RadiusAxis.js\n// module id = YqdL\n// module chunks = 0","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox.js\n// module id = YsUA\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/backwardCompat.js\n// module id = Z2m1\n// module chunks = 0","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/brushHelper.js\n// module id = ZJ+T\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/PolarModel.js\n// module id = ZRmN\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.text {\\n  font-size: 14px;\\n}\\n.item {\\n  margin-bottom: 18px;\\n}\\n.clearfix:before,\\n.clearfix:after {\\n  display: table;\\n  content: \\\"\\\";\\n}\\n.clearfix:after {\\n  clear: both\\n}\\n.box-card {\\n  width: 480px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/index.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,gBAAgB;CACjB;AACD;EACE,oBAAoB;CACrB;AACD;;EAEE,eAAe;EACf,YAAY;CACb;AACD;EACE,WAAW;CACZ;AACD;EACE,aAAa;CACd\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.text {\\n  font-size: 14px;\\n}\\n.item {\\n  margin-bottom: 18px;\\n}\\n.clearfix:before,\\n.clearfix:after {\\n  display: table;\\n  content: \\\"\\\";\\n}\\n.clearfix:after {\\n  clear: both\\n}\\n.box-card {\\n  width: 480px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-b4edfd50\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/index.vue\n// module id = ZgE8\n// module chunks = 0","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkAreaModel.js\n// module id = ZtEr\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js\n// module id = ZuqD\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js\n// module id = a1DW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = aYad\n// module chunks = 0","function _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/categoryVisual.js\n// module id = akwy\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = auIi\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/singleAxisHelper.js\n// module id = ay5B\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\necharts.registerProcessor({\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  isOverallFilter: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = b/SY\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    normalText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (normalText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      normalText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Line.js\n// module id = bzOU\n// module chunks = 0","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/core.js\n// module id = cI6i\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js\n// module id = cN90\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: createClipShape(coordSys, false, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      var coordSysClipShape = createClipShape(coordSys, false, seriesModel); // Update clipPath\n\n      lineGroup.setClipPath(coordSysClipShape); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: coordSysClipShape\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineView.js\n// module id = cO/Q\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/textCoord.js\n// module id = cU6c\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey.js\n// module id = cWq4\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian.js\n// module id = ct4P\n// module chunks = 0","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = cuL/\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: (coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value'])\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js\n// module id = d1IL\n// module chunks = 0","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/featureManager.js\n// module id = dCQY\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will\n  // cut part of the symbol element shape.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/SymbolDraw.js\n// module id = dZZy\n// module chunks = 0","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = dp0Z\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = dtW/\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/helper.js\n// module id = dzlV\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/animation.js\n// module id = e+YR\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCreator.js\n// module id = eH0a\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BarView.js\n// module id = eHPu\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/FunnelSeries.js\n// module id = eQYg\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/AxisModel.js\n// module id = ecfp\n// module chunks = 0","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js\n// module id = envY\n// module chunks = 0","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/radialLayout.js\n// module id = f0h+\n// module chunks = 0","var positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js\n// module id = fAbo\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/treemapLayout.js\n// module id = fm2I\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/preprocessor.js\n// module id = g8A/\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/TreemapSeries.js\n// module id = gLqW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/treeHelper.js\n// module id = gOx9\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/ContinuousView.js\n// module id = gZam\n// module chunks = 0","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/singleCreator.js\n// module id = ghha\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/RadarView.js\n// module id = guZJ\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/FunnelView.js\n// module id = h4VJ\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js\n// module id = h6Uy\n// module chunks = 0","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge/PointerPath.js\n// module id = hG1p\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/GradientManager.js\n// module id = hZf2\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/BrushView.js\n// module id = hdbT\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js\n// module id = i6Ks\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/timelineAction.js\n// module id = iEm+\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/graphAction.js\n// module id = iZVd\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/BrushModel.js\n// module id = icur\n// module chunks = 0","/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/roamHelper.js\n// module id = ii60\n// module chunks = 0","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = ilLo\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/prepareCustom.js\n// module id = ilox\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/TreemapView.js\n// module id = ix3c\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/radar/Radar.js\n// module id = jJrn\n// module chunks = 0","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/svg.js\n// module id = jLnL\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineSeries.js\n// module id = jMTz\n// module chunks = 0","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/geo/GeoView.js\n// module id = jpt2\n// module chunks = 0","// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js\n// module id = k7nC\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/effectScatter.js\n// module id = k9Bd\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = kQD9\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = koEO\n// module chunks = 0","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoomSelect.js\n// module id = l2wH\n// module chunks = 0","function _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = l4Op\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/radar/RadarView.js\n// module id = lVde\n// module chunks = 0","function _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/radarLayout.js\n// module id = lwXq\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/PictorialBarView.js\n// module id = m5oG\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/barPolar.js\n// module id = mLyJ\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = mcsk\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/title.js\n// module id = miEh\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js\n// module id = mlpt\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/prepareCustom.js\n// module id = n/n4\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/visualEncoding.js\n// module id = n3NR\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js\n// module id = nQkE\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map.js\n// module id = nUSl\n// module chunks = 0","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/linesVisual.js\n// module id = nV/6\n// module chunks = 0","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap.js\n// module id = o0k+\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushController.js\n// module id = oDOe\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/SliderTimelineView.js\n// module id = oYIf\n// module chunks = 0","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/typeDefaulter.js\n// module id = od06\n// module chunks = 0","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/sliderMove.js\n// module id = og9+\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"./singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/SingleAxisView.js\n// module id = oqQy\n// module chunks = 0","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkPointModel.js\n// module id = orv6\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/markLine.js\n// module id = p1Ck\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js\n// module id = pSwa\n// module chunks = 0","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n\n    },\n    progressive: null\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/scatter/ScatterSeries.js\n// module id = pmYM\n// module chunks = 0","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/forceLayout.js\n// module id = pzOI\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js\n// module id = qBny\n// module chunks = 0","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/parallelCreator.js\n// module id = qSkD\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\necharts.registerVisual(parallelVisual);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel.js\n// module id = qbKW\n// module chunks = 0","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = r9WW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/RadiusAxisView.js\n// module id = rFvp\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b4edfd50\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"6a030f4f\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-b4edfd50\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/index.vue\n// module id = rTVE\n// module chunks = 0","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js\n// module id = rbn0\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = ri8f\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar.js\n// module id = rjsW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/AxisModel.js\n// module id = rwkR\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisDefault.js\n// module id = s/lY\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/helper.js\n// module id = s1Aj\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel) && i < ticksCoords.length - 1) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/CartesianAxisView.js\n// module id = s48c\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = sJ4e\n// module chunks = 0","var createListSimply = require(\"../helper/createListSimply\");\n\nvar WhiskerBoxDraw = require(\"../helper/WhiskerBoxDraw\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalPrepareUpdate(seriesModel, ecModel, api);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalUpdate(params, seriesModel, ecModel, api);\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js\n// module id = sK5G\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LinePath.js\n// module id = sOJ4\n// module chunks = 0","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge/GaugeView.js\n// module id = sTIA\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var dataDimensions = zrUtil.map(dimensions, function (axisDim) {\n      return data.mapDimension(axisDim);\n    });\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dataDimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/Parallel.js\n// module id = sYrQ\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/geoCreator.js\n// module id = srbS\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush.js\n// module id = swsf\n// module chunks = 0","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap.js\n// module id = tQk0\n// module chunks = 0","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var stacked = isDimensionStacked(data, valueDim, baseDim);\n  var dataDimsForPoint = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  return {\n    dataDimsForPoint: dataDimsForPoint,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/helper.js\n// module id = tzpD\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataView.js\n// module id = u9lB\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/scatter.js\n// module id = u9yV\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/EffectLine.js\n// module id = uA0k\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/scatter/ScatterView.js\n// module id = uNEE\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js\n// module id = uv9t\n// module chunks = 0","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = v/cD\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkPointView.js\n// module id = vEM8\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/mapDataStatistic.js\n// module id = vIe4\n// module chunks = 0","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/orthogonalLayout.js\n// module id = veIh\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = vjPX\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim, otherDataDim);\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/markerHelper.js\n// module id = vx1D\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    });\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js\n// module id = vxwL\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (!visualMapModel.isTargetSeries(seriesModel)) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/visualEncoding.js\n// module id = w2H/\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/calendar/CalendarView.js\n// module id = w6Zv\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/VisualMapModel.js\n// module id = wH4Y\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = wLWv\n// module chunks = 0","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom.js\n// module id = wQkr\n// module chunks = 0","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/sankeyLayout.js\n// module id = wTOJ\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/GeoModel.js\n// module id = whrq\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/radar/RadarModel.js\n// module id = xLO3\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/calendar/CalendarModel.js\n// module id = yEXw\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    if (!this._finished || seriesModel.pipelineContext.large) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/LinesView.js\n// module id = z+uQ\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/GraphSeries.js\n// module id = z81E\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = zAPJ\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/VisualMapView.js\n// module id = zO13\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines.js\n// module id = zjhG\n// module chunks = 0","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/selector.js\n// module id = zlsk\n// module chunks = 0","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis.js\n// module id = zz1u\n// module chunks = 0"],"sourceRoot":""}