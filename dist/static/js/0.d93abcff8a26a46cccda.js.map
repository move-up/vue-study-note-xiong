{"version":3,"sources":["webpack:///static/js/0.d93abcff8a26a46cccda.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./src/pages/home/charts/mixChart.vue?385e","webpack:///./src/pages/home/charts/line.vue?2f7b","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/component/dataset/DatasetModel.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./src/pages/home/charts/keyboard.vue?9ebc","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/helper/WhiskerBoxDraw.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./src/pages/home/add.vue","webpack:///./src/utils/index.js","webpack:///./src/pages/home/charts/keyboard.vue","webpack:///./src/pages/home/charts/line.vue","webpack:///./src/pages/home/charts/mixChart.vue","webpack:///./src/pages/home/autoComplete.vue","webpack:///./src/pages/home/index.vue","webpack:///src/pages/home/add.vue","webpack:///./src/pages/home/add.vue?f63e","webpack:///./src/components/Charts/mixins/resize.js","webpack:///src/components/Charts/keyboard.vue","webpack:///./src/components/Charts/keyboard.vue?1e28","webpack:///./src/components/Charts/keyboard.vue","webpack:///src/pages/home/charts/keyboard.vue","webpack:///./src/pages/home/charts/keyboard.vue?91a2","webpack:///src/components/Charts/lineMarker.vue","webpack:///./src/components/Charts/lineMarker.vue?2c29","webpack:///./src/components/Charts/lineMarker.vue","webpack:///src/pages/home/charts/line.vue","webpack:///./src/pages/home/charts/line.vue?d94e","webpack:///src/components/Charts/mixChart.vue","webpack:///./src/components/Charts/mixChart.vue?1edb","webpack:///./src/components/Charts/mixChart.vue","webpack:///src/pages/home/charts/mixChart.vue","webpack:///./src/pages/home/charts/mixChart.vue?c08e","webpack:///src/pages/home/autoComplete.vue","webpack:///./src/pages/home/autoComplete.vue?8903","webpack:///src/pages/home/index.vue","webpack:///./src/pages/home/index.vue?fb36","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./src/pages/home/autoComplete.vue?a006","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/chart/tree/commonLayout.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/zrender/lib/svg/helper/ShadowManager.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./src/pages/home/charts/mixChart.vue?54bd","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./src/pages/home/index.vue?1ae7","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./src/pages/home/charts/line.vue?ba30","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./src/pages/home/charts/keyboard.vue?59f3","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./src/pages/home/autoComplete.vue?5990","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/component/axis/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/chart/tree/radialLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./src/pages/home/add.vue?af71","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./src/pages/home/index.vue?35bd","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./src/pages/home/add.vue?ba6f","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/tree/orthogonalLayout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/axis.js"],"names":["webpackJsonp","+Dgo","module","exports","__webpack_require__","extendComponentView","type","+PQg","isUserFeatureName","featureName","indexOf","echarts","zrUtil","textContain","featureManager","graphic","Model","DataDiffer","listComponentHelper","_default","render","toolboxModel","ecModel","api","payload","processFeature","newIndex","oldIndex","feature","featureNames","oldName","featureOpt","featureOpts","featureModel","model","onclick","option","Feature","get","features","dispose","unusable","remove","createIconPaths","setIconStatus","iconName","status","this","iconPaths","iconStatus","trigger","iconStyleModel","getModel","iconStyleEmphasisModel","icons","getIcons","titles","icon","title","each","iconStr","path","createIcon","x","itemSize","y","width","height","setStyle","getItemStyle","hoverStyle","setHoverStyle","__title","on","text","textPosition","textFill","fill","stroke","textAlign","group","add","bind","removeAll","_features","opt","name","push","_featureNames","update","curry","execute","layout","makeBackground","getBoundingRect","eachChild","titleText","rect","makeFont","offsetX","position","offsetY","needPutOnTop","getHeight","topOffset","getWidth","updateView","+bDV","setEncodeAndDimensions","source","seriesModel","encodeDefine","parallelModel","getComponent","createHashMap","dimensions","axisDim","dataDimIndex","convertDimNameToNumber","set","dimName","replace","_util","SeriesModel","createListFromArray","extend","dependencies","visualColorAccessPath","getInitialData","progressive","animation","getSource","getRawIndicesByActiveState","activeState","coordSys","coordinateSystem","data","getData","indices","eachActiveState","theActiveState","dataIndex","getRawIndex","defaultOption","zlevel","z","parallelIndex","label","show","inactiveOpacity","activeOpacity","lineStyle","opacity","emphasis","smooth","animationEasing","+bS+","getPointDimIndex","axis","isHorizontal","getGlobalExtent","dimIndex","getRect","XY","WH","BaseAxisPointer","viewHelper","singleAxisHelper","AxisView","SingleAxisPointer","makeElOption","elOption","value","axisModel","axisPointerModel","otherExtent","pixelValue","dataToPoint","axisPointerType","elStyle","buildElStyle","pointerOption","pointerShapeBuilder","style","graphicKey","pointer","layoutInfo","buildCartesianSingleLabelElOption","getHandleTransform","labelInside","labelMargin","getTransformedPosition","rotation","labelDirection","Math","PI","updateHandleTransform","transform","delta","axisExtent","currPosition","min","max","cursorOtherValue","cursorPoint","tooltipOption","verticalAlign","line","targetShape","makeLineShape","subPixelOptimizeLine","shape","shadow","bandWidth","getBandWidth","span","makeRectShape","registerAxisPointerClass","+jMe","Tree","hostModel","levelOptions","leavesOption","root","_nodes","levelModels","map","levelDefine","leavesModel","addChild","child","node","children","parentNode","linkList","List","createDimensions","TreeNode","hostTree","depth","viewChildren","prototype","constructor","isRemoved","eachNode","options","cb","context","isString","order","suppressVisitSub","attr","call","i","length","updateDepthAndHeight","getNodeById","id","getId","len","res","contains","getAncestors","includeSelf","ancestors","reverse","getValue","dimension","getDimension","setLayout","merge","setItemLayout","getLayout","getItemLayout","itemModel","getItemModel","levelModel","getLevelModel","isExpand","getLeavesModel","setVisual","key","setItemVisual","getVisual","ignoreParent","getItemVisual","isAncestorOf","parent","isDescendantOf","getNodeByDataIndex","rawIndex","getNodeByName","nodes","count","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","buildHierarchy","dataNode","dimMax","isArray","listData","tree","levels","leaves","dimensionsInfo","coordDimensions","dimensionsCount","list","initData","mainData","struct","structAttr","+pdh","helper","noop","actionTypes","registerAction","handleRootToNode","index","types","targetInfo","retrieveTargetInfo","originViewRoot","getViewRoot","direction","aboveViewRoot","resetViewRoot","eachComponent","mainType","subType","query","+u5N","createGraphFromNodeEdge","_format","encodeHTML","SankeySeries","links","edges","getGraph","graph","getEdgeData","edgeData","formatTooltip","multipleSeries","dataType","params","getDataParams","rawDataOpt","html","target","superCall","left","top","right","bottom","nodeWidth","nodeGap","layoutIterations","color","fontSize","itemStyle","borderWidth","borderColor","curveness","animationDuration","/99E","/BOW","Axis","ParallelAxis","dim","scale","coordExtent","axisType","axisIndex","inherits","/gZK","nameList","/vN/","createListSimply","modelUtil","_number","getPercentWithPrecision","dataSelectableMixin","_dataProvider","retrieveRawAttr","PieSeries","extendSeriesModel","init","superApply","arguments","legendDataProvider","getRawData","updateSelectedMap","_createSelectableList","_defaultLabelLine","mergeOption","newOption","valueDim","mapDimension","targetList","getName","selected","valueList","percent","$vars","defaultEmphasis","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","legendHoverLink","hoverAnimation","center","radius","clockwise","startAngle","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","rotate","length2","animationType","mixin","0BNI","getAxisLineShape","polar","rExtent","angle","slice","start","coordToPoint","end","x1","y1","x2","y2","getRadiusIdx","getRadiusAxis","inverse","elementList","axisPointerClass","angleAxisModel","angleAxis","radiusExtent","getExtent","ticksAngles","getTicksCoords","pop","isBlank","_axisLine","lineStyleModel","circle","Circle","cx","cy","r","getLineStyle","z2","silent","_axisTick","tickModel","tickLen","lines","tickAngle","Line","mergePath","defaults","_axisLabel","categoryData","getCategories","labelModel","labels","getFormattedLabels","labelsAngles","getLabelsCoords","p","labelTextAlign","abs","labelTextVerticalAlign","textStyle","textEl","Text","setTextStyle","getTextColor","textVerticalAlign","_splitLine","splitLineModel","lineColors","lineCount","Array","splitLines","colorIndex","_splitArea","splitAreaModel","areaStyleModel","areaColors","splitAreas","RADIAN","prevAngle","r0","r1","Sector","endAngle","getAreaStyle","0BOU","Calendar","calendarModel","_model","doConvert","methodName","finder","numberUtil","CoordinateSystem","getDimensionsInfo","getRangeInfo","_rangeInfo","_rect","getCellWidth","_sw","getCellHeight","_sh","getOrient","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","date","parseDate","getFullYear","m","getMonth","d","getDate","day","getDay","time","getTime","formatedDate","getNextNDay","n","Date","setDate","cellSizeSpecified","cellSize","idx","_lineWidth","lineWidth","_getRangeInfo","_initRangeOption","weeks","whNames","layoutParams","getBoxLayoutParams","cellNumbers","whGlobal","calendarRect","getLayoutRect","clamp","dayInfo","range","NaN","week","nthWeek","pointToData","point","pointToDate","dataToRect","contentShape","tl","tr","br","bl","nthX","floor","nthY","_getDateByWeeksAndDay","convertToPixel","convertFromPixel","rg","test","firstDay","setMonth","tmp","reversed","allDay","startDateNum","endDateNum","sign","fweek","lweek","rangeInfo","nthDay","create","calendarList","calendar","eachSeries","calendarSeries","register","0O1a","preprocessor","registerPreprocessor","0fQF","Diff","buildValues","diff","components","newArr","oldArr","componentPos","componentLen","newPos","oldPos","component","removed","added","clonePath","callback","arrayDiff","equals","a","b","self","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","ret","diagonalPath","basePath","addPath","removePath","undefined","canAdd","canRemove","pushComponent","last","commonCount","tokenize","join","0jKn","parseInt10","val","parseInt","VMLPainter","storage","vmlCore","initVML","vmlViewport","document","createElement","vmlRoot","cssText","appendChild","_vmlRoot","_vmlViewport","resize","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","el","onRemove","onAdd","_firstPaint","createMethodNotSupport","method","zrLog","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","getDisplayList","_paintList","invisible","ignore","__alreadyNotVisible","__dirty","beforeBrush","brushVML","brush","afterBrush","_getWidth","_getHeight","_width","_height","vmlViewportStyle","innerHTML","clear","removeChild","stl","currentStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","0nGg","getItemOpacity","item","opacityPath","fadeOutItem","opacityRatio","getGraphicEl","downplay","traverse","fadeInItem","highlight","SymbolDraw","LineDraw","RoamController","roamHelper","_cursorHelper","onIrrelevantElement","adjustEdge","nodeOpacityPath","lineOpacityPath","extendChartView","symbolDraw","lineDraw","_controller","getZr","_controllerHost","_symbolDraw","_lineDraw","_firstRender","_nodeScaleRatio","groupNewProp","updateProps","_getNodeGlobalScale","updateData","_updateNodeAndLinkScale","_updateController","clearTimeout","_layoutTimeout","forceLayout","layoutAnimation","_startForceLayoutIteration","eachItemGraphicEl","off","draggable","warmUp","_layouting","setFixed","setUnfixed","setDraggable","__focusNodeAdjacency","__unfocusNodeAdjacency","dispatchAction","seriesId","eachEdge","edge","edgeDataIndex","circularRotateLabel","symbolPath","getSymbolPath","pos","rad","atan2","isLeft","textRotation","textOrigin","focusNodeAdjacency","getNodeByIndex","getEdgeByIndex","adjacentEdge","node1","node2","unfocusNodeAdjacency","step","stopped","updateLayout","setTimeout","controller","controllerHost","setPointerChecker","e","applyTransform","contain","disable","enable","zoomLimit","zoom","getZoom","dx","dy","updateViewOnPan","mouseX","mouseY","updateViewOnZoom","originX","originY","nodeScale","invScale","nodeScaleRatio","groupScale","groupZoom","0pMY","Brush","_brushType","_brushMode","lang","brushLang","toolbox","polygon","lineX","lineY","keep","clone","proto","brushType","brushMode","isBrushed","brushModel","brushOption","areas","availableIcons","intervals","command","1A4n","updateDataSelected","uid","hasAnimation","from","toggleItemSelected","getItemGraphicEl","isSelected","midAngle","cos","sin","offset","animate","when","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","Group","sector","Polyline","ChartView","piePieceProto","firstCreate","stopAnimation","animateTo","childAt","sectorShape","setShape","getShallow","initProps","visualColor","useStyle","lineJoin","cursorStyle","isAnimationEnabled","_updateLabel","labelText","labelLayout","points","linePoints","origin","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","PieView","sectorGroup","_sectorGroup","oldData","_data","isFirstRender","onSectorClick","selectedMode","piePiece","setItemGraphicEl","newIdx","oldIdx","removeClipPath","setClipPath","_createClipPath","clipPath","containPoint","itemLayout","sqrt","1FNb","categoryFilter","visualSymbol","categoryVisual","edgeVisual","simpleLayout","circularLayout","createView","registerProcessor","registerVisual","registerLayout","registerCoordinateSystem","1Nix","seriesType","plan","createRenderPlanner","reset","progress","segCount","isLargeRender","Float32Array","dimLen","tmpIn","tmpOut","dims","isNaN","pipelineContext","large","isDimensionStacked","getCalculationInfo","_dataStackHelper","1VkX","updateStyle","itemGroup","normalItemStyleModel","normalStyleAccessPath","whiskerEl","whiskerIndex","bodyEl","bodyIndex","emphasisStyleAccessPath","_whiskerBoxCommon","viewMixin","CandlestickView","getStyleUpdater","1bHA","getSymbolSize","symbolSize","getScale","SymbolClz","seriesScope","driftSymbol","drift","_symbol","createSymbol","parsePercent","_labelHelper","getDefaultLabel","symbolProto","_createSymbol","symbolType","culling","_symbolType","stopSymbolAnimation","toLastFrame","setZ","cursor","isInit","_updateCommon","fadeIn","_seriesModel","normalLabelAccessPath","emphasisLabelAccessPath","getLabelDefaultText","useNameLabel","strokeNoScale","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hasItemOption","setColor","symbolInnerColor","isRectText","incremental","ratio","fadeOut","keepLabel","1bf2","1uRk","generateNodeKey","Node","inEdges","outEdges","hostGraph","Edge","n1","n2","_config","__DEV__","_clazz","enableClassCheck","Graph","directed","_directed","_nodesMap","_edgesMap","graphProto","isDirected","addNode","nodesMap","rawIdx","addEdge","edgesMap","isInstance","getEdge","breadthFirstTraverse","startNode","edgeType","__visited","queue","currentNode","shift","otherNode","filterSelf","degree","inDegree","outDegree","createGraphDataProxyMixin","hostName","dataName","22Bn","version","sources","names","mappings","file","sourcesContent","sourceRoot","27cN","2Ow2","createGridClipShape","rectEl","Rect","createLinePoints","isEmptyValue","getAxis","addEl","dataGroup","updateElCommon","seriesStyleModel","ParallelView","_dataGroup","_renderForNormal","newDataIndex","oldDataIndex","animationModel","2W4A","eachSeriesByType","colorList","itemStyleModel","areaColor","seriesIndex","2m1D","getMarkerPosition","pt","clampData","size","getBaseAxis","barMinHeight","barMinAngle","2tOJ","markPoint","3n/B","43ae","updateAxisPointer","axisView","forceRender","Clazz","getAxisPointerClass","axisPointerModelHelper","getAxisPointerModel","_axisPointer","disposeAxisPointer","axisPointer","fixValue","force","axisPointerClazz","clazz","4A6G","lineData","lineCoords","isLarge","isPolyline","totalCoordsCount","getLineCoordsCount","getLineCoords","k","pts","j","4RQY","coordDim","concat","hasValue","simpleLayoutEdge","_simpleLayoutHelper","4SGL","virtualRoot","treeRoot","rootDepth","sort","initChildren","validDataCount","sum","unitRadian","renderRollupNode","rPerLevel","restAngle","PI2","valueSumLargerThanMinAngle","dir","renderNode","rStart","rEnd","siblingAngle","isAsc","sortOrder","4SW2","4UDB","layoutPoints","dataSample","PRIORITY","PROCESSOR","STATISTIC","4V7L","4w1v","round4","mathRound","isAroundZero","EPSILON","pathHasFill","isText","NONE","pathHasStroke","textStroke","setTransform","svgEl","arrayJoin","setAttribute","attrXLink","setAttributeNS","bindStyle","getAttribute","textStrokeWidth","host","getLineScale","lineDash","lineDashOffset","lineCap","miterLimit","pathDataToString","str","dataLength","cmd","cmdStr","nData","CMD","M","L","Q","C","A","rx","ry","theta","dTheta","psi","dThetaPositive","isCircle","x0","mathCos","y0","mathSin","Z","R","w","h","getVerticalAlignForSvg","_core","PathProxy","BoundingRect","textHelper","round","svgPath","__svgEl","createPathProxy","__dirtyPath","beginPath","buildPath","pathStr","svgTextDrawRectText","svgImage","image","HTMLImageElement","src","dw","dh","__imageSrc","svgText","tmpRect","textRect","normalizeTextStyle","textSvgEl","__textSvgEl","distance","textDistance","align","font","fontStyle","fontWeight","fontFamily","DEFAULT_FONT","lineHeight","adjustTextPositionOnRect","textPadding","transformText","copy","transformCoordToGlobal","textLines","split","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","createTextNode","drawRectText","5/bM","dataColor","funnelLayout","dataFilter","56C7","globalListener","AxisPointerView","globalAxisPointerModel","globalTooltipModel","triggerOn","currTrigger","unregister","5Hn/","getOtherDim","thisDim","getCursor","orient","eventTool","throttle","DataZoomView","sliderMove","linearMap","asc","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dragging","_dataShadowInfo","dataZoomModel","createOrUpdate","_buildView","_updateView","thisGroup","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","positionInfo","getLayoutParams","layoutRect","padding","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","info","_prepareDataShadowInfo","series","otherDim","getShadowDim","otherDataExtent","getDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","isEmpty","otherCoord","Polygon","showDataShadow","result","eachTargetAxis","dimNames","seriesModels","getAxisProxy","getTargetSeriesModels","thisAxis","getOtherAxis","displaybles","handles","handleLabels","filler","_onDragMove","onmousemove","stop","event","ondragstart","_showDataInfo","ondragend","_onDragEnd","onmouseover","onmouseout","subPixelOptimizeRect","handleIndex","bRect","handleColor","textStyleModel","textFont","getFont","getPercentRange","viewExtent","_updateInterval","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","minSpan","maxSpan","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","setLabel","barTransform","getTransform","transformDirection","textPoint","orderedHandleEnds","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","valueWindow","getDataValueWindow","_formatLabel","labelFormatter","labelPrecision","getPixelPrecision","valueStr","getLabel","toFixed","isFunction","showOrHide","getLocalTransform","vertex","realtime","_dispatchZoomAction","localPoint","transformCoordToLocal","dataZoomId","getTargetCoordInfo","coordInfoList","5KWC","globalColors","eachRawSeriesByType","defaulColor","legendSymbol","borderColorQuery","isSeriesFiltered","5Mek","zr","pointerChecker","_zr","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","Eventful","controlType","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","isPinching","_pinching","notLeftMouse","_x","_y","checkKeyBinding","gestureEvent","interactionMutex","isTaken","oldX","oldY","wheelDelta","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","prop","setting","5dr1","Cartesian2D","Cartesian","getAxesByScale","axisX","axisY","toLocalCoord","containData","reserved","out","xAxis","yAxis","toGlobalCoord","dataToCoord","xAxisExtent","yAxisExtent","coordToData","5vFd","isAxisUsedInTheGrid","gridModel","getCoordSysModel","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","ceil","isLabelIgnored","unrotatedSingleRect","getTextRect","singleRect","union","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","onZero","onZeroAxisIndex","otherAxis","canNotOnZeroToAxis","hasOwnProperty","ifAxisCrossZero","updateAxisTransform","coordBase","axisExtentSum","coord","findAxesModels","axesTypes","getReferringComponents","isCartesian2D","_layout","axisHelper","Axis2D","niceScaleExtent","gridProto","axisPointerEnabled","_updateScale","ignoreContainLabel","adjustAxes","axesList","extent","gridRect","setExtent","labelUnionRect","margin","axesMapOnDim","getAxes","getCartesian","xAxisIndex","yAxisIndex","isObject","coordList","getCartesians","_findConvertTarget","cartesian","xAxisModel","yAxisModel","coordsList","componentIndex","grid","createAxisCreator","axisPosition","axisPositionUsed","createScaleByModel","isCategory","onBand","axesCount","addAxis","unionExtent","unionExtentFromData","Infinity","axesModels","getTooltipAxes","baseAxes","otherAxes","baseAxis","grids","6HcI","polarOptArr","polarNotRadar","polarOpt","indicator","radar","seriesOpt","polarIndex","radarIndex","6HoR","_poly","_layers","keyGetter","process","oldLayersGroups","points0","points1","layerSeries","textLayout","layerGroup","newLayersGroups","stackedOnPoints","stackedOnSmooth","smoothConstraint","hoverItemStyleModel","getFormattedLabel","getLayerSeries","boundaryGap","dataDiffer","_layersSeries","6JAQ","isNameSpecified","LegendModel","extendComponentModel","layoutMode","ignoreSize","parentModel","mergeDefaultAndTheme","optionUpdated","_updateData","legendData","hasSelected","select","potentialData","availableNames","eachRawSeries","seriesName","isPotential","mapArray","_availableNames","rawData","dataItem","unSelect","toggleSelected","backgroundColor","borderRadius","itemGap","itemWidth","itemHeight","inactiveColor","tooltip","6MCj","env","_vector","colorTool","RectText","Displayable","ZImage","Path","Gradient","mathMax","canvasSupported","Z2","initRootElStyle","coordsize","coordorigin","encodeHtmlAttribute","s","String","rgb2Str","g","append","getZIndex","parseFloat","maxValue","lastIndexOf","setColorAndOpacity","colorArr","parse","getColorAndAlpha","updateFillNode","zrEl","gradientType","focus","expansion","rectWidth","rectHeight","p0","p1","stops","colorStops","cs1","cs2","colorAndAlphaList","colors","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateStrokeNode","dashstyle","updateFillAndStroke","vmlEl","isFill","getElementsByTagName","createNode","nPoint","xi","yi","x3","y3","sx","sy","_vmlEl","needTransform","strokeEl","det","weight","toStatic","zIndex","removeRectText","appendRectText","isImage","img","tagName","toUpperCase","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sw","sWidth","sh","sHeight","hasCrop","doc","vmlElStyle","hasRotation","scaleX","scaleY","p2","p3","maxX","maxY","transformFilter","filter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","Image","onload","overflow","cropElStyle","filterStr","alpha","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","getFontStyle","fontString","variant","fontVariant","family","$override","body","ex","offsetWidth","fromTextEl","rich","contentBlock","parseRichText","tokens","textLine","adjustTextX","adjustTextY","pathEl","textPathEl","skewEl","textVmlEl","_textVmlEl","firstChild","nextSibling","textpathok","to","coords","textVmlElStyle","matrix","string","6UfY","AngleAxis","angleExtent","dataToAngle","angleToData","6axr","RadiusAxis","Polar","_radiusAxis","_angleAxis","pointToCoord","scaleType","radiusAxis","getAngleAxis","dataToRadius","radiusToData","maxAngle","radian","6f6q","legendSelectActionHandler","selectedMap","isToggleSelect","legendModel","isItemSelected","6n1D","ctor","_ctor","LineGroup","doAdd","lineNeedsDraw","doUpdate","oldLineData","newLineData","itemEl","makeSeriesScope","hoverLineStyle","isPointNaN","lineDrawProto","isPersistent","_lineData","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","useHoverLayer","_clearIncremental","_incremental","clearDisplaybles","7XrG","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","animationDurationUpdate","animationEasingUpdate","crossStyle","7bL3","themeRiverLayout","themeRiverVisual","80cc","legendFilter","Component","registerSubTypeDefaulter","80zD","makeAction","actionInfo","geoModel","geo","regions","region","82Fv","_sourceHelper","detectSourceFormat","_sourceType","SERIES_LAYOUT_BY_COLUMN","DatasetModel","seriesLayoutBy","sourceHeader","87tG","8DFW","_dimensionHelper","getDimensionTypeByAxis","nest","ThemeRiverSeries","nameMap","fixData","rawDataLength","dataByName","entries","layData","dataList","values","layerNum","largestLayer","timeValue","keyIndex","l","singleAxisModel","queryComponents","filterData","dimensionsDefine","single","itemName","comparer","index1","index2","timeDim","lenCount","indexArr","getAxisTooltipData","nestestValue","minDist","Number","MAX_VALUE","nearestIdx","pointNum","theValue","dist","dataIndices","htmlName","htmlValue","singleAxisIndex","8Mpj","DataZoomModel","disabled","zoomLock","8RN9","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","_listComponent","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","resetInner","itemAlign","renderInner","viewportSize","maxSize","mainRect","layoutInner","contentGroup","legendDrawnMap","selectMode","newline","getSeriesByName","legendSymbolType","_createItem","indexOfName","itemIcon","tooltipModel","legendGlobalTooltipModel","textX","formatter","content","hitRect","formatterParams","componentType","legendIndex","__legendDataIndex","box","contentRect","8UWf","orthogonalLayout","radialLayout","8YpK","dataToCoordSize","dataSize","halfSize","997V","9Owa","newSnapshot","store","giveStore","batchItem","percentRange","head","snapshot","ATTR","9Z3y","getSum","roseType","currentAngle","9cSo","candlestickVisual","candlestickLayout","A+A9","locals","A6Kt","sunburstLayout","AKXb","axisTrigger","link","coordSysAxesInfo","collect","ARaV","isInifinity","isFinite","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","markerHelper","updateSingleMarkerEndLayout","isFrom","xPx","yPx","getValues","createList","mlModel","coordDimsInfos","getDimensionInfo","fromData","toData","optData","markLineTransform","dimValueGetter","MarkerView","mlType","valueDataDim","retrieve","axisInfo","getAxisInfo","valueAxis","numCalculate","valueIndex","baseIndex","mlFrom","mlTo","precision","dataTransform","updateTransform","markLineModel","mlData","__from","__to","markerGroupMap","renderSeries","updateDataVisualAndLayout","symbol","seriesData","lineDrawMap","setData","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","dataModel","__keep","AbHi","SaveAsImage","saveAsImageLang","saveAsImage","excludeComponents","pixelRatio","$a","download","url","getConnectedDataURL","href","MouseEvent","browser","ie","window","navigator","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","tab","open","write","evt","view","bubbles","cancelable","dispatchEvent","AjK0","defaultSymbolType","performRawSeries","dataEach","rawValue","getRawValue","itemSymbolType","itemSymbolSize","hasCallback","AjST","boxplotVisual","boxplotLayout","B123","visualDefault","visualType","active","inactive","colorHue","colorSaturation","colorLightness","colorAlpha","BqCv","fromAxisAreaSelect","findComponents","getCoverInfoList","activeIntervals","interval","panelId","AxisBuilder","BrushController","brushHelper","_brushController","_onBrush","oldAxisGroup","_axisGroup","coordSysModel","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","strokeContainThreshold","axisBuilder","getGroup","_refreshBrushController","groupTransition","extentLen","extra","mount","enableGlobalPan","setPanels","makeRectPanelClipPath","isTargetByCursor","makeRectIsTargetByCursor","getLinearBrushOtherExtent","makeLinearBrushOtherExtent","enableBrush","brushStyle","removeOnClick","updateCovers","coverInfoList","coverInfo","isEnd","parallelAxisId","BuI2","ComponentModel","containLabel","C6b9","ROOT_TO_NODE_ACTION","HIGHLIGHT_ACTION","handleHighlight","handleUnhighlight","unhighlight","CUwD","symbolNeedsDraw","getTreeNodeStyle","updateNode","symbolEl","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","realRoot","rootLayout","__edge","BezierCurve","getEdgeShape","removeNode","cpx1","cpy1","cpx2","cpy2","radialCoor1","radialCoordinate","radialCoor2","curvature","radialCoor3","radialCoor4","_layoutHelper","_oldTree","_mainGroup","expandAndCollapse","CWSg","opacityMap","normal","itemOpacity","opacityAccessPath","CiLi","WhiskerBox","styleUpdater","_createContent","transInit","initBaseline","makeWhiskerEndsShape","whiskerEnds","ends","WhiskerBoxDraw","WhiskerPath","ctx","moveTo","lineTo","whiskerBoxProto","constDim","chartLayout","bodyEnds","updateMethod","whiskerBoxDrawProto","Cuh7","SankeyShape","extendShape","halfExtent","bezierCurveTo","closePath","nodeData","curve","n1Layout","n2Layout","edgeLayout","ty","D7EH","getAxisDimIndex","cartesianAxisHelper","CartesianAxisPointer","tooltipOptions","DHpS","getAxisType","axisName","makeStyleMapper","axisModelCreator","axisModelCommonMixin","AxisModel","setActiveIntervals","getActiveState","DPh+","BaseBarSeries","brushSelector","DZTl","visualMap","has","pieces","splitList","piece","obj","DknX","DataZoom","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","history","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","BrushTargetManager","include","makePanelOpts","xAxisDeclared","yAxisDeclared","dataZoomLang","dataZoom","DATA_ZOOM_ID_BASE","back","handlers","unmount","nextActive","setBatch","minMax","findDataZoom","minValueSpan","maxValueSpan","startValue","endValue","found","dzModel","matchOutputRanges","area","coordRange","batch","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","newOpt","$fromToolbox","dataZoomOpts","opts","toolboxOpt","DnWC","SunburstPiece","SunburstView","doRenderNode","newNode","oldNode","renderLabelForZeroData","that","newRoot","newChildren","oldChildren","_oldChildren","getKey","processNode","newId","oldId","viewRoot","_onclickEvent","_rootToNode","highlightPolicy","_initEvents","targetFound","nodeClick","linkTarget","targetNode","DpwM","handler","inner","records","initGlobalListeners","useHandler","eventType","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","pendingList","makeInner","E7aA","dataZoomInfo","theDataZoomId","theCoordId","coordId","dataZoomInfos","allCoordIds","cleanStore","createController","controllerParams","mergeControllerParams","containsPoint","throttleUtil","throttleRate","shouldRecordRange","generateCoordId","coordModel","newRecord","onPan","onZoom","newX","newY","wrapAndDispatch","panGetRange","zoomGetRange","getRange","typePriority","type_true","type_move","type_false","type_undefined","oneType","roamControllerOpt","E8YU","getItemAlign","visualMapModel","modelOption","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","dataIndexInside","ERCD","hierNode","defaultAncestor","ancestor","prelim","modifier","change","thread","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","apportion","secondWalk","nodeX","defaultSeparation","radialCoor","getViewRect","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","wl","wr","F8oC","TimelineModel","controlPosition","autoPlay","rewind","loop","playInterval","currentIndex","_names","_initData","setCurrentIndex","getCurrentIndex","isIndexMax","setPlayState","state","getPlayState","thisOption","dataArr","idxArr","newItem","getDataItemValue","dimType","category","FP3a","__webpack_exports__","injectStyle","ssrContext","debounce","func","wait","immediate","timeout","args","timestamp","later","apply","_len","_key","callNow","keyboard_injectStyle","line_injectStyle","mixChart_injectStyle","autoComplete_injectStyle","home_injectStyle","Object","defineProperty","props","c","computed","total","watch","created","mounted","methods","_vm","_h","$createElement","_c","_self","attrs","controls-position","$$v","expression","_v","_s","staticRenderFns","esExports","home_add","normalizeComponent","__vue_styles__","pages_home_add","echarts_default","_this","__resizeHanlder","chart","addEventListener","beforeDestroy","removeEventListener","keyboard","mixins","className","default","initChart","getElementById","xAxisData","data2","setOption","inRange","axisLine","axisLabel","splitLine","axisTick","barBorderRadius","shadowBlur","shadowColor","showSymbol","animationDelay","areaStyle","animationDelayUpdate","keyboard_render","class","keyboard_staticRenderFns","keyboard_esExports","Charts_keyboard","keyboard_normalizeComponent","keyboard_Component","components_Charts_keyboard","charts_keyboard","required","Chart","charts_keyboard_render","staticClass","charts_keyboard_staticRenderFns","charts_keyboard_esExports","home_charts_keyboard","charts_keyboard_normalizeComponent","charts_keyboard___vue_styles__","charts_keyboard_Component","pages_home_charts_keyboard","lineMarker","legend","LinearGradient","lineMarker_render","lineMarker_staticRenderFns","lineMarker_esExports","Charts_lineMarker","lineMarker_normalizeComponent","lineMarker_Component","components_Charts_lineMarker","line_render","line_staticRenderFns","line_esExports","charts_line","line_normalizeComponent","line___vue_styles__","line_Component","home_charts_line","mixChart","xData","subtextStyle","calculable","splitArea","handleIcon","handleSize","handleStyle","stack","barMaxWidth","barGap","mixChart_render","mixChart_staticRenderFns","mixChart_esExports","Charts_mixChart","mixChart_normalizeComponent","mixChart_Component","components_Charts_mixChart","charts_mixChart","charts_mixChart_render","charts_mixChart_staticRenderFns","charts_mixChart_esExports","home_charts_mixChart","charts_mixChart_normalizeComponent","charts_mixChart___vue_styles__","charts_mixChart_Component","pages_home_charts_mixChart","defineProperty_default","autoComplete","restaurants","loadAll","address","querySearchAsync","queryString","results","createStateFilter","toLowerCase","handleSelect","console","log","v","autoComplete_render","fetch-suggestions","placeholder","autoComplete_staticRenderFns","autoComplete_esExports","home_autoComplete","autoComplete_normalizeComponent","autoComplete___vue_styles__","autoComplete_Component","pages_home_autoComplete","home","Add","AutoComplete","KeyboardChart","LineChart","MixChart","home_render","gutter","slot","staticStyle","float","home_staticRenderFns","home_esExports","pages_home","home_normalizeComponent","home___vue_styles__","home_Component","Fkmw","markAreaFilter","getSingleMarkerEndPoint","maModel","areaData","markAreaTransform","colorUtil","lt","rb","ltCoord","rbCoord","mergeAll","dimPermutations","markAreaModel","areaGroupMap","polygonGroup","__data","modifyAlpha","FlXs","checkTrigger","parallelPreprocessor","_api","_handlers","eventName","_throttledDispatchExpand","_dispatchExpand","_mouseDownPoint","mouseDownPoint","pow","getSlidedAxisExpandWindow","behavior","axisExpandWindow","debounceNextCall","FvdC","_roamHelper","updateCenterAndZoom","componentModel","setCenter","setZoom","seriesGroup","GQGX","timelineOpt","timeline","compatibleEC2","ec2Types","number","transferItem","controlStyle","itemStyleEmphasis","labelNormal","excludeLabelAttr","GWV8","calculateDataExtent","dataExtent","seriesExtent","getApproximateExtent","fixExtentByAxis","getMin","isCategoryAxis","axisDataLen","getMax","setAxisModel","isRestore","percentWindow","_percentWindow","_valueWindow","useOrigin","setRange","setMinMaxSpan","_minMaxSpan","_dataZoomModel","valueSpan","_dataExtent","AxisProxy","_dimName","_axisIndex","hostedBy","getDataPercentWindow","isCoordSupported","getOtherAxisModel","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","rangePropMode","getRangePropMode","boundValue","boundPercent","targetSeries","dataWindow","restore","isInWindow","filterMode","dataDims","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","selectRange","setApproximateExtent","GbHy","_barGrid","Gevp","RadarSeries","generateCoord","generateCoordCount","indicatorAxes","getIndicatorAxes","GnMB","normalizeSymbolSize","updateRipplePath","rippleGroup","effectCfg","ripplePath","EffectSymbol","beforeUpdate","_graphic","effectSymbolProto","stopEffectAnimation","startEffectAnimation","delay","period","effectOffset","rippleScale","animateStyle","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","propName","showEffectOn","Goha","intersectCurveCircle","curvePoints","t","radiusSquare","_t","v1","quadraticAt","mathAbs","v2DistSquare","next","v2","v3","nextDiff","tmp0","quadraticSubdivide","curveTool","pts2","__original","vec2","originalPoints","sub","normalize","scaleAndAdd","distSquare","Gp87","ComponentView","H4Od","TransformDummy","Transformable","View","_roamTransformable","_rawTransformable","_center","_zoom","vector","v2ApplyTransform","setBoundingRect","setViewRect","transformTo","_viewRect","rawTransform","calculateTransform","decomposeTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","getRoamTransform","rawTransformMatrix","roamTransform","defaultCenter","roamTransformable","rawTransformable","_rawTransform","invTransform","invert","getViewRectAfterRoam","noRoam","H4Wn","setSelected","HGSA","preprocessForPiecewise","pieceList","hasSpecialVisual","originIndex","visual","preprocessForSpecifiedCategory","categories","categoryMap","cate","visualArr","CATEGORY_DEFAULT_VISUAL_INDEX","setVisualToOption","normalizeVisualRange","doNotNeedPair","makePartialColorVisualHandler","applyValue","applyVisual","getter","setter","mapValueToVisual","_doMap","makeDoMap","doMapToArray","normalized","makeApplyVisual","doMapCategory","doMapFixed","sourceExtent","linear","piecewise","getSpecifiedVisual","fixed","pieceIndex","VisualMapping","findPieceIndex","parsedVisual","zrColor","littleThan","close","mappingMethod","_normalizeData","normalizers","visualHandler","visualHandlers","getColorMapper","assert","getNormalizer","isNormalized","returnRGBArray","fastLerp","stringify","modifyHSL","symbolCfg","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","updatePossible","newAbs","possibleI","pieceValue","HcG6","Geo","geoJson","specialAreas","_nameCoordMap","loadGeoJson","parseGeoJson","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","geoFixFuncs","containCoord","message","regionsMap","regionName","addGeoCoord","specialArea","_regionsMap","fixFunc","getRegion","getRegionByCoord","geoCoord","getGeoCoord","regionRect","ILx8","ITiI","gravity","random","pp","friction","v12","nLen","repFact","rep","IkDM","Breadcrumb","containerGroup","makeItemPoints","tail","ARRAY_LENGTH","splice","packEventData","itemNode","eventData","componentSubType","selfType","treePathInfo","wrapTreePathInfo","_treeHelper","onSelect","normalStyleModel","layoutParam","emptyItemWidth","totalWidth","renderList","_prepare","_renderContent","positionElement","TEXT_PADDING","lastX","availableSize","getAvailableSize","J+Ut","JFJR","IndicatorAxis","JIsR","legendModels","filterSeries","JMu0","Restore","restoreLang","resetOption","JNWs","GaugeSeries","dataOpt","splitNumber","offsetCenter","detail","JRc4","Jd65","EffectPolyline","EffectLine","_lastFrame","_lastFramePercent","effectPolylineProto","createLine","updateAnimationPoints","_points","accLenArr","_offsets","_length","getLineLength","updateSymbolPosition","__t","offsets","frame","lastFrame","lerp","tx","JzYe","Single","_axis","_init","SingleAxis","_adjustAxis","_updateAxisTransform","extentSum","KAfT","linkedNodesFinder","createLinkedNodesFinder","eachAxisDim","effectedModels","setRawRange","KGuM","aspect","viewList","coordSysType","positions","bbox","fromPoints","viewRect","bbWidth","bbHeight","viewWidth","viewHeight","viewCoordSys","KjPy","parallelAxisIndex","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","_initDimensions","setAxisExpand","axisModels","dependentModels","parallelAxis","LBXi","getFixedItemStyle","updateMapSelectHandler","mapDraw","mapOrGeoModel","fromView","_mouseDownFlag","__regions","action","updateMapSelected","otherRegionEl","MapDraw","updateGroup","_updateGroup","draw","isGeo","mapSeries","getHostGeoModel","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","compoundPath","CompoundPath","paths","dataIdx","regionModel","getRegionModel","geometries","geometry","exterior","interiors","showLabel","hoverShowLabel","isDataNaN","geoIndex","hoverSilentOnTouch","makeActionBase","LGKB","treeOption","treeDepth","expandTreeDepth","initialTreeDepth","getRawDataItem","collapsed","LRsb","unitAngle","cp1","x12","y12","LbEf","barPolar","LgWN","Heatmap","canvas","createCanvas","blurSize","pointSize","maxOpacity","minOpacity","_gradientPixels","colorFunc","isInRange","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","getContext","globalAlpha","drawImage","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","gradient","putImageData","brushCanvas","_brushCanvas","clearRect","shadowOffsetX","arc","gradientPixels","pixelsSingleState","Uint8ClampedArray","LjPz","LzVd","sep","eachAfter","eachBefore","kx","ky","coorX","coorY","finalCoor","_traversalHelper","M9eA","travelTree","designatedVisual","levelItemStyles","seriesItemStyleModel","viewRootAncestors","nodeModel","nodeLayout","isInView","thisNodeColor","nodeItemStyleModel","ITEM_STYLE_NORMAL","levelItemStyle","visuals","buildVisuals","borderColorSaturation","calculateColor","calculateBorderColor","mapping","buildVisualMapping","visualName","getValueVisualDefine","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","childVisuals","mappingType","mapIdToIndex","MOpb","createEl","graphicType","graphicUtil","makePath","pathData","__customPathData","__customImagePath","__customText","Clz","charAt","__customGraphicType","updateEl","animatableModel","targetProps","elOptionStyle","targetStyle","prepareStyleTransition","targetOpacity","styleEmphasis","oldElStyle","makeRenderItem","customSeries","updateCache","currDataIndexInside","currDirty","currItemModel","currLabelNormalModel","LABEL_NORMAL","currLabelEmphasisModel","LABEL_EMPHASIS","currVisualColor","ITEM_STYLE_NORMAL_PATH","retrieve2","ITEM_STYLE_EMPHASIS_PATH","retrieve3","barLayout","getLayoutOnAxis","currentSeriesIndices","getCurrentSeriesIndices","renderItem","prepareResult","prepareCustoms","userAPI","getDevicePixelRatio","userParams","dataInsideLength","encode","wrapEncodeDef","encodeDef","dimInfo","isExtraCoord","coordDimIndex","doCreateOrUpdate","elOptionType","diffChildrenByName","diffGroupChildren","processAddUpdate","processRemove","GROUP_DIFF_PREFIX","childOption","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","cartesian2d","singleAxis","incrementalPrepareRender","incrementalRender","setIncrementalAndHoverLayer","MRvz","parallelAxisModel","MXTC","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","isMono","drawMono","drawNonMono","lastDiff","prevIdx","prevP","ctrlLen","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","fixClipWithShadow","stackedOnBBox","Mlni","fillLabel","formatUtil","dataFormatMixin","addCommas","MarkerModel","extraOpt","createdBySelf","hostSeries","__hostSeries","modelPropName","markerOpt","markerModel","formattedValue","Mn6+","markArea","MsVc","dirty","BoxplotView","Mxrs","minValue","mapValueToColor","customColor","N1UU","NAKW","_circularLayoutHelper","NGRG","datas","main","datasAttr","linkAll","TRANSFERABLE_METHODS","wrapMethod","transferInjection","cloneShallowInjection","CHANGABLE_METHODS","changeInjection","isMainData","DATAS","linkSingle","MAIN_DATA","cloneShallow","getLinkedData","NKek","targetCoordSysModel","getComponentByElement","topTarget","IRRELEVANT_EXCLUDES","NUWb","hasKeys","createVisualMappings","stateList","supplementVisualOption","createMappings","Creater","__hidden","visualMappings","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","keys","getValueState","scope","eachItem","valueOrIndex","rawDataItem","valueState","visualTypesMap","incrementalApplyVisual","NjeB","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","O523","treemapVisual","treemapLayout","OCS9","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","removeDuplicate","DEFAULT_TOOLBOX_BTNS","arr","flag","OQAC","PictorialBarSeries","symbolPosition","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","OcRu","getIsInPiecewiseRange","dataSpan","lastIndex","getIsInContinuousRange","isGeoCoordSys","HeatmapLayer","visualMapOfThisSeries","eachTargetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","_renderOnGeo","hoverStl","inRangeVisuals","targetVisuals","outOfRangeVisuals","outOfRange","hmLayer","_hmLayer","lng","lat","getPieceList","OlnU","getColorStopValues","stopValues","VisualMapModel","DEFAULT_BAR_BOUND","ContinuousModel","hoverLink","hoverLinkDataSize","hoverLinkOnHandle","resetExtent","resetVisual","_resetRange","resetItemSize","auto","completeVisualOption","getSelected","findTargetDataIndices","getDataDimension","getVisualMeta","getColorVisual","setStop","oVals","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","outerColors","OpfW","dimIdx","Oq2I","Osoq","Ou7x","moveAnimation","propsEqual","lastProp","lastProps","newProps","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","clazzUtil","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","hide","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","useSnap","seriesDataCount","pointerEl","handleModel","onmousedown","_onHandleDragMove","_onHandleDragEnd","includeStyles","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axesInfo","doClear","buildLabel","xy","wh","xDimIndex","enableClassExtend","OvrE","geoCreator","MapSeries","needsDrawMap","getFilledRegions","getMapType","_fillOption","mapName","seriesNames","otherIndex","originalData","getTooltipPosition","aspectScale","showLegendSymbol","dataRangeHoverLink","boundingCoords","scaleLimit","OxCu","getSeriesByIndex","queryDataIndex","P05t","array","keysFunction","keyFunction","mapObject","valuesByKey","keyValue","entriesMap","sortKeyFunction","sortKeysFunction","sortKeys","P0a5","global","compatEc2","itemOpt","fromName","toName","concatArray","globalObj","Uint32Arr","Uint32Array","Float64Arr","Float64Array","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","appendData","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","dataCount","buffer","preventIncremental","getProgressive","getProgressiveThreshold","progressiveThreshold","effect","constantSpeed","trailLength","largeThreshold","P7Q7","effectType","rippleEffect","P7ry","PBlc","resizePolar","polarModel","updatePolarScale","setAxis","_axisHelper","polarCreator","polarList","radiusAxisModel","findAxisModel","PWa9","sampling","rate","sampler","samplers","downSample","indexSampler","average","nearest","PYc7","PdL8","mapModel","_mapDraw","_renderSymbols","fullData","mainSeries","fullIndex","polygonGroups","normalText","emphasisText","extendFrom","__mapOriginalZ2","PiQa","_createPolyline","polylineProto","_updateCommonStl","Pmfi","Definable","zrId","svgRoot","tagNames","markLabel","domName","_zrId","_svgRoot","_tagNames","_markLabel","_domName","nextId","ZText","getDefs","isForceCreating","defs","insertBefore","element","onUpdate","dom","addDom","removeDom","getDoms","doms","tags","markAllUnused","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","Po+l","seriesModelMixin","BoxplotSeries","defaultValueDimensions","boxWidth","shadowOffsetY","Pobh","getBarItemStyle","excludes","getBorderLineDash","Pwgp","TimelineAxis","_autoLabelInterval","getLabelInterval","timelineModel","labelInterval","getAxisLabelInterval","getTicks","Q5xN","checkParentAvailable","insertAfter","prevSibling","prepend","util","GradientManager","ClippathManager","ShadowManager","SVGPainter","_opts","gradientManager","clipPathManager","shadowManager","viewport","_viewport","_visibleList","setBackgroundColor","background","visibleList","listLen","newVisibleList","svgProxy","svgElement","prevSvgElement","textSvgElement","addWithoutUpdate","_getDefs","display","_getSize","viewportStyle","whIdx","cwh","plt","prb","defaultView","getComputedStyle","pathToDataUrl","outerHTML","QCrJ","seriesInvolved","coordSysMap","collectAxesInfo","collectSeriesInfo","linksOption","linkGroups","getCoordinateSystems","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","useHandle","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","coordSysKey","triggerAxis","cross","tooltipAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","seriesTooltipTrigger","seriesTooltipShow","linkOption","checkPropInLink","linkPropValue","axisPropValue","QZ7o","processedMapType","mapType","mapSymbolOffsets","subMapSeries","QbUQ","getLabelPosition","axisAngle","translate","labelRotation","innerTextLayout","PolarAxisPointer","coordValue","capitalFirst","labelPos","buildLabelElOption","makeSectorShape","Qv0P","Region","R0U9","scrollDataIndex","setScrollDataIndex","RAps","cellWidth","cellHeight","dayCount","RKzr","RTd5","MagicType","magicTypeLang","magicType","bar","tiled","seriesOptGenreator","markLine","radioTypes","generateNewSeriesTypes","newSeriesOpt","categoryAxis","radio","currentType","RjA7","labelDims","retrieveRawValue","vals","S+iL","setAreas","SMB/","hasShadow","textShadowBlur","textShadowOffsetX","textShadowOffsetY","_shadowDom","_shadowDomId","updateDom","domChild","blur","textShadowColor","stdDx","stdDy","stdDeviation","SZjP","markerModelKey","SlE6","diffData","newData","diffResult","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","prepareDataCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","dataDimsForPoint","getStackedOnPoint","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","current","stackedOnCurrent","stackedOnNext","_helper","T6W2","graphSeries","categoriesData","getCategoriesData","categoryNames","TCXJ","AxisPointerModel","shadowStyle","TDz/","__clipPaths","parentEl","clipPaths","clipPathEl","mul","cloneNode","_dom","_textDom","TLJB","TTCf","TXKS","colorQuery","opacityQuery","Tl0V","UOrf","getSortedIndices","valueArr","isAscending","textY","labelPosition","isLabelInside","labelLineLen","sizeExtent","funnelAlign","gap","getLinePoints","offY","US3d","LargeLineDraw","IncrementalDisplayable","lineContain","quadraticContain","LargeLineShape","segs","quadraticCurveTo","findDataIndex","containStroke","largeLineProto","lineEl","rectHover","_setCommon","addDisplayable","__startIndex","isIncremental","UeW/","targetElParent","elMap","__ecGraphicId","removeEl","existEl","existElParent","removeKey","getCleanedElOption","LOCATION_PARAMS","isSetLoc","isSet","setKeyInfoToNewElOption","resultItem","newElOption","existElOption","exist","keyInfo","parentId","newElParentOption","parentOption","mergeNewElOptionToExist","existList","newElOptCopy","$action","mergeLayoutParam","copyLayoutParams","setLayoutInfoToExist","existItem","hv","graphicOption","elements","GraphicModel","_elOptionsToUpdate","newList","flattenedList","_flatten","mappingResult","mappingToExists","makeIdAndName","elOptionsToUpdate","optionList","useElOptionsToUpdate","els","_elMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","textBaseline","elOptionCleaned","__ecGraphicWidth","__ecGraphicHeight","elOptions","containerInfo","boundingMode","bounding","UkNE","V6ht","Vb+l","createDataSelectAction","pieLayout","VewU","createElementNS","svgURI","VmZa","registerPainter","WK/r","_labelInterval","WO3U","WbrJ","roams","InsideZoomView","coordSysName","coordInfo","dataZoomOption","_onPan","_onZoom","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","Wf6x","WxG6","geoCoordMap","cp","Russia","United States","United States of America","XAC3","buildTooltipModel","modelCascade","resultModel","tooltipOpt","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","isCenterAlign","TooltipContent","findPointFromSeries","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","wxa","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","axisId","getAxisRawValue","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","formatTpl","cbTicket","setContent","getSize","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","XCrL","targetInfoList","_targetInfoList","foundCpts","parseFinder","targetInfoBuilders","builder","formatMinMax","includeMainTypes","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","rangeOrCoordRange","xyMinMax","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","COORD_CONVERTS","setOutputRanges","coordRanges","coordConvert","__rangeOffset","diffProcessor","findTargetInfo","coordSyses","setInputRanges","rangeOffset","getDefaultBrushType","getPanelRect","defaultBrushType","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","geoModels","xminymin","xmaxymax","XFat","XLwt","_echarts","_export","XRkS","actionInfos","XhgW","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","len2","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelLineLen2","labelRotate","XiVP","VisualMapView","PiecewiseVisualMapView","doRender","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","textGap","_getItemAlign","viewData","_getViewData","endsText","_renderEndsText","viewPieceList","renderBackground","positionGroup","onHoverLink","shapeParam","getControllerVisual","newKey","getSelectedMapKey","o","visualMapId","Y3kp","pointsLayout","effectSymbolDraw","_updateGroupTransform","YbE0","groupResult","groupSeriesByAxis","groupItem","calculateBase","layoutSingleSeries","boxOffsetList","boxWidthList","axisList","seriesCount","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","base","cDim","halfWidth","variableDim","coordDims","vDims","getPoint","axisDimVal","addBodyEnd","point1","point2","layEndLine","endCenter","median","end1","end5","YpIy","newZoom","zoomMin","zoomMax","zoomScale","YqdL","YsUA","Z2m1","mapLocation","ZJ+T","normalizeRect","localPoints","clipPointsByRect","specifiedXYIndex","xyIndex","brushWidth","targetModel","localCursorPoint","ZRmN","foundAxisModel","ZtEr","ZuqD","SliderTimelineModel","checkpointStyle","showPlayBtn","showPrevBtn","showNextBtn","playIcon","stopIcon","nextIcon","prevIcon","a/4j","a1DW","CandlestickSeries","color0","borderColor0","barMinWidth","barWidth","animationUpdate","selectors","brushRect","aYad","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","toHex","borderName","camelCase","toCamelCase","normalizeCssArray","container","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","normalizeEvent","dispatch","onmouseleave","_hideDelay","domStyle","viewportRootOffset","painter","isShow","akwy","paletteScope","categoryNameIdxMap","getColorFromPalette","auIi","ToolboxModel","showTitle","iconStyle","ay5B","rectBound","positionMap","horizontal","vertical","directionMap","tickDirection","nameDirection","b/SY","getTargetSeries","seriesModelMap","isOverallFilter","overallReset","valueRange","bzOU","makeSymbolTypeKey","symbolCategory","symbolUtil","LinePath","setLinePoints","updateSymbolAndLabelBeforeLineUpdate","lineGroup","symbolFrom","childOfName","symbolTo","fromPos","pointAt","toPos","tangent","tangentAt","__position","halfPercent","__verticalAlign","__textAlign","_createLine","SYMBOL_CATEGORIES","lineProto","visualOpacity","defaultLabelColor","rawVal","labelStyle","linePath","cI6i","doCreateNode","vmlInited","styleSheets","createStyleSheet","addRule","urn","win","namespaces","zrvml","cN90","coordSysCreator","cO/Q","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","dataCoordInfo","xExtent","yExtent","expandSize","createPolarClipShape","createClipShape","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stopLen","minCoord","maxCoord","coordSpan","unshift","lineAnimationDiff","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","valueOrigin","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","coordSysClipShape","isIgnore","clipShape","_stackedOnPoints","_updateAnimation","_newPolyline","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","animators","during","cU6c","coordFix","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","cWq4","sankeyLayout","sankeyVisual","ct4P","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","cuL/","d1IL","beforeLink","linkNameList","validEdges","linkCount","coordSysCtor","dimensionNames","dCQY","dZZy","symbolCtor","_symbolCtor","normalizeUpdateOpt","symbolDrawProto","SymbolCtor","enableAnimation","dp0Z","mergeAndNormalizeLayoutParams","raw","ScrollableLegendModel","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","inputPositionParams","dtW/","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","minDiff","seriesNestestValue","dataDim","indicesOfNearest","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","outputAxesInfo","valItem","sampleItem","escapeConnect","lastHighlights","newHighlights","toHighlight","toDownplay","dzlV","normalStyle","labelPositionOutside","fixPosition","e+YR","createWrap","doneCallback","elExistsMap","easing","done","eH0a","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","themeModel","getTheme","getDefaultOption","__ordinalMeta","OrdinalMeta","createByAxisModel","getOrdinalMeta","axisDefault","eHPu","removeRect","removeSector","isPolar","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","barItemStyle","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","isUpdate","rectShape","animateProperty","animateTarget","isRadial","fixedLineWidth","signX","signY","eQYg","FunnelSeries","minSize","ecfp","resetRange","restoreData","gridIndex","gridId","extraOption","envY","SliderZoomModel","dataBackground","fillerColor","showDetail","f0h+","commonLayout","fAbo","positiveColorQuery","negativeColorQuery","positiveBorderColorQuery","negativeBorderColorQuery","fm2I","squarify","hideChildren","thisLayout","PATH_BORDER_WIDTH","halfGapWidth","PATH_GAP_WIDTH","upperLabelHeight","getUpperLabelHeight","upperHeight","layoutOffset","layoutOffsetUpper","totalArea","rowFixedLength","mathMin","best","row","score","worst","squareRatio","childrenVisibleMin","orderBy","overLeafDepth","leafDepth","statistic","filterByThreshold","isLeafRoot","orderedChildren","visibleMin","deletePoint","areaMax","areaMin","squareArea","f","flush","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","estimateRootSize","containerWidth","containerHeight","currNode","defaultSize","viewArea","zoomToNodeRatio","currNodeValue","MAX_SAFE_INTEGER","calculateRootPosition","rootRect","defaultPosition","targetCenter","prunning","clipRect","viewAbovePath","nodeInViewAbovePath","isAboveViewRoot","intersect","childClipRect","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","retrieveValue","ecWidth","ecHeight","seriesOption","payloadType","getPathToRoot","rootSize","viewRootLayout","childValue","setLayoutInfo","g8A/","seriesItem","gLqW","completeTreeValue","thisValue","setDefault","globalColorList","hasColorDefine","modelColor","_viewRoot","hoverLayerThreshold","clipWindow","drillDownIcon","roam","breadcrumb","ellipsis","upperLabel","gapWidth","visualDimension","idIndexMap","_idIndexMap","_idIndexMapCount","gOx9","validPayloadTypes","targetNodeId","viewPath","nodeDataIndex","gZam","createPolygon","onDrift","onDragEnd","createHandlePoints","textSize","createIndicatorPoints","isRange","halfHoverLinkSize","extentMax","HOVER_LINK_OUT","getHalfHoverLinkSize","HOVER_LINK_SIZE","useHoverLinkOnHandle","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","targetGroup","shapes","_createBarGroup","_dragHandle","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","handleThumb","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","_clearHoverLinkToSeries","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","forceState","convertOpacityToAlpha","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","formatValueText","_showIndicator","cursorValue","textValue","rangeSymbol","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","hoverRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","isTargetSeries","ghha","singles","guZJ","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverPolygonIgnore","polygonIgnore","hoverAreaStyleModel","itemHoverStyle","labelDimIndex","h4VJ","FunnelPiece","funnelPieceProto","FunnelView","funnelPiece","h6Uy","idxMap","hG1p","hZf2","fillOrStroke","hdbT","updateController","$from","modelId","brushId","i6Ks","createParallelIfNeeded","mergeAxisOptionFromParallel","parallel","hasParallelSeries","normalizeToArray","axisOption","parallelOption","iEm+","playState","iZVd","icur","generateBrushOption","transformable","visualSolution","DEFAULT_OUT_OF_BRUSH_COLOR","BrushModel","brushLink","throttleType","throttleDelay","inBrush","outOfBrush","setBrushOption","ii60","previousZoom","fixX","fixY","ij2A","ilLo","save","coordIndex","coordSysLists","ilox","ix3c","createStorage","nodeGroup","thisStorage","oldStorage","reRoot","lastsForAnimation","willInvisibleEls","thisNode","parentGroup","thisInvisible","__tmWillVisible","prepareText","emphasisStyle","upperLabelRect","iconChar","normalLabelModel","PATH_UPPERLABEL_NORMAL","PATH_LABEL_NOAMAL","emphasisLabelModel","PATH_UPPERLABEL_EMPHASIS","PATH_LABEL_EMPHASIS","truncate","outerWidth","outerHeight","minChar","giveGraphic","storageName","Ctor","oldRawIndex","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","prepareAnimationWhenNoOld","thisRawIndex","old","lastCfg","parentOldX","parentOldY","parentOldBg","fadein","thisWidth","thisHeight","thisViewChildren","isParent","itemStyleNormalModel","itemStyleEmphasisModel","__tmNodeWidth","__tmNodeHeight","bg","Z_BG","useUpperLabel","visualBorderColor","emphasisBorderColor","getItemStyleNormal","getItemStyleEmphasis","upperLabelWidth","Z_CONTENT","contentWidth","contentHeight","zInLevel","zb","Z_BASE","animationUtil","_containerGroup","_storage","_breadcrumb","_state","models","rootNodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","dualTravel","oldViewChildren","sameTree","willDeleteEls","thisTree","oldTree","delEls","__tmWillDelete","animationWrap","targetX","targetY","_clearController","findTarget","_zoomToNode","bgEl","jJrn","Radar","radarModel","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorAxis","IntervalScale","getScaleExtent","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","increaseInterval","exp10","LN10","radarSeries","rawExtent","fixedMin","fixedMax","getInterval","setInterval","nicedSplitNumber","halfSplitNumber","radarList","jLnL","jMTz","clipOverflow","showAllSymbol","jpt2","k7nC","k9Bd","kQD9","_targetList","_selectTargetMap","reduce","targetMap","koEO","rawAxisPosition","axisOffset","posBound","onZeroCoord","dirMap","labelOffset","l2wH","l4Op","lVde","axisBuilderAttrs","_buildAxes","_buildSplitLineAndArea","axisBuilders","getColorIndex","areaOrLine","areaOrLineColorList","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","Ring","realSplitNumber","axesTicksPoints","ticksCoords","tickCoord","prevPoints","lwXq","pointsConverter","m5oG","getSymbolMeta","symbolMeta","prepareBarLength","prepareSymbolSize","boundingLength","pxSign","prepareLineWidth","symbolScale","prepareLayoutInfo","valueLineWidth","repeatCutLength","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","categoryDim","categorySize","pathForLineWidth","unitLength","pathLen","absBoundingLength","hasEndGap","uLenWithMargin","endFix","repeatSpecified","isNumeric","repeatTimes","toIntTimes","sizeFix","pathPosition","bundlePosition","barRectShape","createPath","createOrUpdateRepeatSymbols","makeTarget","unit","onMouseOver","eachPath","onMouseOut","bundle","__pictorialBundle","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","updateHoverAnimation","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","getAnimationDelayParams","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","updateBar","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","updateCommon","barRectHoverStyle","barPositionOutside","posDesc","times","roundedTimes","LAYOUT_ATTRS","BarView","coordSysRect","pictorialShapeStr","mLyJ","getSeriesStackId","getAxisKey","barLayoutPolar","lastStackCoords","barWidthAndOffset","calRadialBar","getSeriesByType","stackId","columnLayoutInfo","columnOffset","columnWidth","baseDim","stacked","valueAxisStart","baseValue","baseCoord","radiusSpan","angleSpan","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","maxWidth","barCategoryGap","barGapPercent","autoWidth","column","lastColumn","widthSum","mcsk","take","resourceKey","userKey","getStore","release","miEh","subtext","subtarget","titleModel","subtextStyleModel","disableBox","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","mlpt","normalizeReverse","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","exists","hasSel","pieceInterval","curr","splitStep","pieceListItem","closeList","infinityList","useMinMax","lg","edgeSymbols","n/n4","n3NR","brushSelected","DISPATCH_FLAG","DISPATCH_METHOD","doDispatch","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","sels","selector","selectorsByElementType","bSelector","sel","brushModelNotControll","seriesIndices","bindSelector","selFn","elType","getBoundingRectFromMinMax","STATE_LIST","PRIORITY_BRUSH","VISUAL","BRUSH","brushIndex","linkOthers","linkedSeriesMap","brushed","stepAParallel","hasBrushExists","hasAxisBrushed","selectedDataIndexForLink","stepAOthers","thisBrushSelected","brushName","rangeInfoBySeries","boundingRect","boundingRectBuilders","seriesBrushSelected","nQkE","baseY0","layerPoints","singleLayer","computeBaseline","baseLine","layerIndex","temp","sums","nUSl","mapSymbolLayout","mapDataStatistic","backwardCompat","nV/6","nW6X","o0k+","oDOe","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","baseUID","mouseHandlers","doEnableBrush","MUTEX_RESOURCE_KEY","DEFAULT_BRUSH_OPT","doDisableBrush","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","getPanelByPoint","panels","panel","_transform","pn","getPanelByCover","clearCovers","covers","originalLength","shouldShowCover","track","mathPow","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","localD","localZero","xmin","ymin","resetCursor","currPanel","setCursorStyle","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","determineBrushType","getCreatingRange","handleDragEnd","getLineRenderer","localTrack","ne","nw","se","panelOpts","eachCover","brushOptionList","tmpIdPrefix","oldGetKey","addOrUpdate","newBrushOption","oldCovers","newCovers","oYIf","makeIcon","objPath","giveSymbol","onCreate","pointerMoveTo","noAnimation","dragging","pointerModel","TimelineView","_timer","_currentPointer","_labelGroup","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","playPosition","prevBtnPosition","nextBtnPosition","xLeft","xRight","labelAlign","labelBaseline","setOrigin","viewBound","getBound","toBound","boundIdx","rotateOriginX","rotateOriginY","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","_customizeScale","niceTicks","getTicksLabels","newGroup","_renderAxisLine","_renderAxisTick","ticks","hoverStyleModel","symbolOpt","_changeTimeline","tick","_renderControl","makeBtn","iconPath","willRotate","btn","_handlePlayClick","_renderCurrentPointer","me","_handlePointerDrag","_handlePointerDragend","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","handleFrame","axisCoord","nextIndex","od06","og9+","restrict","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","currDistSign","oqQy","ifIgnoreOnTick","SingleAxisView","selfBuilderAttr","lineInterval","showMinLabel","showMaxLabel","getLineDash","orv6","p1Ck","pSwa","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","getNodeColor","getRootId","isNodeHighlighted","activeNode","policy","NodeHighlightPolicy","SELF","ANCESTOR","DESCENDANT","SunburstPieceProto","stateStyle","onHighlight","onDownplay","getLabelAttr","stateAttr","normalModel","labelMinAngle","labelPadding","rotateType","pmYM","pzOI","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","forceInstance","oldStep","_forceHelper","qBny","qSkD","coordSysList","Parallel","qbKW","parallelVisual","r9WW","rFvp","layoutAxis","selfBuilderAttrs","prevRadius","rbn0","ri8f","seiresModelMap","__paletteScope","dataAll","filteredIdx","singleDataColor","rjiA","rjsW","radarLayout","rwkR","s/lY","nameLocation","nameRotate","nameTruncate","nameTextStyle","nameGap","triggerEvent","deduplication","alignWithLabel","timeAxis","logAxis","logBase","s1Aj","coordType","COORDS","createNameEach","capitalNames","capitalAttrs","nameObj","capital","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","isLinked","hasLink","edgeId","absorb","sourceNode","processSingleNode","existsLink","AXIS_DIMS","s48c","CartesianAxisView","anid","prevX","prevY","areaInterval","sJ4e","retrieveRaw","updateRangeUse","rawOption","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","is","seriesAxisIndex","globalOption","firstAxisModel","ignoreUpdateRangeUsg","getValueRange","axisDimName","sK5G","_baseAxisDim","ordinalMeta","addOrdinal","xAxisType","yAxisType","baseAxisDimIndex","baseAxisDim","baseAxisType","otherAxisType","newOptionData","otherDims","dimsDef","whiskerBoxDraw","_whiskerBoxDraw","sOJ4","isLine","straightLineProto","bezierCurveProto","sTIA","parsePosition","formatLabel","PointerPath","GaugeView","posInfo","_renderMain","axisLineModel","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","forceRich","detailModel","textWidth","textHeight","sYrQ","_axesLayout","layoutAxisWithoutExpand","layoutLength","axisCount","axisNameAvailableWidth","axisLabelShow","layoutAxisWithExpand","nameTruncateMaxWidth","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","mathFloor","mathCeil","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","_layoutAxes","winSize","layoutExtent","positionTable","rotationTable","axisCoordToPoint","dataDimensions","hasActiveSet","lenj","pointCoord","triggerArea","useJump","srbS","resizeGeo","leftTop","rightBottom","boxLayoutOption","useCenterAndSize","setGeoCoords","geoList","mapData","getMap","mapModelGroupBySeries","nameMapList","singleMapSeries","originRegionArr","regionsArr","dataNameMap","properties","swsf","tQk0","tzpD","valueStart","getValueStart","valueAxisDim","baseDataOffset","stackedOverDimension","stackedData","u9lB","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","other","assembleSeriesWithCategoryAxis","tables","headers","columns","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","argLen","getContentFromModel","trim","isTSVFormat","block","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","RegExp","blockMeta","axisKey","DataView","tryMergeDataOption","original","dataViewLang","dataView","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","getOption","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","Error","keyCode","which","selectionStart","selectionEnd","substring","newSeriesOptList","u9yV","uA0k","_updateEffectSymbol","curveUtil","effectLineProto","effectModel","_updateEffectAnimation","delayExpr","isDelayFunc","_period","_loop","animator","__p1","__cp1","__p2","quadraticDerivativeAt","uNEE","LargeSymbolDraw","_updateSymbolDraw","_finished","isLargeDraw","_isLargeDraw","uv9t","LargeSymbolPath","symbolProxy","symbolProxyShape","fillRect","restoreTransform","largeSymbolProto","startIndex","endIndex","byteOffset","extrudeShadow","v/cD","boxLayoutParams","layoutBox","vEM8","updateMarkerLayout","mpData","mpModel","markPointModel","symbolDrawMap","vIe4","dataStatistics","statisticType","mapKey","seriesGroups","hostGeoModel","seriesList","veIh","vjPX","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","remRadian","onLeft","isRadianAroundZero","isSilent","fixMinMaxLabelShow","labelEls","tickEls","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","matrixUtil","identity","isNameLocationCenter","buildAxisTick","tickInterval","pt1","pt2","ticksCnt","tickEl","buildAxisLabel","tickVal","itemLabelModel","labelStr","targetType","_dumbGroup","dumbGroup","hasBuilder","builders","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","gapSignal","nameRotation","truncateOpt","truncatedText","truncateText","__fullText","__truncatedText","axisRotation","rawTick","vx1D","hasXOrY","hasXAndY","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","getPrecision","markerTypeCalculator","baseDataDim","dataDimToCoordDim","dimItem","vxwL","candleWidth","calculateCandleWidth","subPixelOptimize","subPixelOptimizePoint","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","highestPoint","pmin","pmax","w2H/","resultVisual","VISUAL_PRIORITY","COMPONENT","createOnAllSeries","resetDefines","concreteDim","w6Zv","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","formatTplSimple","_yearTextPositionControl","aligns","yearLabel","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","monthLabel","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","dayLabel","firstDayOfWeek","weekText","wH4Y","replacableOptionKeys","dataBound","contentColor","controllerVisuals","getTargetSeriesIndices","optionSeriesIndex","isMinMax","optDim","listDimensions","isCalculationCoord","completeSingle","defa","completeInactive","stateExist","stateAbsent","optExist","optAbsent","completeController","symbolExists","symbolSizeExists","wLWv","LegendView","ScrollableLegendView","_currentIndex","_controllerGroup","_showController","__rectSize","createPageButton","iconIdx","pageDataIndexName","_pageGo","controllerGroup","pageTextStyleModel","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageCount","getItemRect","itemRect","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemLoc","winRect","startIdx","startItem","startRect","wQkr","wTOJ","computeNodeValues","layoutSankey","iterations","computeNodeBreadths","computeNodeDepths","computeEdgeDepths","value1","getEdgeValue","value2","remainNodes","nextNode","moveSinksRight","scaleNodeBreadths","nodesByBreadth","ascending","initializeNodeDepth","resolveCollisions","relaxRightToLeft","relaxLeftToRight","kyArray","ky0","nodeDy","edgeDy","ascendingDepth","nodeY","weightedTarget","weightedSource","ascendingTargetDepth","ascendingSourceDepth","whrq","selectableMixin","GeoModel","_optionModelMap","optionModelMap","regionOpt","xLO3","defaultsShow","valueAxisDefault","RadarModel","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","yEXw","hvIdx","sizeCalculable","CalendarModel","z+uQ","linesLayout","_updateLineDraw","isSvg","getLayer","_lastZlevel","configLayer","motionBlur","_showEffect","lastFrameAlpha","_clearLayer","hasEffect","_hasEffet","_isPolyline","z81E","GraphSeries","_categoriesData","fillDataTextStyle","_updateCategoriesData","edgeGetParent","parsePath","fakeSeriesModel","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","customizeGetParent","sourceName","targetName","circular","rotateLabel","edgeSymbol","edgeSymbolSize","edgeLabel","zAPJ","styleModel","paddings","confineInContainer","bgColor","zO13","autoPositionValues","targetValue","visualCluster","visualObj","defaultColor","visualMapping","zjhG","linesVisual","zlsk","getLineSelectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","nearZero","namenda","miu","v4","polygonContain","zz1u"],"mappings":"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2Gt8bN0lD,O3Gu8bMg1B,Q2Gp8bN,U3Gu8bExyE,KAAM,WACJ,OACEiyE,M2Gr8bN,O3Gw8bEtB,QAAS,WACPp2E,K2Gt8bJk4E,a3Gw8bEN,cAAe,WACR53E,KAAK03E,QAGV13E,KAAK03E,M2Gt8bTj4E,U3Gu8bIO,KAAK03E,M2Gt8bT,O3Gy8bErB,SACE6B,UAAW,WACTl4E,KAAK03E,MAAQH,EAAgBtzD,EAAE1O,KAAKyQ,SAASmyD,eAAen4E,K2Gt8blEkN,I3G28bM,KAAK,GAHDkrE,MACA3yE,KACA4yE,KACKvrE,EAAI,EAAGA,EAAI,GAAIA,IACtBsrE,EAAU51E,K2Gv8blBsK,G3Gw8bQrH,EAAKjD,K2Gv8bb,G3Gu8bmB2G,KAAKqoB,IAAI1kB,EAAI,IAAMA,EAAI,EAAI,IAAMA,EAAI,IAChDurE,EAAM71E,K2Gv8bd,G3Gu8boB2G,KAAKqoB,IAAI1kB,EAAI,IAAMA,EAAI,EAAI,IAAMA,EAAI,GAEnD9M,MAAK03E,M2Gv8bXY,W3Gw8bQ72B,gB2Gt8bR,U3Gu8bQzJ,QACE3xC,M2Gt8bV,E3Gu8bUZ,K2Gt8bV2yE,I3Gw8bU/xE,M2Gt8bV,E3Gu8bUZ,K2Gr8bV2yE,I3Gu8bQvQ,WACExhE,M2Gt8bV,E3Gu8bUqD,I2Gt8bV,E3Gu8bUC,I2Gt8bV,G3Gu8bUiE,U2Gt8bV,E3Gu8bU2qE,SACE7kE,OAAQ,UAAW,UAAW,UAAW,UAAW,U2Gp8bhE,a3Gu8bQukC,OACEugC,UACEnyE,M2Gr8bZ,G3Gu8bUoyE,WACEp9D,WACE3H,M2Gp8bd,Y3Gu8bUglE,WACEryE,M2Gt8bZ,E3Gu8bYG,WACEkN,M2Gp8bd,Y3Gu8bUilE,UACEtyE,M2Gp8bZ,I3Gu8bQooC,SACElsC,K2Gt8bV,O3Gu8bUhF,K2Gt8bV,M3Gu8bUkI,K2Gt8bV4yE,E3Gu8bUnyE,E2Gt8bV,E3Gu8bU0N,WACE4wD,QACE/9D,Q2Gt8bd,G3Gu8bcmyE,gB2Gt8bd,E3Gu8bcC,W2Gt8bd,E3Gu8bcC,Y2Gp8bd,W3Gw8bUv2E,K2Gt8bV,kB3Gu8bUhF,K2Gt8bV,OACAkI,O3Gu8bUS,E2Gt8bV,E3Gu8bU6yE,Y2Gt8bV,E3Gu8bUC,e2Gt8bV,E3Gu8bUpyE,gB2Gt8bV,S3Gu8bUoN,kB2Gt8bV,K3Gu8bUxN,WACEg+D,QACE9wD,M2Gp8bd,gB3Gu8bUulE,WACEzU,QACE9wD,M2Gt8bd,U3Gu8bcmlE,W2Gt8bd,G3Gu8bcC,Y2Gp8bd,W3Gw8bUv2E,K2Gt8bV,Q3Gu8bUhF,K2Gt8bV,MACAkI,O3Gu8bU62C,W2Gt8bV,E3Gu8bUp2C,E2Gt8bV,E3Gu8bU0N,WACE4wD,QACEoU,gB2Gn8bd,M3Gu8bQhyE,gB2Gt8bR,a3Gu8bQsoD,sB2Gt8bR,a3Gu8bQ8pB,eAAgB,SAAwB15D,GACtC,M2Gt8bV,I3Gs8biBA,GAET45D,qBAAsB,SAA8B55D,GAClD,M2Gt8bV,I3Gs8biBA,Q4GxlcjB65D,EAAA,WAA0B,GAAA7C,GAAAt2E,KAAau2E,EAAAD,EAAAE,cAAkD,QAAxBF,EAAAI,MAAAD,IAAAF,GAAwB,OAAiB6C,MAAA9C,EAAA0B,UAAAxvE,OAA4BpH,OAAAk1E,EAAAl1E,OAAAD,MAAAm1E,EAAAn1E,OAAkCw1E,OAASzpE,GAAAopE,EAAAppE,OACjLmsE,KACAC,GAAiBj7E,OAAA86E,EAAAlC,gBAAAoC,GACjBE,EAAA,ECHAC,EAAAn8E,EAAA,QAcAo8E,EAAAD,EACA1B,EACAyB,GATA,EAEA,KAEA,KAEA,MAUAG,EAAAD,EAAA,QCdAE,G9G+ncEp3E,K8G7ncF,gB9G8ncEuzE,OACEkC,WACEz6E,M8G7ncN0lD,Q9G8ncMg1B,Q8G5ncN,U9G8ncI/qE,IACE3P,M8G7ncN0lD,Q9G8ncMg1B,Q8G7ncN,S9G8ncM2B,U8G3ncN,I9G8ncEz2D,Y8G7ncF02D,MAAAH,ICvBAI,EAAA,WAA0B,GAAAxD,GAAAt2E,KAAau2E,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,CAAwB,OAAAE,GAAA,OAAiBsD,YAAA,oBAA8BtD,EAAA,SAAc2C,MAAA9C,EAAA0B,UAAArB,OAA2BzpE,GAAAopE,EAAAppE,GAAA9L,OAAA,OAAAD,MAAA,WAA4C,IAC7N64E,KACAC,GAAiB57E,OAAAy7E,EAAA7C,gBAAA+C,GACjBE,EAAA,EZAAC,EAAA98E,EAAA,QASA+8E,EAAA7E,EAKA8E,EAAAF,EACAR,EACAO,GATA,EAWAE,EAPA,kBAEA,MAUAE,EAAAD,EAAA,QalBAE,GhH0rcExC,QgHxrcFxxD,GhHyrcEuvD,OACEkC,WACEz6E,KgHxrcN0lD,OhHyrcMg1B,QgHvrcN,ShHyrcI/qE,IACE3P,KgHxrcN0lD,OhHyrcMg1B,QgHvrcN,ShHyrcI92E,OACE5D,KgHxrcN0lD,OhHyrcMg1B,QgHvrcN,ShHyrcI72E,QACE7D,KgHxrcN0lD,OhHyrcMg1B,QgHtrcN,UhHyrcExyE,KAAM,WACJ,OACEiyE,MgHvrcN,OhH0rcEtB,QAAS,WACPp2E,KgHxrcJk4E,ahH0rcEN,cAAe,WACR53E,KAAK03E,QAGV13E,KAAK03E,MgHxrcTj4E,UhHyrcIO,KAAK03E,MgHxrcT,OhH2rcErB,SACE6B,UAAW,WACTl4E,KAAK03E,MAAQH,EAAgBtzD,EAAE1O,KAAKyQ,SAASmyD,eAAen4E,KgHxrclEkN,KhH0rcMlN,KAAK03E,MAAMY,WACT72B,gBgHzrcR,UhH0rcQ9gD,OACEyS,IgHzrcV,GhH0rcUzR,KgHzrcV,WhH0rcU0Z,WACEiuB,WgHzrcZ,ShH0rcY31B,SgHzrcZ,GhH0rcYD,MgHxrcZ,WhH0rcUP,KgHxrcV,MhH0rcQ4uC,SACE5hD,QgHzrcV,OhH0rcU4gC,aACEv6B,WACEkN,MgHtrcd,ahH0rcQ8mE,QACEpnE,IgHzrcV,GhH0rcU1S,KgHzrcV,OhH0rcUkhD,UgHzrcV,GhH0rcUC,WgHzrcV,EhH0rcUF,QgHzrcV,GhH0rcUl8C,MAAO,OAAQ,OgHzrczB,QhH0rcU4N,MgHzrcV,KhH0rcUgI,WACE1H,SgHzrcZ,GhH0rcYD,MgHvrcZ,YhH0rcQupC,MACE7pC,IgHzrcV,IhH0rcUD,KgHzrcV,KhH0rcUE,MgHzrcV,KhH0rcUC,OgHzrcV,KhH0rcUsuD,cgHxrcV,GhH0rcQ5pB,QACEz6C,KgHzrcV,WhH0rcUuiD,agHzrcV,EhH0rcU04B,UACEhyE,WACEkN,MgHvrcd,YhH0rcUjO,MAAO,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QgHxrc3G,WhH0rcQwyC,QACE16C,KgHzrcV,QhH0rcUgF,KgHzrcV,MhH0rcUo2E,UACEtyE,MgHxrcZ,GhH0rcUmyE,UACEhyE,WACEkN,MgHvrcd,YhH0rcU+kE,WACEv8B,OgHzrcZ,GhH0rcY7gC,WACE1H,SgHvrcd,KhH0rcU+kE,WACElyE,WACEkN,MgHtrcd,chH0rcQ+6B,SACElsC,KgHzrcV,OhH0rcUhF,KgHzrcV,OhH0rcUoJ,QgHzrcV,EhH0rcUm0D,OgHzrcV,ShH0rcUxiC,WgHzrcV,EhH0rcUygD,YgHzrcV,EhH0rcUvyE,WACEg+D,QACErjE,MgHvrcd,IhH0rcU83E,WACEzU,QACE9wD,MAAO,GAAI6jE,GAAgBtzD,EAAEjmB,QAAQy8E,eAAe,EAAG,EAAG,EAAG,IAC3DhpD,OgHzrchB,EhH0rcgB/d,MgHzrchB,4BhH2rcgB+d,OgHzrchB,GhH0rcgB/d,MgHzrchB,2BACA,GhH0rccolE,YgHzrcd,qBhH0rccD,WgHvrcd,KhH0rcUjlE,WACE4wD,QACE9wD,MgHzrcd,kBhH0rccI,YgHzrcd,uBhH0rccD,YgHtrcd,KhH0rcUpO,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IgHzrcnE,OhH2rcUlD,KgHzrcV,OhH0rcUhF,KgHzrcV,OhH0rcUoJ,QgHzrcV,EhH0rcUm0D,OgHzrcV,ShH0rcUxiC,WgHzrcV,EhH0rcUygD,YgHzrcV,EhH0rcUvyE,WACEg+D,QACErjE,MgHvrcd,IhH0rcU83E,WACEzU,QACE9wD,MAAO,GAAI6jE,GAAgBtzD,EAAEjmB,QAAQy8E,eAAe,EAAG,EAAG,EAAG,IAC3DhpD,OgHzrchB,EhH0rcgB/d,MgHzrchB,2BhH2rcgB+d,OgHzrchB,GhH0rcgB/d,MgHzrchB,0BACA,GhH0rccolE,YgHzrcd,qBhH0rccD,WgHvrcd,KhH0rcUjlE,WACE4wD,QACE9wD,MgHzrcd,iBhH0rccI,YgHzrcd,sBhH0rccD,YgHtrcd,KhH0rcUpO,MAAO,IAAK,IAAK,IAAK,IA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cV,MrHw/cUiI,WACE3H,MqHt/cZ,WrHw/cUjO,MAAO,SAAU,OqHt/c3B,YrHw/cQm2E,YqHv/cR,ErHw/cQ5jC,QACEz6C,KqHv/cV,WrHw/cUi7E,UACEhyE,WACEkN,MqHr/cd,YrHw/cUglE,WACEryE,MqHt/cZ,GrHw/cUsyE,UACEtyE,MqHt/cZ,GrHw/cUw1E,WACEx1E,MqHt/cZ,GrHw/cUoyE,WACEtZ,SqHr/cZ,GrHw/cU15D,KqHt/cVi2E,IrHw/cQzjC,QACE16C,KqHv/cV,QrHw/cUm7E,WACEryE,MqHt/cZ,GrHw/cUmyE,UACEhyE,WACEkN,MqHr/cd,YrHw/cUilE,UACEtyE,MqHt/cZ,GrHw/cUoyE,WACEtZ,SqHt/cZ,GrHw/cU0c,WACEx1E,MqHr/cZ,KrHw/cQ8iE,WACE9iE,MqHv/cV,ErHw/cUjF,OqHv/cV,GrHw/cUk7C,YqHr/cV,GrHs/cUhpC,OqHr/cV,GrHs/cU6E,MqHr/cV,GrHs/cUE,IqHr/cV,GrHs/cUyjE,WqHr/cV,2GrHs/cUC,WqHr/cV,OrHs/cUC,aACEtoE,MqHn/cZ,WrHs/cU2H,WACE3H,MqHr/cZ,QrHs/cUI,YqHp/cV,YrHu/cUvW,KqHr/cV,SrHs/cU8I,MqHr/cV,ErHs/cUjF,OqHr/cV,GrHs/cU+W,MqHr/cV,ErHs/cUE,IqHp/cV,KrHs/cQo2B,SACElsC,KqHr/cV,SrHs/cUhF,KqHr/cV,MrHs/cU0+E,MqHr/cV,QrHs/cUC,YqHr/cV,GrHs/cUC,OqHr/cV,MrHs/cUvoE,WACE4wD,QACE9wD,MqHr/cd,sBrHs/cctN,OACEC,MqHr/chB,ErHs/cgBgV,WACE3H,MqHp/clB,QrHs/cgBrQ,SqHr/chB,YrHs/cgBkyD,UAAW,SAAmBt6C,GAC5B,MAAOA,GAAEpT,MAAQ,EAAIoT,EAAEpT,MqHr/czC,OrH0/cUpC,MqHp/cV,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAIA,QrHw+cUlD,KqHt+cV,OrHu+cUhF,KqHt+cV,MrHu+cU0+E,MqHt+cV,QrHu+cUroE,WACE4wD,QACE9wD,MqHt+cd,oBrHu+ccklE,gB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","file":"static/js/0.d93abcff8a26a46cccda.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"+Dgo\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"82Fv\");\n\nvar echarts = __webpack_require__(\"Icdr\");\n\necharts.extendComponentView({\n  type: 'dataset'\n});\n\n/***/ }),\n\n/***/ \"+PQg\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar listComponentHelper = __webpack_require__(\"v/cD\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"+bDV\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    // Anication is forbiden in progressive data mode.\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"+bS+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar BaseAxisPointer = __webpack_require__(\"Ou7x\");\n\nvar viewHelper = __webpack_require__(\"zAPJ\");\n\nvar singleAxisHelper = __webpack_require__(\"ay5B\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"+jMe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar linkList = __webpack_require__(\"NGRG\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar createDimensions = __webpack_require__(\"hcq/\");\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"+pdh\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar helper = __webpack_require__(\"gOx9\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"+u5N\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createGraphFromNodeEdge = __webpack_require__(\"d1IL\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"/99E\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"0BOU\");\n\n__webpack_require__(\"yEXw\");\n\n__webpack_require__(\"w6Zv\");\n\n/***/ }),\n\n/***/ \"/BOW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"/gZK\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createDimensions = __webpack_require__(\"hcq/\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"/vN/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = __webpack_require__(\"kQD9\");\n\nvar _dataProvider = __webpack_require__(\"5KBG\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0BNI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.getCategories();\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0BOU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0O1a\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar preprocessor = __webpack_require__(\"DZTl\");\n\n__webpack_require__(\"Osoq\");\n\n__webpack_require__(\"w2H/\");\n\n__webpack_require__(\"mlpt\");\n\n__webpack_require__(\"XiVP\");\n\n__webpack_require__(\"H4Wn\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n\n/***/ \"0fQF\":\n/***/ (function(module, exports) {\n\n// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0jKn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrLog = __webpack_require__(\"eZxa\");\n\nvar vmlCore = __webpack_require__(\"cI6i\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0nGg\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar LineDraw = __webpack_require__(\"6n1D\");\n\nvar RoamController = __webpack_require__(\"5Mek\");\n\nvar roamHelper = __webpack_require__(\"YpIy\");\n\nvar _cursorHelper = __webpack_require__(\"NKek\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar adjustEdge = __webpack_require__(\"Goha\");\n\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0pMY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1A4n\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1FNb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"z81E\");\n\n__webpack_require__(\"0nGg\");\n\n__webpack_require__(\"iZVd\");\n\nvar categoryFilter = __webpack_require__(\"T6W2\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar categoryVisual = __webpack_require__(\"akwy\");\n\nvar edgeVisual = __webpack_require__(\"TXKS\");\n\nvar simpleLayout = __webpack_require__(\"4RQY\");\n\nvar circularLayout = __webpack_require__(\"NAKW\");\n\nvar forceLayout = __webpack_require__(\"pzOI\");\n\nvar createView = __webpack_require__(\"KGuM\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});\n\n/***/ }),\n\n/***/ \"1Nix\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = __webpack_require__(\"CqCN\");\n\nvar _dataStackHelper = __webpack_require__(\"qVJQ\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      if (isDimensionStacked(data, dims[0], dims[1])) {\n        dims[0] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      if (isDimensionStacked(data, dims[1], dims[0])) {\n        dims[1] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1VkX\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _whiskerBoxCommon = __webpack_require__(\"sK5G\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1bHA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(\"RjA7\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"1bf2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"PBlc\");\n\n__webpack_require__(\"rFvp\");\n\n/***/ }),\n\n/***/ \"1uRk\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _clazz = __webpack_require__(\"BNYN\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"22Bn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.chart-container[data-v-0af8515f] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/charts/mixChart.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,mBAAmB;EACnB,YAAY;EACZ,cAAc;CACf\",\"file\":\"mixChart.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-0af8515f] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"27cN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.chart-container[data-v-3abedb29] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/charts/line.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,mBAAmB;EACnB,YAAY;EACZ,cAAc;CACf\",\"file\":\"line.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-3abedb29] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"2Ow2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"2W4A\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"2m1D\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"2tOJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"orv6\");\n\n__webpack_require__(\"vEM8\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});\n\n/***/ }),\n\n/***/ \"3n/B\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"PBlc\");\n\n__webpack_require__(\"0BNI\");\n\n/***/ }),\n\n/***/ \"43ae\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar axisPointerModelHelper = __webpack_require__(\"QCrJ\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"4A6G\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createRenderPlanner = __webpack_require__(\"CqCN\");\n\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 2);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"4RQY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = __webpack_require__(\"rbn0\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"4SGL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"4SW2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar preprocessor = __webpack_require__(\"DZTl\");\n\n__webpack_require__(\"Osoq\");\n\n__webpack_require__(\"w2H/\");\n\n__webpack_require__(\"OlnU\");\n\n__webpack_require__(\"gZam\");\n\n__webpack_require__(\"H4Wn\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n\n/***/ \"4UDB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"jMTz\");\n\n__webpack_require__(\"cO/Q\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar layoutPoints = __webpack_require__(\"1Nix\");\n\nvar dataSample = __webpack_require__(\"PWa9\");\n\n__webpack_require__(\"UkNE\");\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n/***/ }),\n\n/***/ \"4V7L\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"ghha\");\n\n__webpack_require__(\"oqQy\");\n\n__webpack_require__(\"rwkR\");\n\n__webpack_require__(\"AKXb\");\n\n__webpack_require__(\"+bS+\");\n\necharts.extendComponentView({\n  type: 'single'\n});\n\n/***/ }),\n\n/***/ \"4w1v\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(\"VewU\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar textHelper = __webpack_require__(\"qjrH\");\n\nvar Text = __webpack_require__(\"/86O\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation * 180 / Math.PI;\n    attr(textSvgEl, 'transform', 'rotate(' + rotate + ',' + x + ',' + y + ')');\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n/***/ }),\n\n/***/ \"5/bM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"eQYg\");\n\n__webpack_require__(\"h4VJ\");\n\nvar dataColor = __webpack_require__(\"ri8f\");\n\nvar funnelLayout = __webpack_require__(\"UOrf\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));\n\n/***/ }),\n\n/***/ \"56C7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar globalListener = __webpack_require__(\"DpwM\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5Hn/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar throttle = __webpack_require__(\"QD+P\");\n\nvar DataZoomView = __webpack_require__(\"ilLo\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5KWC\":\n/***/ (function(module, exports) {\n\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5Mek\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Eventful = __webpack_require__(\"qjvV\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar interactionMutex = __webpack_require__(\"mcsk\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5dr1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Cartesian = __webpack_require__(\"ct4P\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"5vFd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar Cartesian2D = __webpack_require__(\"5dr1\");\n\nvar Axis2D = __webpack_require__(\"RKzr\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n__webpack_require__(\"BuI2\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6HcI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6HoR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _poly = __webpack_require__(\"MXTC\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6JAQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6MCj\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar _vector = __webpack_require__(\"C7PF\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar colorTool = __webpack_require__(\"DRaW\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar textHelper = __webpack_require__(\"qjrH\");\n\nvar RectText = __webpack_require__(\"taS8\");\n\nvar Displayable = __webpack_require__(\"9qnA\");\n\nvar ZImage = __webpack_require__(\"MAom\");\n\nvar Text = __webpack_require__(\"/86O\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar Gradient = __webpack_require__(\"wRzc\");\n\nvar vmlCore = __webpack_require__(\"cI6i\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n/***/ }),\n\n/***/ \"6UfY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6axr\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar RadiusAxis = __webpack_require__(\"YqdL\");\n\nvar AngleAxis = __webpack_require__(\"6UfY\");\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6f6q\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ \"6n1D\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar LineGroup = __webpack_require__(\"bzOU\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"7XrG\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"7bL3\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"4V7L\");\n\n__webpack_require__(\"8DFW\");\n\n__webpack_require__(\"6HoR\");\n\nvar themeRiverLayout = __webpack_require__(\"nQkE\");\n\nvar themeRiverVisual = __webpack_require__(\"h6Uy\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));\n\n/***/ }),\n\n/***/ \"80cc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"6JAQ\");\n\n__webpack_require__(\"6f6q\");\n\n__webpack_require__(\"8RN9\");\n\nvar legendFilter = __webpack_require__(\"JIsR\");\n\nvar Component = __webpack_require__(\"Y5nL\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ \"80zD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n__webpack_require__(\"whrq\");\n\n__webpack_require__(\"srbS\");\n\n__webpack_require__(\"jpt2\");\n\n__webpack_require__(\"FvdC\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});\n\n/***/ }),\n\n/***/ \"82Fv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _sourceHelper = __webpack_require__(\"kdOt\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = __webpack_require__(\"+2Ke\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar DatasetModel = echarts.extendComponentModel({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nvar _default = DatasetModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"87tG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"JNWs\");\n\n__webpack_require__(\"sTIA\");\n\n/***/ }),\n\n/***/ \"8DFW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createDimensions = __webpack_require__(\"hcq/\");\n\nvar _dimensionHelper = __webpack_require__(\"mvCM\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = __webpack_require__(\"P05t\");\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      textAlign: 'right',\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"8Mpj\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(\"sJ4e\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"8RN9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _listComponent = __webpack_require__(\"v/cD\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"8UWf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"LGKB\");\n\n__webpack_require__(\"CUwD\");\n\n__webpack_require__(\"PYc7\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar orthogonalLayout = __webpack_require__(\"veIh\");\n\nvar radialLayout = __webpack_require__(\"f0h+\");\n\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);\n\n/***/ }),\n\n/***/ \"8YpK\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"997V\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"jJrn\");\n\n__webpack_require__(\"xLO3\");\n\n__webpack_require__(\"lVde\");\n\n/***/ }),\n\n/***/ \"9Owa\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n/***/ }),\n\n/***/ \"9Z3y\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(\"XhgW\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"9cSo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"a1DW\");\n\n__webpack_require__(\"1VkX\");\n\nvar preprocessor = __webpack_require__(\"g8A/\");\n\nvar candlestickVisual = __webpack_require__(\"fAbo\");\n\nvar candlestickLayout = __webpack_require__(\"vxwL\");\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);\n\n/***/ }),\n\n/***/ \"A+A9\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"Wf6x\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"cab4e9f6\", content, true, {});\n\n/***/ }),\n\n/***/ \"A6Kt\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n__webpack_require__(\"qBny\");\n\n__webpack_require__(\"DnWC\");\n\n__webpack_require__(\"C6b9\");\n\nvar dataColor = __webpack_require__(\"ri8f\");\n\nvar sunburstLayout = __webpack_require__(\"4SGL\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));\n\n/***/ }),\n\n/***/ \"AKXb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar axisPointerModelHelper = __webpack_require__(\"QCrJ\");\n\nvar axisTrigger = __webpack_require__(\"dtW/\");\n\n__webpack_require__(\"TCXJ\");\n\n__webpack_require__(\"56C7\");\n\n__webpack_require__(\"D7EH\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ \"ARaV\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar markerHelper = __webpack_require__(\"vx1D\");\n\nvar LineDraw = __webpack_require__(\"6n1D\");\n\nvar MarkerView = __webpack_require__(\"SZjP\");\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"AbHi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"AjK0\":\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"AjST\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"Po+l\");\n\n__webpack_require__(\"MsVc\");\n\nvar boxplotVisual = __webpack_require__(\"5KWC\");\n\nvar boxplotLayout = __webpack_require__(\"YbE0\");\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);\n\n/***/ }),\n\n/***/ \"B123\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"BqCv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar BrushController = __webpack_require__(\"oDOe\");\n\nvar brushHelper = __webpack_require__(\"ZJ+T\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"BuI2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"ecfp\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"C6b9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar helper = __webpack_require__(\"gOx9\");\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});\n\n/***/ }),\n\n/***/ \"CUwD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar SymbolClz = __webpack_require__(\"1bHA\");\n\nvar _layoutHelper = __webpack_require__(\"ERCD\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"CWSg\":\n/***/ (function(module, exports) {\n\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"CiLi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater; // There is no old data only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!this._data) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n\nwhiskerBoxDrawProto.incrementalPrepareUpdate = function (seriesModel, ecModel, api) {\n  this.group.removeAll();\n  this._data = null;\n};\n\nwhiskerBoxDrawProto.incrementalUpdate = function (params, seriesModel, ecModel, api) {\n  var data = seriesModel.getData();\n\n  for (var idx = params.start; idx < params.end; idx++) {\n    var symbolEl = new WhiskerBox(data, idx, this.styleUpdater, true);\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Cuh7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"D7EH\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar BaseAxisPointer = __webpack_require__(\"Ou7x\");\n\nvar viewHelper = __webpack_require__(\"zAPJ\");\n\nvar cartesianAxisHelper = __webpack_require__(\"koEO\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DHpS\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar makeStyleMapper = __webpack_require__(\"RYbJ\");\n\nvar axisModelCreator = __webpack_require__(\"eH0a\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DPh+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(\"2m1D\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DZTl\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DknX\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BrushController = __webpack_require__(\"oDOe\");\n\nvar BrushTargetManager = __webpack_require__(\"XCrL\");\n\nvar history = __webpack_require__(\"9Owa\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\n__webpack_require__(\"l2wH\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DnWC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar SunburstPiece = __webpack_require__(\"pSwa\");\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = virtualRoot.piece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (virtualRoot.piece) {\n          // Update\n          virtualRoot.piece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          virtualRoot.piece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(virtualRoot.piece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        virtualRoot.piece.on('click', event);\n      } else if (virtualRoot.piece) {\n        // Remove\n        group.remove(virtualRoot.piece);\n        virtualRoot.piece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"DpwM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ \"E7aA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar RoamController = __webpack_require__(\"5Mek\");\n\nvar throttleUtil = __webpack_require__(\"QD+P\");\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;\n\n/***/ }),\n\n/***/ \"E8YU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;\n\n/***/ }),\n\n/***/ \"ERCD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(\"1Xuh\");\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;\n\n/***/ }),\n\n/***/ \"F8oC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"FP3a\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/home/add.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var add = ({\n  name: '',\n\n  components: {},\n\n  props: {},\n\n  data: function data() {\n    return {\n      a: 0,\n      b: 0,\n      c: 0\n    };\n  },\n\n\n  computed: {\n    total: function total() {\n      return this.a + this.b + this.c;\n    }\n  },\n\n  watch: {},\n\n  created: function created() {},\n  mounted: function mounted() {},\n\n\n  methods: {}\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-68737547\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/add.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('el-input-number',{attrs:{\"type\":\"number\",\"size\":\"mini\",\"controls-position\":\"right\"},model:{value:(_vm.a),callback:function ($$v) {_vm.a=$$v},expression:\"a\"}}),_vm._v(\"\\n  +\\n  \"),_c('el-input-number',{attrs:{\"type\":\"number\",\"size\":\"mini\",\"controls-position\":\"right\"},model:{value:(_vm.b),callback:function ($$v) {_vm.b=$$v},expression:\"b\"}}),_vm._v(\"\\n  +\\n  \"),_c('el-input-number',{attrs:{\"type\":\"number\",\"size\":\"mini\",\"controls-position\":\"right\"},model:{value:(_vm.c),callback:function ($$v) {_vm.c=$$v},expression:\"c\"}}),_vm._v(\" \"),_c('div',[_c('p',[_vm._v(\"\\n      总数:\\n      \"),_c('span',[_vm._v(_vm._s(_vm.total))])])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ var home_add = (esExports);\n// CONCATENATED MODULE: ./src/pages/home/add.vue\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"rjiA\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-68737547\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  add,\n  home_add,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var pages_home_add = (Component.exports);\n\n// EXTERNAL MODULE: ./node_modules/echarts/index.js\nvar echarts = __webpack_require__(\"XLwt\");\nvar echarts_default = /*#__PURE__*/__webpack_require__.n(echarts);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/core-js/object/keys.js\nvar object_keys = __webpack_require__(\"fZjL\");\nvar keys_default = /*#__PURE__*/__webpack_require__.n(object_keys);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/typeof.js\nvar helpers_typeof = __webpack_require__(\"pFYg\");\nvar typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);\n\n// CONCATENATED MODULE: ./src/utils/index.js\n\n\n/**\r\n * Created by jiachenpan on 16/11/18.\r\n */\n\nfunction parseTime(time, cFormat) {\n  if (arguments.length === 0) {\n    return null;\n  }\n  var format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n  var date = void 0;\n  if ((typeof time === 'undefined' ? 'undefined' : typeof_default()(time)) === 'object') {\n    date = time;\n  } else {\n    if (('' + time).length === 10) time = parseInt(time) * 1000;\n    date = new Date(time);\n  }\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, function (result, key) {\n    var value = formatObj[key];\n    if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1];\n    if (result.length > 0 && value < 10) {\n      value = '0' + value;\n    }\n    return value || 0;\n  });\n  return time_str;\n}\n\nfunction formatTime(time, option) {\n  time = +time * 1000;\n  var d = new Date(time);\n  var now = Date.now();\n\n  var diff = (now - d) / 1000;\n\n  if (diff < 30) {\n    return '刚刚';\n  } else if (diff < 3600) {\n    // less 1 hour\n    return Math.ceil(diff / 60) + '分钟前';\n  } else if (diff < 3600 * 24) {\n    return Math.ceil(diff / 3600) + '小时前';\n  } else if (diff < 3600 * 24 * 2) {\n    return '1天前';\n  }\n  if (option) {\n    return parseTime(time, option);\n  } else {\n    return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分';\n  }\n}\n\n// 格式化时间\nfunction getQueryObject(url) {\n  url = url == null ? window.location.href : url;\n  var search = url.substring(url.lastIndexOf('?') + 1);\n  var obj = {};\n  var reg = /([^?&=]+)=([^?&=]*)/g;\n  search.replace(reg, function (rs, $1, $2) {\n    var name = decodeURIComponent($1);\n    var val = decodeURIComponent($2);\n    val = String(val);\n    obj[name] = val;\n    return rs;\n  });\n  return obj;\n}\n\n/**\r\n *get getByteLen\r\n * @param {Sting} val input value\r\n * @returns {number} output value\r\n */\nfunction getByteLen(val) {\n  var len = 0;\n  for (var i = 0; i < val.length; i++) {\n    if (val[i].match(/[^\\x00-\\xff]/ig) != null) {\n      len += 1;\n    } else {\n      len += 0.5;\n    }\n  }\n  return Math.floor(len);\n}\n\nfunction cleanArray(actual) {\n  var newArray = [];\n  for (var i = 0; i < actual.length; i++) {\n    if (actual[i]) {\n      newArray.push(actual[i]);\n    }\n  }\n  return newArray;\n}\n\nfunction param(json) {\n  if (!json) return '';\n  return cleanArray(keys_default()(json).map(function (key) {\n    if (json[key] === undefined) return '';\n    return encodeURIComponent(key) + '=' + encodeURIComponent(json[key]);\n  })).join('&');\n}\n\nfunction param2Obj(url) {\n  var search = url.split('?')[1];\n  if (!search) {\n    return {};\n  }\n  return JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n}\n\nfunction html2Text(val) {\n  var div = document.createElement('div');\n  div.innerHTML = val;\n  return div.textContent || div.innerText;\n}\n\nfunction objectMerge(target, source) {\n  /* Merges two  objects,\r\n     giving the last one precedence */\n\n  if ((typeof target === 'undefined' ? 'undefined' : typeof_default()(target)) !== 'object') {\n    target = {};\n  }\n  if (Array.isArray(source)) {\n    return source.slice();\n  }\n  keys_default()(source).forEach(function (property) {\n    var sourceProperty = source[property];\n    if ((typeof sourceProperty === 'undefined' ? 'undefined' : typeof_default()(sourceProperty)) === 'object') {\n      target[property] = objectMerge(target[property], sourceProperty);\n    } else {\n      target[property] = sourceProperty;\n    }\n  });\n  return target;\n}\n\nfunction scrollTo(element, to, duration) {\n  if (duration <= 0) return;\n  var difference = to - element.scrollTop;\n  var perTick = difference / duration * 10;\n  setTimeout(function () {\n    console.log(new Date());\n    element.scrollTop = element.scrollTop + perTick;\n    if (element.scrollTop === to) return;\n    scrollTo(element, to, duration - 10);\n  }, 10);\n}\n\nfunction toggleClass(element, className) {\n  if (!element || !className) {\n    return;\n  }\n  var classString = element.className;\n  var nameIndex = classString.indexOf(className);\n  if (nameIndex === -1) {\n    classString += '' + className;\n  } else {\n    classString = classString.substr(0, nameIndex) + classString.substr(nameIndex + className.length);\n  }\n  element.className = classString;\n}\n\nvar pickerOptions = [{\n  text: '今天',\n  onClick: function onClick(picker) {\n    var end = new Date();\n    var start = new Date(new Date().toDateString());\n    end.setTime(start.getTime());\n    picker.$emit('pick', [start, end]);\n  }\n}, {\n  text: '最近一周',\n  onClick: function onClick(picker) {\n    var end = new Date(new Date().toDateString());\n    var start = new Date();\n    start.setTime(end.getTime() - 3600 * 1000 * 24 * 7);\n    picker.$emit('pick', [start, end]);\n  }\n}, {\n  text: '最近一个月',\n  onClick: function onClick(picker) {\n    var end = new Date(new Date().toDateString());\n    var start = new Date();\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n    picker.$emit('pick', [start, end]);\n  }\n}, {\n  text: '最近三个月',\n  onClick: function onClick(picker) {\n    var end = new Date(new Date().toDateString());\n    var start = new Date();\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n    picker.$emit('pick', [start, end]);\n  }\n}];\n\nfunction getTime(type) {\n  if (type === 'start') {\n    return new Date().getTime() - 3600 * 1000 * 24 * 90;\n  } else {\n    return new Date(new Date().toDateString());\n  }\n}\n\nfunction debounce(func, wait, immediate) {\n  var timeout = void 0,\n      args = void 0,\n      context = void 0,\n      timestamp = void 0,\n      result = void 0;\n\n  var later = function later() {\n    // 据上一次触发时间间隔\n    var last = +new Date() - timestamp;\n\n    // 上次被包装函数被调用时间间隔last小于设定时间间隔wait\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    context = this;\n    timestamp = +new Date();\n    var callNow = immediate && !timeout;\n    // 如果延时不存在，重新设定延时\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n}\n\nfunction deepClone(source) {\n  if (!source && (typeof source === 'undefined' ? 'undefined' : typeof_default()(source)) !== 'object') {\n    throw new Error('error arguments', 'shallowClone');\n  }\n  var targetObj = source.constructor === Array ? [] : {};\n  keys_default()(source).forEach(function (keys) {\n    if (source[keys] && typeof_default()(source[keys]) === 'object') {\n      targetObj[keys] = source[keys].constructor === Array ? [] : {};\n      targetObj[keys] = deepClone(source[keys]);\n    } else {\n      targetObj[keys] = source[keys];\n    }\n  });\n  return targetObj;\n}\n// CONCATENATED MODULE: ./src/components/Charts/mixins/resize.js\n\n\n/* harmony default export */ var resize = ({\n  mounted: function mounted() {\n    var _this = this;\n\n    this.__resizeHanlder = debounce(function () {\n      if (_this.chart) {\n        _this.chart.resize();\n      }\n    }, 100);\n    window.addEventListener('resize', this.__resizeHanlder);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.__resizeHanlder);\n  }\n});\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Charts/keyboard.vue\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var keyboard = ({\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    this.chart.dispose();\n    this.chart = null;\n  },\n\n  methods: {\n    initChart: function initChart() {\n      this.chart = echarts_default.a.init(document.getElementById(this.id));\n\n      var xAxisData = [];\n      var data = [];\n      var data2 = [];\n      for (var i = 0; i < 50; i++) {\n        xAxisData.push(i);\n        data.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n        data2.push((Math.sin(i / 5) * (i / 5 + 10) + i / 6) * 3);\n      }\n      this.chart.setOption({\n        backgroundColor: '#08263a',\n        xAxis: [{\n          show: false,\n          data: xAxisData\n        }, {\n          show: false,\n          data: xAxisData\n        }],\n        visualMap: {\n          show: false,\n          min: 0,\n          max: 50,\n          dimension: 0,\n          inRange: {\n            color: ['#4a657a', '#308e92', '#b1cfa5', '#f5d69f', '#f5898b', '#ef5055']\n          }\n        },\n        yAxis: {\n          axisLine: {\n            show: false\n          },\n          axisLabel: {\n            textStyle: {\n              color: '#4a657a'\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#08263f'\n            }\n          },\n          axisTick: {\n            show: false\n          }\n        },\n        series: [{\n          name: 'back',\n          type: 'bar',\n          data: data2,\n          z: 1,\n          itemStyle: {\n            normal: {\n              opacity: 0.4,\n              barBorderRadius: 5,\n              shadowBlur: 3,\n              shadowColor: '#111'\n            }\n          }\n        }, {\n          name: 'Simulate Shadow',\n          type: 'line',\n          data: data,\n          z: 2,\n          showSymbol: false,\n          animationDelay: 0,\n          animationEasing: 'linear',\n          animationDuration: 1200,\n          lineStyle: {\n            normal: {\n              color: 'transparent'\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: '#08263a',\n              shadowBlur: 50,\n              shadowColor: '#000'\n            }\n          }\n        }, {\n          name: 'front',\n          type: 'bar',\n          data: data,\n          xAxisIndex: 1,\n          z: 3,\n          itemStyle: {\n            normal: {\n              barBorderRadius: 5\n            }\n          }\n        }],\n        animationEasing: 'elasticOut',\n        animationEasingUpdate: 'elasticOut',\n        animationDelay: function animationDelay(idx) {\n          return idx * 20;\n        },\n        animationDelayUpdate: function animationDelayUpdate(idx) {\n          return idx * 20;\n        }\n      });\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a5b0ab58\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/keyboard.vue\nvar keyboard_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.className,style:({height:_vm.height,width:_vm.width}),attrs:{\"id\":_vm.id}})}\nvar keyboard_staticRenderFns = []\nvar keyboard_esExports = { render: keyboard_render, staticRenderFns: keyboard_staticRenderFns }\n/* harmony default export */ var Charts_keyboard = (keyboard_esExports);\n// CONCATENATED MODULE: ./src/components/Charts/keyboard.vue\nvar keyboard_normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar keyboard___vue_template_functional__ = false\n/* styles */\nvar keyboard___vue_styles__ = null\n/* scopeId */\nvar keyboard___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar keyboard___vue_module_identifier__ = null\nvar keyboard_Component = keyboard_normalizeComponent(\n  keyboard,\n  Charts_keyboard,\n  keyboard___vue_template_functional__,\n  keyboard___vue_styles__,\n  keyboard___vue_scopeId__,\n  keyboard___vue_module_identifier__\n)\n\n/* harmony default export */ var components_Charts_keyboard = (keyboard_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/home/charts/keyboard.vue\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var charts_keyboard = ({\n  name: 'keyboardChart',\n  props: {\n    className: {\n      type: [String],\n      default: 'charts'\n    },\n    id: {\n      type: [String],\n      default: 'charts',\n      required: true\n    }\n  },\n  components: { Chart: components_Charts_keyboard }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-654b2b9c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/charts/keyboard.vue\nvar charts_keyboard_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-container\"},[_c('chart',{class:_vm.className,attrs:{\"id\":_vm.id,\"height\":\"100%\",\"width\":\"100%\"}})],1)}\nvar charts_keyboard_staticRenderFns = []\nvar charts_keyboard_esExports = { render: charts_keyboard_render, staticRenderFns: charts_keyboard_staticRenderFns }\n/* harmony default export */ var home_charts_keyboard = (charts_keyboard_esExports);\n// CONCATENATED MODULE: ./src/pages/home/charts/keyboard.vue\nfunction keyboard_injectStyle (ssrContext) {\n  __webpack_require__(\"A+A9\")\n}\nvar charts_keyboard_normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar charts_keyboard___vue_template_functional__ = false\n/* styles */\nvar charts_keyboard___vue_styles__ = keyboard_injectStyle\n/* scopeId */\nvar charts_keyboard___vue_scopeId__ = \"data-v-654b2b9c\"\n/* moduleIdentifier (server only) */\nvar charts_keyboard___vue_module_identifier__ = null\nvar charts_keyboard_Component = charts_keyboard_normalizeComponent(\n  charts_keyboard,\n  home_charts_keyboard,\n  charts_keyboard___vue_template_functional__,\n  charts_keyboard___vue_styles__,\n  charts_keyboard___vue_scopeId__,\n  charts_keyboard___vue_module_identifier__\n)\n\n/* harmony default export */ var pages_home_charts_keyboard = (charts_keyboard_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Charts/lineMarker.vue\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var lineMarker = ({\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    this.chart.dispose();\n    this.chart = null;\n  },\n\n  methods: {\n    initChart: function initChart() {\n      this.chart = echarts_default.a.init(document.getElementById(this.id));\n\n      this.chart.setOption({\n        backgroundColor: '#394056',\n        title: {\n          top: 20,\n          text: 'Requests',\n          textStyle: {\n            fontWeight: 'normal',\n            fontSize: 16,\n            color: '#F1F1F3'\n          },\n          left: '1%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        },\n        legend: {\n          top: 20,\n          icon: 'rect',\n          itemWidth: 14,\n          itemHeight: 5,\n          itemGap: 13,\n          data: ['CMCC', 'CTCC', 'CUCC'],\n          right: '4%',\n          textStyle: {\n            fontSize: 12,\n            color: '#F1F1F3'\n          }\n        },\n        grid: {\n          top: 100,\n          left: '3%',\n          right: '4%',\n          bottom: '2%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          data: ['13:00', '13:05', '13:10', '13:15', '13:20', '13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55']\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '(%)',\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          axisLabel: {\n            margin: 10,\n            textStyle: {\n              fontSize: 14\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        }],\n        series: [{\n          name: 'CMCC',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts_default.a.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(137, 189, 27, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(137, 189, 27, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(137,189,27)',\n              borderColor: 'rgba(137,189,2,0.27)',\n              borderWidth: 12\n\n            }\n          },\n          data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]\n        }, {\n          name: 'CTCC',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts_default.a.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(0, 136, 212, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(0, 136, 212, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(0,136,212)',\n              borderColor: 'rgba(0,136,212,0.2)',\n              borderWidth: 12\n\n            }\n          },\n          data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\n        }, {\n          name: 'CUCC',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts_default.a.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(219, 50, 51, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(219, 50, 51, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(219,50,51)',\n              borderColor: 'rgba(219,50,51,0.2)',\n              borderWidth: 12\n            }\n          },\n          data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122]\n        }]\n      });\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0f771fee\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/lineMarker.vue\nvar lineMarker_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.className,style:({height:_vm.height,width:_vm.width}),attrs:{\"id\":_vm.id}})}\nvar lineMarker_staticRenderFns = []\nvar lineMarker_esExports = { render: lineMarker_render, staticRenderFns: lineMarker_staticRenderFns }\n/* harmony default export */ var Charts_lineMarker = (lineMarker_esExports);\n// CONCATENATED MODULE: ./src/components/Charts/lineMarker.vue\nvar lineMarker_normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar lineMarker___vue_template_functional__ = false\n/* styles */\nvar lineMarker___vue_styles__ = null\n/* scopeId */\nvar lineMarker___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar lineMarker___vue_module_identifier__ = null\nvar lineMarker_Component = lineMarker_normalizeComponent(\n  lineMarker,\n  Charts_lineMarker,\n  lineMarker___vue_template_functional__,\n  lineMarker___vue_styles__,\n  lineMarker___vue_scopeId__,\n  lineMarker___vue_module_identifier__\n)\n\n/* harmony default export */ var components_Charts_lineMarker = (lineMarker_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/home/charts/line.vue\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var line = ({\n  name: 'lineChart',\n  props: {\n    className: {\n      type: [String],\n      default: 'charts'\n    },\n    id: {\n      type: [String],\n      default: 'charts',\n      required: true\n    }\n  },\n  components: { Chart: components_Charts_lineMarker }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3abedb29\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/charts/line.vue\nvar line_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-container\"},[_c('chart',{class:_vm.className,attrs:{\"id\":_vm.id,\"height\":\"100%\",\"width\":\"100%\"}})],1)}\nvar line_staticRenderFns = []\nvar line_esExports = { render: line_render, staticRenderFns: line_staticRenderFns }\n/* harmony default export */ var charts_line = (line_esExports);\n// CONCATENATED MODULE: ./src/pages/home/charts/line.vue\nfunction line_injectStyle (ssrContext) {\n  __webpack_require__(\"V6ht\")\n}\nvar line_normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar line___vue_template_functional__ = false\n/* styles */\nvar line___vue_styles__ = line_injectStyle\n/* scopeId */\nvar line___vue_scopeId__ = \"data-v-3abedb29\"\n/* moduleIdentifier (server only) */\nvar line___vue_module_identifier__ = null\nvar line_Component = line_normalizeComponent(\n  line,\n  charts_line,\n  line___vue_template_functional__,\n  line___vue_styles__,\n  line___vue_scopeId__,\n  line___vue_module_identifier__\n)\n\n/* harmony default export */ var home_charts_line = (line_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Charts/mixChart.vue\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var mixChart = ({\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    this.chart.dispose();\n    this.chart = null;\n  },\n\n  methods: {\n    initChart: function initChart() {\n      this.chart = echarts_default.a.init(document.getElementById(this.id));\n      var xData = function () {\n        var data = [];\n        for (var i = 1; i < 13; i++) {\n          data.push(i + 'month');\n        }\n        return data;\n      }();\n      this.chart.setOption({\n        backgroundColor: '#344b58',\n        title: {\n          text: 'statistics',\n          x: '20',\n          top: '20',\n          textStyle: {\n            color: '#fff',\n            fontSize: '22'\n          },\n          subtextStyle: {\n            color: '#90979c',\n            fontSize: '16'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            textStyle: {\n              color: '#fff'\n            }\n          }\n        },\n        grid: {\n          borderWidth: 0,\n          top: 110,\n          bottom: 95,\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        legend: {\n          x: '5%',\n          top: '10%',\n          textStyle: {\n            color: '#90979c'\n          },\n          data: ['female', 'male', 'average']\n        },\n        calculable: true,\n        xAxis: [{\n          type: 'category',\n          axisLine: {\n            lineStyle: {\n              color: '#90979c'\n            }\n          },\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          splitArea: {\n            show: false\n          },\n          axisLabel: {\n            interval: 0\n\n          },\n          data: xData\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#90979c'\n            }\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            interval: 0\n          },\n          splitArea: {\n            show: false\n          }\n        }],\n        dataZoom: [{\n          show: true,\n          height: 30,\n          xAxisIndex: [0],\n          bottom: 30,\n          start: 10,\n          end: 80,\n          handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\n          handleSize: '110%',\n          handleStyle: {\n            color: '#d3dee5'\n\n          },\n          textStyle: {\n            color: '#fff' },\n          borderColor: '#90979c'\n\n        }, {\n          type: 'inside',\n          show: true,\n          height: 15,\n          start: 1,\n          end: 35\n        }],\n        series: [{\n          name: 'female',\n          type: 'bar',\n          stack: 'total',\n          barMaxWidth: 35,\n          barGap: '10%',\n          itemStyle: {\n            normal: {\n              color: 'rgba(255,144,128,1)',\n              label: {\n                show: true,\n                textStyle: {\n                  color: '#fff'\n                },\n                position: 'insideTop',\n                formatter: function formatter(p) {\n                  return p.value > 0 ? p.value : '';\n                }\n              }\n            }\n          },\n          data: [709, 1917, 2455, 2610, 1719, 1433, 1544, 3285, 5208, 3372, 2484, 4078]\n        }, {\n          name: 'male',\n          type: 'bar',\n          stack: 'total',\n          itemStyle: {\n            normal: {\n              color: 'rgba(0,191,183,1)',\n              barBorderRadius: 0,\n              label: {\n                show: true,\n                position: 'top',\n                formatter: function formatter(p) {\n                  return p.value > 0 ? p.value : '';\n                }\n              }\n            }\n          },\n          data: [327, 1776, 507, 1200, 800, 482, 204, 1390, 1001, 951, 381, 220]\n        }, {\n          name: 'average',\n          type: 'line',\n          stack: 'total',\n          symbolSize: 10,\n          symbol: 'circle',\n          itemStyle: {\n            normal: {\n              color: 'rgba(252,230,48,1)',\n              barBorderRadius: 0,\n              label: {\n                show: true,\n                position: 'top',\n                formatter: function formatter(p) {\n                  return p.value > 0 ? p.value : '';\n                }\n              }\n            }\n          },\n          data: [1036, 3693, 2962, 3810, 2519, 1915, 1748, 4675, 6209, 4323, 2865, 4298]\n        }]\n      });\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5e2f0e87\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/mixChart.vue\nvar mixChart_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.className,style:({height:_vm.height,width:_vm.width}),attrs:{\"id\":_vm.id}})}\nvar mixChart_staticRenderFns = []\nvar mixChart_esExports = { render: mixChart_render, staticRenderFns: mixChart_staticRenderFns }\n/* harmony default export */ var Charts_mixChart = (mixChart_esExports);\n// CONCATENATED MODULE: ./src/components/Charts/mixChart.vue\nvar mixChart_normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar mixChart___vue_template_functional__ = false\n/* styles */\nvar mixChart___vue_styles__ = null\n/* scopeId */\nvar mixChart___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar mixChart___vue_module_identifier__ = null\nvar mixChart_Component = mixChart_normalizeComponent(\n  mixChart,\n  Charts_mixChart,\n  mixChart___vue_template_functional__,\n  mixChart___vue_styles__,\n  mixChart___vue_scopeId__,\n  mixChart___vue_module_identifier__\n)\n\n/* harmony default export */ var components_Charts_mixChart = (mixChart_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/home/charts/mixChart.vue\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var charts_mixChart = ({\n  name: 'mixChart',\n  props: {\n    className: {\n      type: [String],\n      default: 'charts'\n    },\n    id: {\n      type: [String],\n      default: 'charts',\n      required: true\n    }\n  },\n  components: { Chart: components_Charts_mixChart }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0af8515f\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/charts/mixChart.vue\nvar charts_mixChart_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-container\"},[_c('chart',{class:_vm.className,attrs:{\"id\":_vm.id,\"height\":\"100%\",\"width\":\"100%\"}})],1)}\nvar charts_mixChart_staticRenderFns = []\nvar charts_mixChart_esExports = { render: charts_mixChart_render, staticRenderFns: charts_mixChart_staticRenderFns }\n/* harmony default export */ var home_charts_mixChart = (charts_mixChart_esExports);\n// CONCATENATED MODULE: ./src/pages/home/charts/mixChart.vue\nfunction mixChart_injectStyle (ssrContext) {\n  __webpack_require__(\"TLJB\")\n}\nvar charts_mixChart_normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar charts_mixChart___vue_template_functional__ = false\n/* styles */\nvar charts_mixChart___vue_styles__ = mixChart_injectStyle\n/* scopeId */\nvar charts_mixChart___vue_scopeId__ = \"data-v-0af8515f\"\n/* moduleIdentifier (server only) */\nvar charts_mixChart___vue_module_identifier__ = null\nvar charts_mixChart_Component = charts_mixChart_normalizeComponent(\n  charts_mixChart,\n  home_charts_mixChart,\n  charts_mixChart___vue_template_functional__,\n  charts_mixChart___vue_styles__,\n  charts_mixChart___vue_scopeId__,\n  charts_mixChart___vue_module_identifier__\n)\n\n/* harmony default export */ var pages_home_charts_mixChart = (charts_mixChart_Component.exports);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/defineProperty.js\nvar defineProperty = __webpack_require__(\"bOdI\");\nvar defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/home/autoComplete.vue\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var autoComplete = ({\n  name: '',\n\n  components: {},\n\n  props: {},\n\n  data: function data() {\n    return {\n      state: '',\n      restaurants: [],\n      timeout: null\n    };\n  },\n\n\n  computed: {},\n\n  watch: {},\n\n  created: function created() {},\n  mounted: function mounted() {\n    this.restaurants = this.loadAll();\n  },\n\n\n  methods: defineProperty_default()({\n    loadAll: function loadAll() {\n      return [{ \"value\": \"三全鲜食（北新泾店）\", \"address\": \"长宁区新渔路144号\" }, { \"value\": \"Hot honey 首尔炸鸡（仙霞路）\", \"address\": \"上海市长宁区淞虹路661号\" }, { \"value\": \"新旺角茶餐厅\", \"address\": \"上海市普陀区真北路988号创邑金沙谷6号楼113\" }, { \"value\": \"泷千家(天山西路店)\", \"address\": \"天山西路438号\" }, { \"value\": \"胖仙女纸杯蛋糕（上海凌空店）\", \"address\": \"上海市长宁区金钟路968号1幢18号楼一层商铺18-101\" }, { \"value\": \"贡茶\", \"address\": \"上海市长宁区金钟路633号\" }, { \"value\": \"豪大大香鸡排超级奶爸\", \"address\": \"上海市嘉定区曹安公路曹安路1685号\" }, { \"value\": \"茶芝兰（奶茶，手抓饼）\", \"address\": \"上海市普陀区同普路1435号\" }, { \"value\": \"十二泷町\", \"address\": \"上海市北翟路1444弄81号B幢-107\" }, { \"value\": \"星移浓缩咖啡\", \"address\": \"上海市嘉定区新郁路817号\" }, { \"value\": \"阿姨奶茶/豪大大\", \"address\": \"嘉定区曹安路1611号\" }, { \"value\": \"新麦甜四季甜品炸鸡\", \"address\": \"嘉定区曹安公路2383弄55号\" }, { \"value\": \"Monica摩托主题咖啡店\", \"address\": \"嘉定区江桥镇曹安公路2409号1F，2383弄62号1F\" }, { \"value\": \"浮生若茶（凌空soho店）\", \"address\": \"上海长宁区金钟路968号9号楼地下一层\" }, { \"value\": \"NONO JUICE  鲜榨果汁\", \"address\": \"上海市长宁区天山西路119号\" }, { \"value\": \"CoCo都可(北新泾店）\", \"address\": \"上海市长宁区仙霞西路\" }, { \"value\": \"快乐柠檬（神州智慧店）\", \"address\": \"上海市长宁区天山西路567号1层R117号店铺\" }, { \"value\": \"Merci Paul cafe\", \"address\": \"上海市普陀区光复西路丹巴路28弄6号楼819\" }, { \"value\": \"猫山王（西郊百联店）\", \"address\": \"上海市长宁区仙霞西路88号第一层G05-F01-1-306\" }, { \"value\": \"枪会山\", \"address\": \"上海市普陀区棕榈路\" }, { \"value\": \"纵食\", \"address\": \"元丰天山花园(东门) 双流路267号\" }, { \"value\": \"钱记\", \"address\": \"上海市长宁区天山西路\" }, { \"value\": \"壹杯加\", \"address\": \"上海市长宁区通协路\" }, { \"value\": \"唦哇嘀咖\", \"address\": \"上海市长宁区新泾镇金钟路999号2幢（B幢）第01层第1-02A单元\" }, { \"value\": \"爱茜茜里(西郊百联)\", \"address\": \"长宁区仙霞西路88号1305室\" }, { \"value\": \"爱茜茜里(近铁广场)\", \"address\": \"上海市普陀区真北路818号近铁城市广场北区地下二楼N-B2-O2-C商铺\" }, { \"value\": \"鲜果榨汁（金沙江路和美广店）\", \"address\": \"普陀区金沙江路2239号金沙和美广场B1-10-6\" }, { \"value\": \"开心丽果（缤谷店）\", \"address\": \"上海市长宁区威宁路天山路341号\" }, { \"value\": \"超级鸡车（丰庄路店）\", \"address\": \"上海市嘉定区丰庄路240号\" }, { \"value\": \"妙生活果园（北新泾店）\", \"address\": \"长宁区新渔路144号\" }, { \"value\": \"香宜度麻辣香锅\", \"address\": \"长宁区淞虹路148号\" }, { \"value\": \"凡仔汉堡（老真北路店）\", \"address\": \"上海市普陀区老真北路160号\" }, { \"value\": \"港式小铺\", \"address\": \"上海市长宁区金钟路968号15楼15-105室\" }, { \"value\": \"蜀香源麻辣香锅（剑河路店）\", \"address\": \"剑河路443-1\" }, { \"value\": \"北京饺子馆\", \"address\": \"长宁区北新泾街道天山西路490-1号\" }, { \"value\": \"饭典*新简餐（凌空SOHO店）\", \"address\": \"上海市长宁区金钟路968号9号楼地下一层9-83室\" }, { \"value\": \"焦耳·川式快餐（金钟路店）\", \"address\": \"上海市金钟路633号地下一层甲部\" }, { \"value\": \"动力鸡车\", \"address\": \"长宁区仙霞西路299弄3号101B\" }, { \"value\": \"浏阳蒸菜\", \"address\": \"天山西路430号\" }, { \"value\": \"四海游龙（天山西路店）\", \"address\": \"上海市长宁区天山西路\" }, { \"value\": \"樱花食堂（凌空店）\", \"address\": \"上海市长宁区金钟路968号15楼15-105室\" }, { \"value\": \"壹分米客家传统调制米粉(天山店)\", \"address\": \"天山西路428号\" }, { \"value\": \"福荣祥烧腊（平溪路店）\", \"address\": \"上海市长宁区协和路福泉路255弄57-73号\" }, { \"value\": \"速记黄焖鸡米饭\", \"address\": \"上海市长宁区北新泾街道金钟路180号1层01号摊位\" }, { \"value\": \"红辣椒麻辣烫\", \"address\": \"上海市长宁区天山西路492号\" }, { \"value\": \"(小杨生煎)西郊百联餐厅\", \"address\": \"长宁区仙霞西路88号百联2楼\" }, { \"value\": \"阳阳麻辣烫\", \"address\": \"天山西路389号\" }, { \"value\": \"南拳妈妈龙虾盖浇饭\", \"address\": \"普陀区金沙江路1699号鑫乐惠美食广场A13\" }];\n    },\n    querySearchAsync: function querySearchAsync(queryString, cb) {\n      var restaurants = this.restaurants;\n      var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(function () {\n        cb(results);\n      }, 300);\n    },\n    createStateFilter: function createStateFilter(queryString) {\n      return function (state) {\n        return state.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect: function handleSelect(item) {\n      console.log(item);\n    }\n  }, 'handleSelect', function handleSelect(v) {\n    console.log(v);\n  })\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-07498730\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/autoComplete.vue\nvar autoComplete_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"autoComplete\"},[_c('el-autocomplete',{attrs:{\"fetch-suggestions\":_vm.querySearchAsync,\"placeholder\":\"请输入内容\"},on:{\"select\":_vm.handleSelect},model:{value:(_vm.state),callback:function ($$v) {_vm.state=$$v},expression:\"state\"}})],1)}\nvar autoComplete_staticRenderFns = []\nvar autoComplete_esExports = { render: autoComplete_render, staticRenderFns: autoComplete_staticRenderFns }\n/* harmony default export */ var home_autoComplete = (autoComplete_esExports);\n// CONCATENATED MODULE: ./src/pages/home/autoComplete.vue\nfunction autoComplete_injectStyle (ssrContext) {\n  __webpack_require__(\"a/4j\")\n}\nvar autoComplete_normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar autoComplete___vue_template_functional__ = false\n/* styles */\nvar autoComplete___vue_styles__ = autoComplete_injectStyle\n/* scopeId */\nvar autoComplete___vue_scopeId__ = \"data-v-07498730\"\n/* moduleIdentifier (server only) */\nvar autoComplete___vue_module_identifier__ = null\nvar autoComplete_Component = autoComplete_normalizeComponent(\n  autoComplete,\n  home_autoComplete,\n  autoComplete___vue_template_functional__,\n  autoComplete___vue_styles__,\n  autoComplete___vue_scopeId__,\n  autoComplete___vue_module_identifier__\n)\n\n/* harmony default export */ var pages_home_autoComplete = (autoComplete_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/home/index.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n/* harmony default export */ var home = ({\n  name: '',\n  components: {\n    Add: pages_home_add,\n    AutoComplete: pages_home_autoComplete,\n    KeyboardChart: pages_home_charts_keyboard,\n    LineChart: home_charts_line,\n    MixChart: pages_home_charts_mixChart\n  },\n  props: {},\n  data: function data() {\n    return {};\n  },\n\n  computed: {},\n  watch: {},\n  created: function created() {},\n  mounted: function mounted() {},\n\n  methods: {}\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-02525800\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/index.vue\nvar home_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-index\"},[_c('el-row',{attrs:{\"gutter\":16}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"echarts-keyboard\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('KeyboardChart',{attrs:{\"id\":\"chart-keyboard\",\"width\":\"100%\",\"height\":\"\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"echarts-line\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('LineChart',{attrs:{\"id\":\"chart-line\",\"width\":\"100%\",\"height\":\"100%\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"echarts-mixChart\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('MixChart',{attrs:{\"id\":\"chart-mix\",\"width\":\"100%\",\"height\":\"100%\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"加法计算器\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('Add')],1)],1)],1)],1)}\nvar home_staticRenderFns = []\nvar home_esExports = { render: home_render, staticRenderFns: home_staticRenderFns }\n/* harmony default export */ var pages_home = (home_esExports);\n// CONCATENATED MODULE: ./src/pages/home/index.vue\nfunction home_injectStyle (ssrContext) {\n  __webpack_require__(\"nW6X\")\n}\nvar home_normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar home___vue_template_functional__ = false\n/* styles */\nvar home___vue_styles__ = home_injectStyle\n/* scopeId */\nvar home___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar home___vue_module_identifier__ = null\nvar home_Component = home_normalizeComponent(\n  home,\n  pages_home,\n  home___vue_template_functional__,\n  home___vue_styles__,\n  home___vue_scopeId__,\n  home___vue_module_identifier__\n)\n\n/* harmony default export */ var src_pages_home = __webpack_exports__[\"default\"] = (home_Component.exports);\n\n\n/***/ }),\n\n/***/ \"Fkmw\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar colorUtil = __webpack_require__(\"DRaW\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar markerHelper = __webpack_require__(\"vx1D\");\n\nvar MarkerView = __webpack_require__(\"SZjP\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}\n\n/***/ }),\n\n/***/ \"FlXs\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar throttleUtil = __webpack_require__(\"QD+P\");\n\nvar parallelPreprocessor = __webpack_require__(\"i6Ks\");\n\n__webpack_require__(\"qSkD\");\n\n__webpack_require__(\"KjPy\");\n\n__webpack_require__(\"LjPz\");\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);\n\n/***/ }),\n\n/***/ \"FvdC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _roamHelper = __webpack_require__(\"ii60\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});\n\n/***/ }),\n\n/***/ \"GQGX\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"GWV8\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar helper = __webpack_require__(\"s1Aj\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"GbHy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _barGrid = __webpack_require__(\"m/6y\");\n\nvar layout = _barGrid.layout;\n\n__webpack_require__(\"5vFd\");\n\n__webpack_require__(\"DPh+\");\n\n__webpack_require__(\"eHPu\");\n\n__webpack_require__(\"UkNE\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n/***/ }),\n\n/***/ \"Gevp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"GnMB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = __webpack_require__(\"0sHC\");\n\nvar Group = _graphic.Group;\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = __webpack_require__(\"1bHA\");\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Goha\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curveTool = __webpack_require__(\"AAi1\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Gp87\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(\"Pgdp\");\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"H4Od\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar vector = __webpack_require__(\"C7PF\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar Transformable = __webpack_require__(\"/ZBO\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"H4Wn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});\n\n/***/ }),\n\n/***/ \"HGSA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar zrColor = __webpack_require__(\"DRaW\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"HcG6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar parseGeoJson = __webpack_require__(\"Axyt\");\n\nvar View = __webpack_require__(\"H4Od\");\n\nvar fixNanhai = __webpack_require__(\"Qv0P\");\n\nvar fixTextCoord = __webpack_require__(\"cU6c\");\n\nvar fixGeoCoord = __webpack_require__(\"WxG6\");\n\nvar fixDiaoyuIsland = __webpack_require__(\"k7nC\");\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ILx8\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"UkNE\");\n\n__webpack_require__(\"D7EH\");\n\n__webpack_require__(\"AKXb\");\n\n/***/ }),\n\n/***/ \"ITiI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;\n\n/***/ }),\n\n/***/ \"IkDM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _treeHelper = __webpack_require__(\"gOx9\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"J+Ut\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"autoComplete.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"JFJR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JIsR\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JMu0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar history = __webpack_require__(\"9Owa\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JNWs\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JRc4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar preprocessor = __webpack_require__(\"GQGX\");\n\n__webpack_require__(\"od06\");\n\n__webpack_require__(\"iEm+\");\n\n__webpack_require__(\"ZuqD\");\n\n__webpack_require__(\"oYIf\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n\n/***/ \"Jd65\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Polyline = __webpack_require__(\"PiQa\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar EffectLine = __webpack_require__(\"uA0k\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"JzYe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SingleAxis = __webpack_require__(\"WK/r\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar each = _util.each;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"KAfT\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar helper = __webpack_require__(\"s1Aj\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n/***/ }),\n\n/***/ \"KGuM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar View = __webpack_require__(\"H4Od\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = __webpack_require__(\"wUOi\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"KjPy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Component = __webpack_require__(\"Y5nL\");\n\n__webpack_require__(\"DHpS\");\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"LBXi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar RoamController = __webpack_require__(\"5Mek\");\n\nvar roamHelper = __webpack_require__(\"YpIy\");\n\nvar _cursorHelper = __webpack_require__(\"NKek\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"LGKB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar Tree = __webpack_require__(\"+jMe\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"LRsb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;\n\n/***/ }),\n\n/***/ \"LbEf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar barPolar = __webpack_require__(\"mLyJ\");\n\n__webpack_require__(\"PBlc\");\n\n__webpack_require__(\"3n/B\");\n\n__webpack_require__(\"1bf2\");\n\n__webpack_require__(\"AKXb\");\n\n__webpack_require__(\"QbUQ\");\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});\n\n/***/ }),\n\n/***/ \"LgWN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"LjPz\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"qSkD\");\n\n__webpack_require__(\"MRvz\");\n\n__webpack_require__(\"BqCv\");\n\n/***/ }),\n\n/***/ \"LzVd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _traversalHelper = __webpack_require__(\"XFat\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = __webpack_require__(\"ERCD\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"M9eA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar zrColor = __webpack_require__(\"DRaW\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"MOpb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphicUtil = __webpack_require__(\"0sHC\");\n\nvar _labelHelper = __webpack_require__(\"RjA7\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar _barGrid = __webpack_require__(\"m/6y\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar prepareCartesian2d = __webpack_require__(\"n/n4\");\n\nvar prepareGeo = __webpack_require__(\"OpfW\");\n\nvar prepareSingleAxis = __webpack_require__(\"8YpK\");\n\nvar preparePolar = __webpack_require__(\"ilox\");\n\nvar prepareCalendar = __webpack_require__(\"RAps\");\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}\n\n/***/ }),\n\n/***/ \"MRvz\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});\n\n/***/ }),\n\n/***/ \"MXTC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar fixClipWithShadow = __webpack_require__(\"dnLe\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  if (smoothMonotone == null) {\n    if (isMono(points, 'x')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n    } else if (isMono(points, 'y')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n    } else {\n      return drawNonMono.apply(this, arguments);\n    }\n  } else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n    return drawMono.apply(this, arguments);\n  } else {\n    return drawNonMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n\n\nfunction isMono(points, smoothMonotone) {\n  if (points.length <= 1) {\n    return true;\n  }\n\n  var dim = smoothMonotone === 'x' ? 0 : 1;\n  var last = points[0][dim];\n  var lastDiff = 0;\n\n  for (var i = 1; i < points.length; ++i) {\n    var diff = points[i][dim] - last;\n\n    if (!isNaN(diff) && !isNaN(lastDiff) && diff !== 0 && lastDiff !== 0 && diff >= 0 !== lastDiff >= 0) {\n      return false;\n    }\n\n    if (!isNaN(diff) && diff !== 0) {\n      lastDiff = diff;\n      last = points[i][dim];\n    }\n  }\n\n  return true;\n}\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n\n/***/ \"Mlni\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar dataFormatMixin = __webpack_require__(\"bBvJ\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Mn6+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"ZtEr\");\n\n__webpack_require__(\"Fkmw\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});\n\n/***/ }),\n\n/***/ \"MsVc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _whiskerBoxCommon = __webpack_require__(\"sK5G\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Mxrs\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"N1UU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n__webpack_require__(\"5vFd\");\n\n__webpack_require__(\"OQAC\");\n\n__webpack_require__(\"m5oG\");\n\nvar _barGrid = __webpack_require__(\"m/6y\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\n__webpack_require__(\"UkNE\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));\n\n/***/ }),\n\n/***/ \"NAKW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _circularLayoutHelper = __webpack_require__(\"LRsb\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"NGRG\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"NKek\":\n/***/ (function(module, exports) {\n\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n\n/***/ \"NUWb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    for (var dataIndex = params.start; dataIndex < params.end; dataIndex++) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;\n\n/***/ }),\n\n/***/ \"NjeB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar axisModelCreator = __webpack_require__(\"eH0a\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);\n\n/***/ }),\n\n/***/ \"O523\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"gLqW\");\n\n__webpack_require__(\"ix3c\");\n\n__webpack_require__(\"+pdh\");\n\nvar treemapVisual = __webpack_require__(\"M9eA\");\n\nvar treemapLayout = __webpack_require__(\"fm2I\");\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);\n\n/***/ }),\n\n/***/ \"OCS9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OQAC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(\"2m1D\");\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OcRu\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar HeatmapLayer = __webpack_require__(\"LgWN\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OlnU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar VisualMapModel = __webpack_require__(\"wH4Y\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OpfW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Oq2I\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"AKXb\");\n\n__webpack_require__(\"7XrG\");\n\n__webpack_require__(\"XAC3\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ \"Osoq\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(\"Y5nL\");\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});\n\n/***/ }),\n\n/***/ \"Ou7x\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar clazzUtil = __webpack_require__(\"BNYN\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar axisPointerModelHelper = __webpack_require__(\"QCrJ\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar throttleUtil = __webpack_require__(\"QD+P\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OvrE\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = __webpack_require__(\"kQD9\");\n\nvar _dataProvider = __webpack_require__(\"5KBG\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = __webpack_require__(\"srbS\");\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OxCu\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"P05t\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;\n\n/***/ }),\n\n/***/ \"P0a5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\nvar globalObj = typeof window === 'undefined' ? global : window;\nvar Uint32Arr = globalObj.Uint32Array || Array;\nvar Float64Arr = globalObj.Float64Array || Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"DuR2\")))\n\n/***/ }),\n\n/***/ \"P7Q7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"P7ry\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"80cc\");\n\n__webpack_require__(\"dp0Z\");\n\n__webpack_require__(\"wLWv\");\n\n__webpack_require__(\"R0U9\");\n\n/***/ }),\n\n/***/ \"PBlc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Polar = __webpack_require__(\"6axr\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = __webpack_require__(\"3yJd\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n__webpack_require__(\"ZRmN\");\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, dim);\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, dim);\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);\n\n/***/ }),\n\n/***/ \"PWa9\":\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"PYc7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\n\n/***/ }),\n\n/***/ \"PdL8\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar MapDraw = __webpack_require__(\"LBXi\");\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"PiQa\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Pmfi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(\"VewU\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar ZImage = __webpack_require__(\"MAom\");\n\nvar ZText = __webpack_require__(\"/86O\");\n\nvar _graphic = __webpack_require__(\"4w1v\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Po+l\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _whiskerBoxCommon = __webpack_require__(\"sK5G\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Pobh\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(\"RYbJ\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Pwgp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Q5xN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(\"VewU\");\n\nvar createElement = _core.createElement;\n\nvar util = __webpack_require__(\"/gxq\");\n\nvar each = util.each;\n\nvar zrLog = __webpack_require__(\"eZxa\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar ZImage = __webpack_require__(\"MAom\");\n\nvar ZText = __webpack_require__(\"/86O\");\n\nvar arrayDiff = __webpack_require__(\"0fQF\");\n\nvar GradientManager = __webpack_require__(\"hZf2\");\n\nvar ClippathManager = __webpack_require__(\"TDz/\");\n\nvar ShadowManager = __webpack_require__(\"SMB/\");\n\nvar _graphic = __webpack_require__(\"4w1v\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"QCrJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ \"QZ7o\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"QbUQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar BaseAxisPointer = __webpack_require__(\"Ou7x\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar viewHelper = __webpack_require__(\"zAPJ\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Qv0P\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Region = __webpack_require__(\"B33o\");\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"R0U9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ \"RAps\":\n/***/ (function(module, exports) {\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"RKzr\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"RTd5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"RjA7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(\"5KBG\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n/***/ }),\n\n/***/ \"S+iL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});\n\n/***/ }),\n\n/***/ \"SMB/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(\"Pmfi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"SZjP\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"SlE6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _helper = __webpack_require__(\"tzpD\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"T6W2\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"TCXJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"TDz/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(\"Pmfi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"TLJB\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"22Bn\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"0038dd08\", content, true, {});\n\n/***/ }),\n\n/***/ \"TTCf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(\"Mlni\");\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"TXKS\":\n/***/ (function(module, exports) {\n\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Tl0V\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.text {\\n  font-size: 14px;\\n}\\n.item {\\n  margin-bottom: 18px;\\n}\\n.clearfix:before,\\n.clearfix:after {\\n  display: table;\\n  content: \\\"\\\";\\n}\\n.clearfix:after {\\n  clear: both\\n}\\n.box-card {\\n  /* width: 480px; */\\n  margin-bottom: 15px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/index.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,gBAAgB;CACjB;AACD;EACE,oBAAoB;CACrB;AACD;;EAEE,eAAe;EACf,YAAY;CACb;AACD;EACE,WAAW;CACZ;AACD;EACE,mBAAmB;EACnB,oBAAoB;CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.text {\\n  font-size: 14px;\\n}\\n.item {\\n  margin-bottom: 18px;\\n}\\n.clearfix:before,\\n.clearfix:after {\\n  display: table;\\n  content: \\\"\\\";\\n}\\n.clearfix:after {\\n  clear: both\\n}\\n.box-card {\\n  /* width: 480px; */\\n  margin-bottom: 15px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"UOrf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"US3d\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar IncrementalDisplayable = __webpack_require__(\"thE4\");\n\nvar lineContain = __webpack_require__(\"u+XU\");\n\nvar quadraticContain = __webpack_require__(\"oBGI\");\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"UeW/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar graphicUtil = __webpack_require__(\"0sHC\");\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\n/***/ }),\n\n/***/ \"UkNE\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\n__webpack_require__(\"5vFd\");\n\n__webpack_require__(\"zz1u\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ \"V6ht\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"27cN\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"2e49aad6\", content, true, {});\n\n/***/ }),\n\n/***/ \"Vb+l\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n__webpack_require__(\"/vN/\");\n\n__webpack_require__(\"1A4n\");\n\nvar createDataSelectAction = __webpack_require__(\"XRkS\");\n\nvar dataColor = __webpack_require__(\"ri8f\");\n\nvar pieLayout = __webpack_require__(\"9Z3y\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n/***/ }),\n\n/***/ \"VewU\":\n/***/ (function(module, exports) {\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n/***/ }),\n\n/***/ \"VmZa\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"6MCj\");\n\nvar _zrender = __webpack_require__(\"hv2j\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(\"0jKn\");\n\nregisterPainter('vml', Painter);\n\n/***/ }),\n\n/***/ \"WK/r\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"WO3U\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomView = __webpack_require__(\"ilLo\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"WbrJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar DataZoomView = __webpack_require__(\"ilLo\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\nvar roams = __webpack_require__(\"E7aA\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Wf6x\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.chart-container[data-v-654b2b9c] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/charts/keyboard.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,mBAAmB;EACnB,YAAY;EACZ,cAAc;CACf\",\"file\":\"keyboard.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-654b2b9c] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"WxG6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XAC3\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar TooltipContent = __webpack_require__(\"aYad\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar findPointFromSeries = __webpack_require__(\"OxCu\");\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar globalListener = __webpack_require__(\"DpwM\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar axisPointerViewHelper = __webpack_require__(\"zAPJ\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XCrL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar brushHelper = __webpack_require__(\"ZJ+T\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XFat\":\n/***/ (function(module, exports) {\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;\n\n/***/ }),\n\n/***/ \"XLwt\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _echarts = __webpack_require__(\"Icdr\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = __webpack_require__(\"iNHu\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\n__webpack_require__(\"+Dgo\");\n\n__webpack_require__(\"4UDB\");\n\n__webpack_require__(\"GbHy\");\n\n__webpack_require__(\"Vb+l\");\n\n__webpack_require__(\"u9yV\");\n\n__webpack_require__(\"rjsW\");\n\n__webpack_require__(\"nUSl\");\n\n__webpack_require__(\"8UWf\");\n\n__webpack_require__(\"O523\");\n\n__webpack_require__(\"1FNb\");\n\n__webpack_require__(\"87tG\");\n\n__webpack_require__(\"5/bM\");\n\n__webpack_require__(\"qbKW\");\n\n__webpack_require__(\"cWq4\");\n\n__webpack_require__(\"AjST\");\n\n__webpack_require__(\"9cSo\");\n\n__webpack_require__(\"k9Bd\");\n\n__webpack_require__(\"zjhG\");\n\n__webpack_require__(\"o0k+\");\n\n__webpack_require__(\"N1UU\");\n\n__webpack_require__(\"7bL3\");\n\n__webpack_require__(\"A6Kt\");\n\n__webpack_require__(\"MOpb\");\n\n__webpack_require__(\"UeW/\");\n\n__webpack_require__(\"ILx8\");\n\n__webpack_require__(\"P7ry\");\n\n__webpack_require__(\"Oq2I\");\n\n__webpack_require__(\"AKXb\");\n\n__webpack_require__(\"LbEf\");\n\n__webpack_require__(\"80zD\");\n\n__webpack_require__(\"FlXs\");\n\n__webpack_require__(\"4V7L\");\n\n__webpack_require__(\"swsf\");\n\n__webpack_require__(\"/99E\");\n\n__webpack_require__(\"miEh\");\n\n__webpack_require__(\"wQkr\");\n\n__webpack_require__(\"tQk0\");\n\n__webpack_require__(\"2tOJ\");\n\n__webpack_require__(\"p1Ck\");\n\n__webpack_require__(\"Mn6+\");\n\n__webpack_require__(\"JRc4\");\n\n__webpack_require__(\"YsUA\");\n\n__webpack_require__(\"VmZa\");\n\n__webpack_require__(\"jLnL\");\n\n/***/ }),\n\n/***/ \"XRkS\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XhgW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(\"3h1/\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XiVP\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar VisualMapView = __webpack_require__(\"zO13\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar helper = __webpack_require__(\"E8YU\");\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Y3kp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar EffectSymbol = __webpack_require__(\"GnMB\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar pointsLayout = __webpack_require__(\"1Nix\");\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"YbE0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"YpIy\":\n/***/ (function(module, exports) {\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;\n\n/***/ }),\n\n/***/ \"YqdL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Axis = __webpack_require__(\"2HcM\");\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"YsUA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"auIi\");\n\n__webpack_require__(\"+PQg\");\n\n__webpack_require__(\"AbHi\");\n\n__webpack_require__(\"RTd5\");\n\n__webpack_require__(\"u9lB\");\n\n__webpack_require__(\"DknX\");\n\n__webpack_require__(\"JMu0\");\n\n/***/ }),\n\n/***/ \"Z2m1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ZJ+T\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar _cursorHelper = __webpack_require__(\"NKek\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = __webpack_require__(\"0sHC\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n/***/ }),\n\n/***/ \"ZRmN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"NjeB\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ZtEr\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(\"Mlni\");\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ZuqD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar TimelineModel = __webpack_require__(\"F8oC\");\n\nvar dataFormatMixin = __webpack_require__(\"bBvJ\");\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"a/4j\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"J+Ut\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"286b58dc\", content, true, {});\n\n/***/ }),\n\n/***/ \"a1DW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _whiskerBoxCommon = __webpack_require__(\"sK5G\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"aYad\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar zrColor = __webpack_require__(\"DRaW\");\n\nvar eventUtil = __webpack_require__(\"UAiw\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"akwy\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"auIi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ay5B\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ \"b/SY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\necharts.registerProcessor({\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  isOverallFilter: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});\n\n/***/ }),\n\n/***/ \"bzOU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar vector = __webpack_require__(\"C7PF\");\n\nvar symbolUtil = __webpack_require__(\"kK7q\");\n\nvar LinePath = __webpack_require__(\"sOJ4\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    normalText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (normalText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      normalText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cI6i\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n/***/ }),\n\n/***/ \"cN90\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cO/Q\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar SymbolClz = __webpack_require__(\"1bHA\");\n\nvar lineAnimationDiff = __webpack_require__(\"SlE6\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar _poly = __webpack_require__(\"MXTC\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar _helper = __webpack_require__(\"tzpD\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: createClipShape(coordSys, false, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      var coordSysClipShape = createClipShape(coordSys, false, seriesModel); // Update clipPath\n\n      lineGroup.setClipPath(coordSysClipShape); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: coordSysClipShape\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cU6c\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cWq4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"+u5N\");\n\n__webpack_require__(\"Cuh7\");\n\nvar sankeyLayout = __webpack_require__(\"wTOJ\");\n\nvar sankeyVisual = __webpack_require__(\"Mxrs\");\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);\n\n/***/ }),\n\n/***/ \"ct4P\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cuL/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(\"Y5nL\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n/***/ }),\n\n/***/ \"d1IL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar Graph = __webpack_require__(\"1uRk\");\n\nvar linkList = __webpack_require__(\"NGRG\");\n\nvar createDimensions = __webpack_require__(\"hcq/\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: (coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value'])\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dCQY\":\n/***/ (function(module, exports) {\n\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n/***/ }),\n\n/***/ \"dZZy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar SymbolClz = __webpack_require__(\"1bHA\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar isObject = _util.isObject;\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will\n  // cut part of the symbol element shape.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dp0Z\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(\"6JAQ\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dtW/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = __webpack_require__(\"QCrJ\");\n\nvar findPointFromSeries = __webpack_require__(\"OxCu\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dzlV\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _labelHelper = __webpack_require__(\"RjA7\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n/***/ }),\n\n/***/ \"e+YR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;\n\n/***/ }),\n\n/***/ \"eH0a\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar axisDefault = __webpack_require__(\"s/lY\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = __webpack_require__(\"iGPw\");\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"eHPu\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _helper = __webpack_require__(\"dzlV\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar barItemStyle = __webpack_require__(\"Pobh\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"eQYg\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ecfp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar axisModelCreator = __webpack_require__(\"eH0a\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"envY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(\"sJ4e\");\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"f0h+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar commonLayout = __webpack_require__(\"LzVd\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"fAbo\":\n/***/ (function(module, exports) {\n\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"fm2I\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar helper = __webpack_require__(\"gOx9\");\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"g8A/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"gLqW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar Tree = __webpack_require__(\"+jMe\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = __webpack_require__(\"gOx9\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"gOx9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;\n\n/***/ }),\n\n/***/ \"gZam\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar LinearGradient = __webpack_require__(\"Gw4f\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar VisualMapView = __webpack_require__(\"zO13\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\nvar helper = __webpack_require__(\"E8YU\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ghha\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Single = __webpack_require__(\"JzYe\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});\n\n/***/ }),\n\n/***/ \"guZJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar symbolUtil = __webpack_require__(\"kK7q\");\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"h4VJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"h6Uy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"hG1p\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"hZf2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(\"Pmfi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar zrLog = __webpack_require__(\"eZxa\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"hdbT\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BrushController = __webpack_require__(\"oDOe\");\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"i6Ks\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"iEm+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});\n\n/***/ }),\n\n/***/ \"iZVd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _roamHelper = __webpack_require__(\"ii60\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});\n\n/***/ }),\n\n/***/ \"icur\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar visualSolution = __webpack_require__(\"NUWb\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ii60\":\n/***/ (function(module, exports) {\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;\n\n/***/ }),\n\n/***/ \"ij2A\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"add.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"ilLo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(\"Pgdp\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ilox\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ix3c\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar helper = __webpack_require__(\"gOx9\");\n\nvar Breadcrumb = __webpack_require__(\"IkDM\");\n\nvar RoamController = __webpack_require__(\"5Mek\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar animationUtil = __webpack_require__(\"e+YR\");\n\nvar makeStyleMapper = __webpack_require__(\"RYbJ\");\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"jJrn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar IndicatorAxis = __webpack_require__(\"JFJR\");\n\nvar IntervalScale = __webpack_require__(\"tBuv\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar _axisHelper = __webpack_require__(\"3yJd\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"jLnL\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"4w1v\");\n\nvar _zrender = __webpack_require__(\"hv2j\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(\"Q5xN\");\n\nregisterPainter('svg', Painter);\n\n/***/ }),\n\n/***/ \"jMTz\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"jpt2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MapDraw = __webpack_require__(\"LBXi\");\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"k7nC\":\n/***/ (function(module, exports) {\n\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"k9Bd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"P7Q7\");\n\n__webpack_require__(\"Y3kp\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar layoutPoints = __webpack_require__(\"1Nix\");\n\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));\n\n/***/ }),\n\n/***/ \"kQD9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"koEO\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ \"l2wH\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"cuL/\");\n\n__webpack_require__(\"sJ4e\");\n\n__webpack_require__(\"ilLo\");\n\n__webpack_require__(\"r9WW\");\n\n__webpack_require__(\"WO3U\");\n\n__webpack_require__(\"b/SY\");\n\n__webpack_require__(\"KAfT\");\n\n/***/ }),\n\n/***/ \"l4Op\":\n/***/ (function(module, exports) {\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"lVde\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"lwXq\":\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"m5oG\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = __webpack_require__(\"dzlV\");\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"mLyJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = __webpack_require__(\"qVJQ\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"mcsk\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n/***/ }),\n\n/***/ \"miEh\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n\n/***/ \"mlpt\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar VisualMapModel = __webpack_require__(\"wH4Y\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar visualDefault = __webpack_require__(\"B123\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"n/n4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"n3NR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar visualSolution = __webpack_require__(\"NUWb\");\n\nvar selector = __webpack_require__(\"zlsk\");\n\nvar throttleUtil = __webpack_require__(\"QD+P\");\n\nvar BrushTargetManager = __webpack_require__(\"XCrL\");\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\n/***/ }),\n\n/***/ \"nQkE\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"nUSl\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"OvrE\");\n\n__webpack_require__(\"PdL8\");\n\n__webpack_require__(\"FvdC\");\n\n__webpack_require__(\"srbS\");\n\nvar mapSymbolLayout = __webpack_require__(\"QZ7o\");\n\nvar mapVisual = __webpack_require__(\"2W4A\");\n\nvar mapDataStatistic = __webpack_require__(\"vIe4\");\n\nvar backwardCompat = __webpack_require__(\"Z2m1\");\n\nvar createDataSelectAction = __webpack_require__(\"XRkS\");\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);\n\n/***/ }),\n\n/***/ \"nV/6\":\n/***/ (function(module, exports) {\n\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"nW6X\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"Tl0V\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"b3c19b72\", content, true, {});\n\n/***/ }),\n\n/***/ \"o0k+\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"cN90\");\n\n__webpack_require__(\"OcRu\");\n\n/***/ }),\n\n/***/ \"oDOe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Eventful = __webpack_require__(\"qjvV\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar interactionMutex = __webpack_require__(\"mcsk\");\n\nvar DataDiffer = __webpack_require__(\"1Hui\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"oYIf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar TimelineView = __webpack_require__(\"Gp87\");\n\nvar TimelineAxis = __webpack_require__(\"Pwgp\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"od06\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(\"Y5nL\");\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});\n\n/***/ }),\n\n/***/ \"og9+\":\n/***/ (function(module, exports) {\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"oqQy\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar singleAxisHelper = __webpack_require__(\"ay5B\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"orv6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(\"Mlni\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"p1Ck\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"TTCf\");\n\n__webpack_require__(\"ARaV\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});\n\n/***/ }),\n\n/***/ \"pSwa\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"pmYM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListFromArray = __webpack_require__(\"ao1T\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n\n    },\n    progressive: null\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"pzOI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _forceHelper = __webpack_require__(\"ITiI\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = __webpack_require__(\"rbn0\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = __webpack_require__(\"LRsb\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"qBny\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SeriesModel = __webpack_require__(\"EJsE\");\n\nvar Tree = __webpack_require__(\"+jMe\");\n\nvar _treeHelper = __webpack_require__(\"gOx9\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"qSkD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Parallel = __webpack_require__(\"sYrQ\");\n\nvar CoordinateSystem = __webpack_require__(\"rctg\");\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});\n\n/***/ }),\n\n/***/ \"qbKW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"FlXs\");\n\n__webpack_require__(\"+bDV\");\n\n__webpack_require__(\"2Ow2\");\n\nvar parallelVisual = __webpack_require__(\"CWSg\");\n\necharts.registerVisual(parallelVisual);\n\n/***/ }),\n\n/***/ \"r9WW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(\"sJ4e\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"rFvp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"rbn0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\n/***/ }),\n\n/***/ \"ri8f\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar createHashMap = _util.createHashMap;\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"rjiA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"ij2A\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"af7a685a\", content, true, {});\n\n/***/ }),\n\n/***/ \"rjsW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"997V\");\n\n__webpack_require__(\"Gevp\");\n\n__webpack_require__(\"guZJ\");\n\nvar dataColor = __webpack_require__(\"ri8f\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar radarLayout = __webpack_require__(\"lwXq\");\n\nvar dataFilter = __webpack_require__(\"l4Op\");\n\nvar backwardCompat = __webpack_require__(\"6HcI\");\n\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);\n\n/***/ }),\n\n/***/ \"rwkR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar axisModelCreator = __webpack_require__(\"eH0a\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"s/lY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"s1Aj\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n/***/ }),\n\n/***/ \"s48c\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\nvar AxisView = __webpack_require__(\"43ae\");\n\nvar cartesianAxisHelper = __webpack_require__(\"koEO\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel) && i < ticksCoords.length - 1) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ \"sJ4e\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar helper = __webpack_require__(\"s1Aj\");\n\nvar AxisProxy = __webpack_require__(\"GWV8\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"sK5G\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListSimply = __webpack_require__(\"/gZK\");\n\nvar WhiskerBoxDraw = __webpack_require__(\"CiLi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _dimensionHelper = __webpack_require__(\"mvCM\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalPrepareUpdate(seriesModel, ecModel, api);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalUpdate(params, seriesModel, ecModel, api);\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;\n\n/***/ }),\n\n/***/ \"sOJ4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"sTIA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PointerPath = __webpack_require__(\"hG1p\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar ChartView = __webpack_require__(\"Ylhr\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"sYrQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar ParallelAxis = __webpack_require__(\"/BOW\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar sliderMove = __webpack_require__(\"og9+\");\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var dataDimensions = zrUtil.map(dimensions, function (axisDim) {\n      return data.mapDimension(axisDim);\n    });\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dataDimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"srbS\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Geo = __webpack_require__(\"HcG6\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"swsf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar preprocessor = __webpack_require__(\"OCS9\");\n\n__webpack_require__(\"n3NR\");\n\n__webpack_require__(\"icur\");\n\n__webpack_require__(\"hdbT\");\n\n__webpack_require__(\"S+iL\");\n\n__webpack_require__(\"0pMY\");\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n\n/***/ \"tQk0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"4SW2\");\n\n__webpack_require__(\"0O1a\");\n\n/***/ }),\n\n/***/ \"tzpD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataStackHelper = __webpack_require__(\"qVJQ\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar map = _util.map;\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var stacked = isDimensionStacked(data, valueDim, baseDim);\n  var dataDimsForPoint = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  return {\n    dataDimsForPoint: dataDimsForPoint,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;\n\n/***/ }),\n\n/***/ \"u9lB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar eventTool = __webpack_require__(\"UAiw\");\n\nvar lang = __webpack_require__(\"FIAY\");\n\nvar featureManager = __webpack_require__(\"dCQY\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"u9yV\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"pmYM\");\n\n__webpack_require__(\"uNEE\");\n\nvar visualSymbol = __webpack_require__(\"AjK0\");\n\nvar layoutPoints = __webpack_require__(\"1Nix\");\n\n__webpack_require__(\"UkNE\");\n\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });\n\n/***/ }),\n\n/***/ \"uA0k\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Line = __webpack_require__(\"bzOU\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar curveUtil = __webpack_require__(\"AAi1\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"uNEE\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar LargeSymbolDraw = __webpack_require__(\"uv9t\");\n\nvar pointsLayout = __webpack_require__(\"1Nix\");\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});\n\n/***/ }),\n\n/***/ \"uv9t\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = __webpack_require__(\"thE4\");\n\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"v/cD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ \"vEM8\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar SymbolDraw = __webpack_require__(\"dZZy\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar markerHelper = __webpack_require__(\"vx1D\");\n\nvar MarkerView = __webpack_require__(\"SZjP\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"vIe4\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"veIh\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar commonLayout = __webpack_require__(\"LzVd\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"vjPX\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(\"kK7q\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(\"dOVI\");\n\nvar _vector = __webpack_require__(\"C7PF\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"vx1D\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar _dataStackHelper = __webpack_require__(\"qVJQ\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim, otherDataDim);\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;\n\n/***/ }),\n\n/***/ \"vxwL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _number = __webpack_require__(\"wWR3\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = __webpack_require__(\"0sHC\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    });\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"w2H/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar visualSolution = __webpack_require__(\"NUWb\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (!visualMapModel.isTargetSeries(seriesModel)) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}\n\n/***/ }),\n\n/***/ \"w6Zv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"wH4Y\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar visualDefault = __webpack_require__(\"B123\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar visualSolution = __webpack_require__(\"NUWb\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar numberUtil = __webpack_require__(\"wWR3\");\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"wLWv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar layoutUtil = __webpack_require__(\"1Xuh\");\n\nvar LegendView = __webpack_require__(\"8RN9\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"wQkr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"cuL/\");\n\n__webpack_require__(\"sJ4e\");\n\n__webpack_require__(\"ilLo\");\n\n__webpack_require__(\"envY\");\n\n__webpack_require__(\"5Hn/\");\n\n__webpack_require__(\"8Mpj\");\n\n__webpack_require__(\"WbrJ\");\n\n__webpack_require__(\"b/SY\");\n\n__webpack_require__(\"KAfT\");\n\n/***/ }),\n\n/***/ \"wTOJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar nest = __webpack_require__(\"P05t\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"whrq\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar modelUtil = __webpack_require__(\"vXqC\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar selectableMixin = __webpack_require__(\"kQD9\");\n\nvar geoCreator = __webpack_require__(\"srbS\");\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"xLO3\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar axisDefault = __webpack_require__(\"s/lY\");\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar axisModelCommonMixin = __webpack_require__(\"2uoh\");\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"yEXw\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar ComponentModel = __webpack_require__(\"Y5nL\");\n\nvar _layout = __webpack_require__(\"1Xuh\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"z+uQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"4Nz2\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar LineDraw = __webpack_require__(\"6n1D\");\n\nvar EffectLine = __webpack_require__(\"uA0k\");\n\nvar Line = __webpack_require__(\"bzOU\");\n\nvar Polyline = __webpack_require__(\"PiQa\");\n\nvar EffectPolyline = __webpack_require__(\"Jd65\");\n\nvar LargeLineDraw = __webpack_require__(\"US3d\");\n\nvar linesLayout = __webpack_require__(\"4A6G\");\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    if (!this._finished || seriesModel.pipelineContext.large) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"z81E\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar List = __webpack_require__(\"Rfu2\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar _model = __webpack_require__(\"vXqC\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = __webpack_require__(\"Pdtn\");\n\nvar _format = __webpack_require__(\"HHfb\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = __webpack_require__(\"d1IL\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"zAPJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar axisHelper = __webpack_require__(\"3yJd\");\n\nvar AxisBuilder = __webpack_require__(\"vjPX\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ \"zO13\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar graphic = __webpack_require__(\"0sHC\");\n\nvar formatUtil = __webpack_require__(\"HHfb\");\n\nvar layout = __webpack_require__(\"1Xuh\");\n\nvar VisualMapping = __webpack_require__(\"HGSA\");\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"zjhG\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(\"Icdr\");\n\n__webpack_require__(\"P0a5\");\n\n__webpack_require__(\"z+uQ\");\n\nvar linesLayout = __webpack_require__(\"4A6G\");\n\nvar linesVisual = __webpack_require__(\"nV/6\");\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);\n\n/***/ }),\n\n/***/ \"zlsk\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar polygonContain = __webpack_require__(\"N1qP\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"zz1u\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"ecfp\");\n\n__webpack_require__(\"s48c\");\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.d93abcff8a26a46cccda.js","require(\"./dataset/DatasetModel\");\n\nvar echarts = require(\"../echarts\");\n\necharts.extendComponentView({\n  type: 'dataset'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataset.js\n// module id = +Dgo\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxView.js\n// module id = +PQg\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    // Anication is forbiden in progressive data mode.\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel/ParallelSeries.js\n// module id = +bDV\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../axis/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js\n// module id = +bS+\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Tree.js\n// module id = +jMe\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/treemapAction.js\n// module id = +pdh\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/SankeySeries.js\n// module id = +u5N\n// module chunks = 0","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/calendar.js\n// module id = /99E\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/ParallelAxis.js\n// module id = /BOW\n// module chunks = 0","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListSimply.js\n// module id = /gZK\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = /vN/\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.getCategories();\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AngleAxisView.js\n// module id = 0BNI\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/calendar/Calendar.js\n// module id = 0BOU\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMapPiecewise.js\n// module id = 0O1a\n// module chunks = 0","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/arrayDiff2.js\n// module id = 0fQF\n// module chunks = 0","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/Painter.js\n// module id = 0jKn\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/GraphView.js\n// module id = 0nGg\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Brush.js\n// module id = 0pMY\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 1A4n\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph.js\n// module id = 1FNb\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      if (isDimensionStacked(data, dims[0], dims[1])) {\n        dims[0] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      if (isDimensionStacked(data, dims[1], dims[0])) {\n        dims[1] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/points.js\n// module id = 1Nix\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/CandlestickView.js\n// module id = 1VkX\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Symbol.js\n// module id = 1bHA\n// module chunks = 0","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/radiusAxis.js\n// module id = 1bf2\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Graph.js\n// module id = 1uRk\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.chart-container[data-v-0af8515f] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/charts/mixChart.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,mBAAmB;EACnB,YAAY;EACZ,cAAc;CACf\",\"file\":\"mixChart.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-0af8515f] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0af8515f\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/charts/mixChart.vue\n// module id = 22Bn\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.chart-container[data-v-3abedb29] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/charts/line.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,mBAAmB;EACnB,YAAY;EACZ,cAAc;CACf\",\"file\":\"line.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-3abedb29] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3abedb29\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/charts/line.vue\n// module id = 27cN\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel/ParallelView.js\n// module id = 2Ow2\n// module chunks = 0","function _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/mapVisual.js\n// module id = 2W4A\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 2m1D\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/markPoint.js\n// module id = 2tOJ\n// module chunks = 0","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/angleAxis.js\n// module id = 3n/B\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 43ae\n// module chunks = 0","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 2);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/linesLayout.js\n// module id = 4A6G\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/simpleLayout.js\n// module id = 4RQY\n// module chunks = 0","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js\n// module id = 4SGL\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMapContinuous.js\n// module id = 4SW2\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line.js\n// module id = 4UDB\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\necharts.extendComponentView({\n  type: 'single'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/singleAxis.js\n// module id = 4V7L\n// module chunks = 0","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation * 180 / Math.PI;\n    attr(textSvgEl, 'transform', 'rotate(' + rotate + ',' + x + ',' + y + ')');\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/graphic.js\n// module id = 4w1v\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel.js\n// module id = 5/bM\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 56C7\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js\n// module id = 5Hn/\n// module chunks = 0","var borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js\n// module id = 5KWC\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/RoamController.js\n// module id = 5Mek\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 5dr1\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Grid.js\n// module id = 5vFd\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/backwardCompat.js\n// module id = 6HcI\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js\n// module id = 6HoR\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 6JAQ\n// module chunks = 0","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/graphic.js\n// module id = 6MCj\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/AngleAxis.js\n// module id = 6UfY\n// module chunks = 0","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/Polar.js\n// module id = 6axr\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 6f6q\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LineDraw.js\n// module id = 6n1D\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 7XrG\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver.js\n// module id = 7bL3\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 80cc\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/geo.js\n// module id = 80zD\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar DatasetModel = echarts.extendComponentModel({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nvar _default = DatasetModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataset/DatasetModel.js\n// module id = 82Fv\n// module chunks = 0","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge.js\n// module id = 87tG\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      textAlign: 'right',\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js\n// module id = 8DFW\n// module chunks = 0","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js\n// module id = 8Mpj\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 8RN9\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar orthogonalLayout = require(\"./tree/orthogonalLayout\");\n\nvar radialLayout = require(\"./tree/radialLayout\");\n\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree.js\n// module id = 8UWf\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/prepareCustom.js\n// module id = 8YpK\n// module chunks = 0","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/radar.js\n// module id = 997V\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/history.js\n// module id = 9Owa\n// module chunks = 0","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 9Z3y\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick.js\n// module id = 9cSo\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-654b2b9c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./keyboard.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"cab4e9f6\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-654b2b9c\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/charts/keyboard.vue\n// module id = A+A9\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst.js\n// module id = A6Kt\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = AKXb\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkLineView.js\n// module id = ARaV\n// module chunks = 0","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = AbHi\n// module chunks = 0","function _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/symbol.js\n// module id = AjK0\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot.js\n// module id = AjST\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/visualDefault.js\n// module id = B123\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/ParallelAxisView.js\n// module id = BqCv\n// module chunks = 0","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/GridModel.js\n// module id = BuI2\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/sunburstAction.js\n// module id = C6b9\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/TreeView.js\n// module id = CUwD\n// module chunks = 0","var opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel/parallelVisual.js\n// module id = CWSg\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater; // There is no old data only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!this._data) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n\nwhiskerBoxDrawProto.incrementalPrepareUpdate = function (seriesModel, ecModel, api) {\n  this.group.removeAll();\n  this._data = null;\n};\n\nwhiskerBoxDrawProto.incrementalUpdate = function (params, seriesModel, ecModel, api) {\n  var data = seriesModel.getData();\n\n  for (var idx = params.start; idx < params.end; idx++) {\n    var symbolEl = new WhiskerBox(data, idx, this.styleUpdater, true);\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/WhiskerBoxDraw.js\n// module id = CiLi\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/SankeyView.js\n// module id = Cuh7\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = D7EH\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/AxisModel.js\n// module id = DHpS\n// module chunks = 0","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BarSeries.js\n// module id = DPh+\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/preprocessor.js\n// module id = DZTl\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = DknX\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = virtualRoot.piece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (virtualRoot.piece) {\n          // Update\n          virtualRoot.piece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          virtualRoot.piece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(virtualRoot.piece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        virtualRoot.piece.on('click', event);\n      } else if (virtualRoot.piece) {\n        // Remove\n        group.remove(virtualRoot.piece);\n        virtualRoot.piece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/SunburstView.js\n// module id = DnWC\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = DpwM\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/roams.js\n// module id = E7aA\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/helper.js\n// module id = E8YU\n// module chunks = 0","var layout = require(\"../../util/layout\");\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/layoutHelper.js\n// module id = ERCD\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/TimelineModel.js\n// module id = F8oC\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-68737547\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./add.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./add.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./add.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-68737547\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./add.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-68737547\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/add.vue\n// module id = null\n// module chunks = ","/**\r\n * Created by jiachenpan on 16/11/18.\r\n */\r\n\r\nexport function parseTime(time, cFormat) {\r\n  if (arguments.length === 0) {\r\n    return null\r\n  }\r\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\r\n  let date\r\n  if (typeof time === 'object') {\r\n    date = time\r\n  } else {\r\n    if (('' + time).length === 10) time = parseInt(time) * 1000\r\n    date = new Date(time)\r\n  }\r\n  const formatObj = {\r\n    y: date.getFullYear(),\r\n    m: date.getMonth() + 1,\r\n    d: date.getDate(),\r\n    h: date.getHours(),\r\n    i: date.getMinutes(),\r\n    s: date.getSeconds(),\r\n    a: date.getDay()\r\n  }\r\n  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\r\n    let value = formatObj[key]\r\n    if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1]\r\n    if (result.length > 0 && value < 10) {\r\n      value = '0' + value\r\n    }\r\n    return value || 0\r\n  })\r\n  return time_str\r\n}\r\n\r\nexport function formatTime(time, option) {\r\n  time = +time * 1000\r\n  const d = new Date(time)\r\n  const now = Date.now()\r\n\r\n  const diff = (now - d) / 1000\r\n\r\n  if (diff < 30) {\r\n    return '刚刚'\r\n  } else if (diff < 3600) { // less 1 hour\r\n    return Math.ceil(diff / 60) + '分钟前'\r\n  } else if (diff < 3600 * 24) {\r\n    return Math.ceil(diff / 3600) + '小时前'\r\n  } else if (diff < 3600 * 24 * 2) {\r\n    return '1天前'\r\n  }\r\n  if (option) {\r\n    return parseTime(time, option)\r\n  } else {\r\n    return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分'\r\n  }\r\n}\r\n\r\n// 格式化时间\r\nexport function getQueryObject(url) {\r\n  url = url == null ? window.location.href : url\r\n  const search = url.substring(url.lastIndexOf('?') + 1)\r\n  const obj = {}\r\n  const reg = /([^?&=]+)=([^?&=]*)/g\r\n  search.replace(reg, (rs, $1, $2) => {\r\n    const name = decodeURIComponent($1)\r\n    let val = decodeURIComponent($2)\r\n    val = String(val)\r\n    obj[name] = val\r\n    return rs\r\n  })\r\n  return obj\r\n}\r\n\r\n/**\r\n *get getByteLen\r\n * @param {Sting} val input value\r\n * @returns {number} output value\r\n */\r\nexport function getByteLen(val) {\r\n  let len = 0\r\n  for (let i = 0; i < val.length; i++) {\r\n    if (val[i].match(/[^\\x00-\\xff]/ig) != null) {\r\n      len += 1\r\n    } else { len += 0.5 }\r\n  }\r\n  return Math.floor(len)\r\n}\r\n\r\nexport function cleanArray(actual) {\r\n  const newArray = []\r\n  for (let i = 0; i < actual.length; i++) {\r\n    if (actual[i]) {\r\n      newArray.push(actual[i])\r\n    }\r\n  }\r\n  return newArray\r\n}\r\n\r\nexport function param(json) {\r\n  if (!json) return ''\r\n  return cleanArray(Object.keys(json).map(key => {\r\n    if (json[key] === undefined) return ''\r\n    return encodeURIComponent(key) + '=' +\r\n            encodeURIComponent(json[key])\r\n  })).join('&')\r\n}\r\n\r\nexport function param2Obj(url) {\r\n  const search = url.split('?')[1]\r\n  if (!search) {\r\n    return {}\r\n  }\r\n  return JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}')\r\n}\r\n\r\nexport function html2Text(val) {\r\n  const div = document.createElement('div')\r\n  div.innerHTML = val\r\n  return div.textContent || div.innerText\r\n}\r\n\r\nexport function objectMerge(target, source) {\r\n  /* Merges two  objects,\r\n     giving the last one precedence */\r\n\r\n  if (typeof target !== 'object') {\r\n    target = {}\r\n  }\r\n  if (Array.isArray(source)) {\r\n    return source.slice()\r\n  }\r\n  Object.keys(source).forEach((property) => {\r\n    const sourceProperty = source[property]\r\n    if (typeof sourceProperty === 'object') {\r\n      target[property] = objectMerge(target[property], sourceProperty)\r\n    } else {\r\n      target[property] = sourceProperty\r\n    }\r\n  })\r\n  return target\r\n}\r\n\r\nexport function scrollTo(element, to, duration) {\r\n  if (duration <= 0) return\r\n  const difference = to - element.scrollTop\r\n  const perTick = difference / duration * 10\r\n  setTimeout(() => {\r\n    console.log(new Date())\r\n    element.scrollTop = element.scrollTop + perTick\r\n    if (element.scrollTop === to) return\r\n    scrollTo(element, to, duration - 10)\r\n  }, 10)\r\n}\r\n\r\nexport function toggleClass(element, className) {\r\n  if (!element || !className) {\r\n    return\r\n  }\r\n  let classString = element.className\r\n  const nameIndex = classString.indexOf(className)\r\n  if (nameIndex === -1) {\r\n    classString += '' + className\r\n  } else {\r\n    classString = classString.substr(0, nameIndex) + classString.substr(nameIndex + className.length)\r\n  }\r\n  element.className = classString\r\n}\r\n\r\nexport const pickerOptions = [\r\n  {\r\n    text: '今天',\r\n    onClick(picker) {\r\n      const end = new Date()\r\n      const start = new Date(new Date().toDateString())\r\n      end.setTime(start.getTime())\r\n      picker.$emit('pick', [start, end])\r\n    }\r\n  }, {\r\n    text: '最近一周',\r\n    onClick(picker) {\r\n      const end = new Date(new Date().toDateString())\r\n      const start = new Date()\r\n      start.setTime(end.getTime() - 3600 * 1000 * 24 * 7)\r\n      picker.$emit('pick', [start, end])\r\n    }\r\n  }, {\r\n    text: '最近一个月',\r\n    onClick(picker) {\r\n      const end = new Date(new Date().toDateString())\r\n      const start = new Date()\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n      picker.$emit('pick', [start, end])\r\n    }\r\n  }, {\r\n    text: '最近三个月',\r\n    onClick(picker) {\r\n      const end = new Date(new Date().toDateString())\r\n      const start = new Date()\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n      picker.$emit('pick', [start, end])\r\n    }\r\n  }]\r\n\r\nexport function getTime(type) {\r\n  if (type === 'start') {\r\n    return new Date().getTime() - 3600 * 1000 * 24 * 90\r\n  } else {\r\n    return new Date(new Date().toDateString())\r\n  }\r\n}\r\n\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout, args, context, timestamp, result\r\n\r\n  const later = function() {\r\n    // 据上一次触发时间间隔\r\n    const last = +new Date() - timestamp\r\n\r\n    // 上次被包装函数被调用时间间隔last小于设定时间间隔wait\r\n    if (last < wait && last > 0) {\r\n      timeout = setTimeout(later, wait - last)\r\n    } else {\r\n      timeout = null\r\n      // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\r\n      if (!immediate) {\r\n        result = func.apply(context, args)\r\n        if (!timeout) context = args = null\r\n      }\r\n    }\r\n  }\r\n\r\n  return function(...args) {\r\n    context = this\r\n    timestamp = +new Date()\r\n    const callNow = immediate && !timeout\r\n    // 如果延时不存在，重新设定延时\r\n    if (!timeout) timeout = setTimeout(later, wait)\r\n    if (callNow) {\r\n      result = func.apply(context, args)\r\n      context = args = null\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nexport function deepClone(source) {\r\n  if (!source && typeof source !== 'object') {\r\n    throw new Error('error arguments', 'shallowClone')\r\n  }\r\n  const targetObj = source.constructor === Array ? [] : {}\r\n  Object.keys(source).forEach((keys) => {\r\n    if (source[keys] && typeof source[keys] === 'object') {\r\n      targetObj[keys] = source[keys].constructor === Array ? [] : {}\r\n      targetObj[keys] = deepClone(source[keys])\r\n    } else {\r\n      targetObj[keys] = source[keys]\r\n    }\r\n  })\r\n  return targetObj\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-654b2b9c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./keyboard.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./keyboard.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./keyboard.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-654b2b9c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./keyboard.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-654b2b9c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/charts/keyboard.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3abedb29\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./line.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./line.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./line.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3abedb29\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./line.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3abedb29\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/charts/line.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0af8515f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./mixChart.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./mixChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./mixChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0af8515f\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./mixChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0af8515f\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/charts/mixChart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-07498730\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./autoComplete.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./autoComplete.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./autoComplete.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-07498730\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./autoComplete.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-07498730\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/autoComplete.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-02525800\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-02525800\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/index.vue\n// module id = null\n// module chunks = ","<!-- component:add -->\n<template>\n  <div class=''>\n    <el-input-number type=\"number\" size=\"mini\" controls-position=\"right\" v-model=\"a\"></el-input-number>\n    +\n    <el-input-number type=\"number\" size=\"mini\" controls-position=\"right\" v-model=\"b\"></el-input-number>\n    +\n    <el-input-number type=\"number\" size=\"mini\" controls-position=\"right\" v-model=\"c\"></el-input-number>\n    <div>\n      <p>\n        总数:\n        <span>{{ total }}</span>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: '',\n\n  components: {},\n\n  props: {},\n\n  data () {\n    return {\n      a: 0,\n      b: 0,\n      c: 0\n    }\n  },\n\n  computed: {\n    total () {\n      return this.a + this.b + this.c\n    }\n  },\n\n  watch: {\n  },\n\n  created () {},\n\n  mounted () {},\n\n  methods: {}\n}\n</script>\n\n<style lang='scss' scoped>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/home/add.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('el-input-number',{attrs:{\"type\":\"number\",\"size\":\"mini\",\"controls-position\":\"right\"},model:{value:(_vm.a),callback:function ($$v) {_vm.a=$$v},expression:\"a\"}}),_vm._v(\"\\n  +\\n  \"),_c('el-input-number',{attrs:{\"type\":\"number\",\"size\":\"mini\",\"controls-position\":\"right\"},model:{value:(_vm.b),callback:function ($$v) {_vm.b=$$v},expression:\"b\"}}),_vm._v(\"\\n  +\\n  \"),_c('el-input-number',{attrs:{\"type\":\"number\",\"size\":\"mini\",\"controls-position\":\"right\"},model:{value:(_vm.c),callback:function ($$v) {_vm.c=$$v},expression:\"c\"}}),_vm._v(\" \"),_c('div',[_c('p',[_vm._v(\"\\n      总数:\\n      \"),_c('span',[_vm._v(_vm._s(_vm.total))])])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-68737547\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/add.vue\n// module id = null\n// module chunks = ","import { debounce } from '@/utils'\n\nexport default {\n  mounted() {\n    this.__resizeHanlder = debounce(() => {\n      if (this.chart) {\n        this.chart.resize()\n      }\n    }, 100)\n    window.addEventListener('resize', this.__resizeHanlder)\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.__resizeHanlder)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Charts/mixins/resize.js","<template>\r\n  <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  mixins: [resize],\r\n  props: {\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    id: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '200px'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '200px'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(document.getElementById(this.id))\r\n\r\n      const xAxisData = []\r\n      const data = []\r\n      const data2 = []\r\n      for (let i = 0; i < 50; i++) {\r\n        xAxisData.push(i)\r\n        data.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5)\r\n        data2.push((Math.sin(i / 5) * (i / 5 + 10) + i / 6) * 3)\r\n      }\r\n      this.chart.setOption(\r\n        {\r\n          backgroundColor: '#08263a',\r\n          xAxis: [{\r\n            show: false,\r\n            data: xAxisData\r\n          }, {\r\n            show: false,\r\n            data: xAxisData\r\n          }],\r\n          visualMap: {\r\n            show: false,\r\n            min: 0,\r\n            max: 50,\r\n            dimension: 0,\r\n            inRange: {\r\n              color: ['#4a657a', '#308e92', '#b1cfa5', '#f5d69f', '#f5898b', '#ef5055']\r\n            }\r\n          },\r\n          yAxis: {\r\n            axisLine: {\r\n              show: false\r\n            },\r\n            axisLabel: {\r\n              textStyle: {\r\n                color: '#4a657a'\r\n              }\r\n            },\r\n            splitLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#08263f'\r\n              }\r\n            },\r\n            axisTick: {\r\n              show: false\r\n            }\r\n          },\r\n          series: [{\r\n            name: 'back',\r\n            type: 'bar',\r\n            data: data2,\r\n            z: 1,\r\n            itemStyle: {\r\n              normal: {\r\n                opacity: 0.4,\r\n                barBorderRadius: 5,\r\n                shadowBlur: 3,\r\n                shadowColor: '#111'\r\n              }\r\n            }\r\n          }, {\r\n            name: 'Simulate Shadow',\r\n            type: 'line',\r\n            data,\r\n            z: 2,\r\n            showSymbol: false,\r\n            animationDelay: 0,\r\n            animationEasing: 'linear',\r\n            animationDuration: 1200,\r\n            lineStyle: {\r\n              normal: {\r\n                color: 'transparent'\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: '#08263a',\r\n                shadowBlur: 50,\r\n                shadowColor: '#000'\r\n              }\r\n            }\r\n          }, {\r\n            name: 'front',\r\n            type: 'bar',\r\n            data,\r\n            xAxisIndex: 1,\r\n            z: 3,\r\n            itemStyle: {\r\n              normal: {\r\n                barBorderRadius: 5\r\n              }\r\n            }\r\n          }],\r\n          animationEasing: 'elasticOut',\r\n          animationEasingUpdate: 'elasticOut',\r\n          animationDelay(idx) {\r\n            return idx * 20\r\n          },\r\n          animationDelayUpdate(idx) {\r\n            return idx * 20\r\n          }\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Charts/keyboard.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.className,style:({height:_vm.height,width:_vm.width}),attrs:{\"id\":_vm.id}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a5b0ab58\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/keyboard.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./keyboard.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./keyboard.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a5b0ab58\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./keyboard.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/keyboard.vue\n// module id = null\n// module chunks = ","<template>\n  <div class='chart-container'>\n    <chart :class=\"className\" :id=\"id\" height='100%' width='100%'></chart>\n  </div>\n</template>\n\n<script>\nimport Chart from '@/components/Charts/keyboard'\n\nexport default {\n  name: 'keyboardChart',\n  props: {\n    className: {\n      type: [ String ],\n      default: 'charts'\n    },\n    id: {\n      type: [ String ],\n      default: 'charts',\n      required: true\n    }\n  },\n  components: { Chart }\n}\n</script>\n\n<style scoped>\n.chart-container {\n  position: relative;\n  width: 100%;\n  height: 400px;\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// src/pages/home/charts/keyboard.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-container\"},[_c('chart',{class:_vm.className,attrs:{\"id\":_vm.id,\"height\":\"100%\",\"width\":\"100%\"}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-654b2b9c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/charts/keyboard.vue\n// module id = null\n// module chunks = ","<template>\n  <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\n</template>\n\n<script>\nimport echarts from 'echarts'\nimport resize from './mixins/resize'\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  mounted() {\n    this.initChart()\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(document.getElementById(this.id))\n\n      this.chart.setOption({\n        backgroundColor: '#394056',\n        title: {\n          top: 20,\n          text: 'Requests',\n          textStyle: {\n            fontWeight: 'normal',\n            fontSize: 16,\n            color: '#F1F1F3'\n          },\n          left: '1%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        },\n        legend: {\n          top: 20,\n          icon: 'rect',\n          itemWidth: 14,\n          itemHeight: 5,\n          itemGap: 13,\n          data: ['CMCC', 'CTCC', 'CUCC'],\n          right: '4%',\n          textStyle: {\n            fontSize: 12,\n            color: '#F1F1F3'\n          }\n        },\n        grid: {\n          top: 100,\n          left: '3%',\n          right: '4%',\n          bottom: '2%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          data: ['13:00', '13:05', '13:10', '13:15', '13:20', '13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55']\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '(%)',\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          axisLabel: {\n            margin: 10,\n            textStyle: {\n              fontSize: 14\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        }],\n        series: [{\n          name: 'CMCC',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(137, 189, 27, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(137, 189, 27, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(137,189,27)',\n              borderColor: 'rgba(137,189,2,0.27)',\n              borderWidth: 12\n\n            }\n          },\n          data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]\n        }, {\n          name: 'CTCC',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(0, 136, 212, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(0, 136, 212, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(0,136,212)',\n              borderColor: 'rgba(0,136,212,0.2)',\n              borderWidth: 12\n\n            }\n          },\n          data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\n        }, {\n          name: 'CUCC',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(219, 50, 51, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(219, 50, 51, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(219,50,51)',\n              borderColor: 'rgba(219,50,51,0.2)',\n              borderWidth: 12\n            }\n          },\n          data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122]\n        }]\n      })\n    }\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Charts/lineMarker.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.className,style:({height:_vm.height,width:_vm.width}),attrs:{\"id\":_vm.id}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0f771fee\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/lineMarker.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./lineMarker.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./lineMarker.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0f771fee\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./lineMarker.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/lineMarker.vue\n// module id = null\n// module chunks = ","<template>\n  <div class='chart-container'>\n    <chart :class=\"className\" :id=\"id\" height='100%' width='100%'></chart>\n  </div>\n</template>\n\n<script>\nimport Chart from '@/components/Charts/lineMarker'\n\nexport default {\n  name: 'lineChart',\n  props: {\n    className: {\n      type: [ String ],\n      default: 'charts'\n    },\n    id: {\n      type: [ String ],\n      default: 'charts',\n      required: true\n    }\n  },\n  components: { Chart }\n}\n</script>\n\n<style scoped>\n.chart-container {\n  position: relative;\n  width: 100%;\n  height: 400px;\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// src/pages/home/charts/line.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-container\"},[_c('chart',{class:_vm.className,attrs:{\"id\":_vm.id,\"height\":\"100%\",\"width\":\"100%\"}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3abedb29\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/charts/line.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  mixins: [resize],\r\n  props: {\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    id: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '200px'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '200px'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(document.getElementById(this.id))\r\n      const xData = (function() {\r\n        const data = []\r\n        for (let i = 1; i < 13; i++) {\r\n          data.push(i + 'month')\r\n        }\r\n        return data\r\n      }())\r\n      this.chart.setOption({\r\n        backgroundColor: '#344b58',\r\n        title: {\r\n          text: 'statistics',\r\n          x: '20',\r\n          top: '20',\r\n          textStyle: {\r\n            color: '#fff',\r\n            fontSize: '22'\r\n          },\r\n          subtextStyle: {\r\n            color: '#90979c',\r\n            fontSize: '16'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            textStyle: {\r\n              color: '#fff'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          borderWidth: 0,\r\n          top: 110,\r\n          bottom: 95,\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        legend: {\r\n          x: '5%',\r\n          top: '10%',\r\n          textStyle: {\r\n            color: '#90979c'\r\n          },\r\n          data: ['female', 'male', 'average']\r\n        },\r\n        calculable: true,\r\n        xAxis: [{\r\n          type: 'category',\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#90979c'\r\n            }\r\n          },\r\n          splitLine: {\r\n            show: false\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          splitArea: {\r\n            show: false\r\n          },\r\n          axisLabel: {\r\n            interval: 0\r\n\r\n          },\r\n          data: xData\r\n        }],\r\n        yAxis: [{\r\n          type: 'value',\r\n          splitLine: {\r\n            show: false\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#90979c'\r\n            }\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLabel: {\r\n            interval: 0\r\n          },\r\n          splitArea: {\r\n            show: false\r\n          }\r\n        }],\r\n        dataZoom: [{\r\n          show: true,\r\n          height: 30,\r\n          xAxisIndex: [\r\n            0\r\n          ],\r\n          bottom: 30,\r\n          start: 10,\r\n          end: 80,\r\n          handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\r\n          handleSize: '110%',\r\n          handleStyle: {\r\n            color: '#d3dee5'\r\n\r\n          },\r\n          textStyle: {\r\n            color: '#fff' },\r\n          borderColor: '#90979c'\r\n\r\n        }, {\r\n          type: 'inside',\r\n          show: true,\r\n          height: 15,\r\n          start: 1,\r\n          end: 35\r\n        }],\r\n        series: [{\r\n          name: 'female',\r\n          type: 'bar',\r\n          stack: 'total',\r\n          barMaxWidth: 35,\r\n          barGap: '10%',\r\n          itemStyle: {\r\n            normal: {\r\n              color: 'rgba(255,144,128,1)',\r\n              label: {\r\n                show: true,\r\n                textStyle: {\r\n                  color: '#fff'\r\n                },\r\n                position: 'insideTop',\r\n                formatter(p) {\r\n                  return p.value > 0 ? p.value : ''\r\n                }\r\n              }\r\n            }\r\n          },\r\n          data: [\r\n            709,\r\n            1917,\r\n            2455,\r\n            2610,\r\n            1719,\r\n            1433,\r\n            1544,\r\n            3285,\r\n            5208,\r\n            3372,\r\n            2484,\r\n            4078\r\n          ]\r\n        },\r\n\r\n        {\r\n          name: 'male',\r\n          type: 'bar',\r\n          stack: 'total',\r\n          itemStyle: {\r\n            normal: {\r\n              color: 'rgba(0,191,183,1)',\r\n              barBorderRadius: 0,\r\n              label: {\r\n                show: true,\r\n                position: 'top',\r\n                formatter(p) {\r\n                  return p.value > 0 ? p.value : ''\r\n                }\r\n              }\r\n            }\r\n          },\r\n          data: [\r\n            327,\r\n            1776,\r\n            507,\r\n            1200,\r\n            800,\r\n            482,\r\n            204,\r\n            1390,\r\n            1001,\r\n            951,\r\n            381,\r\n            220\r\n          ]\r\n        }, {\r\n          name: 'average',\r\n          type: 'line',\r\n          stack: 'total',\r\n          symbolSize: 10,\r\n          symbol: 'circle',\r\n          itemStyle: {\r\n            normal: {\r\n              color: 'rgba(252,230,48,1)',\r\n              barBorderRadius: 0,\r\n              label: {\r\n                show: true,\r\n                position: 'top',\r\n                formatter(p) {\r\n                  return p.value > 0 ? p.value : ''\r\n                }\r\n              }\r\n            }\r\n          },\r\n          data: [\r\n            1036,\r\n            3693,\r\n            2962,\r\n            3810,\r\n            2519,\r\n            1915,\r\n            1748,\r\n            4675,\r\n            6209,\r\n            4323,\r\n            2865,\r\n            4298\r\n          ]\r\n        }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Charts/mixChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.className,style:({height:_vm.height,width:_vm.width}),attrs:{\"id\":_vm.id}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5e2f0e87\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/mixChart.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./mixChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./mixChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5e2f0e87\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./mixChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/mixChart.vue\n// module id = null\n// module chunks = ","<template>\n  <div class='chart-container'>\n    <chart :class=\"className\" :id=\"id\" height='100%' width='100%'></chart>\n  </div>\n</template>\n\n<script>\nimport Chart from '@/components/Charts/mixChart'\n\nexport default {\n  name: 'mixChart',\n  props: {\n    className: {\n      type: [ String ],\n      default: 'charts'\n    },\n    id: {\n      type: [ String ],\n      default: 'charts',\n      required: true\n    }\n  },\n  components: { Chart }\n}\n</script>\n\n<style scoped>\n.chart-container {\n  position: relative;\n  width: 100%;\n  height: 400px;\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// src/pages/home/charts/mixChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-container\"},[_c('chart',{class:_vm.className,attrs:{\"id\":_vm.id,\"height\":\"100%\",\"width\":\"100%\"}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0af8515f\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/charts/mixChart.vue\n// module id = null\n// module chunks = ","<!-- componts: autoComplete -->\n<template>\n  <div class='autoComplete'>\n    <el-autocomplete v-model=\"state\"\n      :fetch-suggestions=\"querySearchAsync\"\n      placeholder=\"请输入内容\"\n      @select=\"handleSelect\"></el-autocomplete>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: '',\n\n  components: {},\n\n  props: {},\n\n  data () {\n    return {\n      state: '',\n      restaurants: [],\n      timeout: null\n    }\n  },\n\n  computed: {},\n\n  watch: {},\n\n  created () {},\n\n  mounted () {\n    this.restaurants = this.loadAll();\n  },\n\n  methods: {\n    loadAll() {\n      return [\n        { \"value\": \"三全鲜食（北新泾店）\", \"address\": \"长宁区新渔路144号\" },\n        { \"value\": \"Hot honey 首尔炸鸡（仙霞路）\", \"address\": \"上海市长宁区淞虹路661号\" },\n        { \"value\": \"新旺角茶餐厅\", \"address\": \"上海市普陀区真北路988号创邑金沙谷6号楼113\" },\n        { \"value\": \"泷千家(天山西路店)\", \"address\": \"天山西路438号\" },\n        { \"value\": \"胖仙女纸杯蛋糕（上海凌空店）\", \"address\": \"上海市长宁区金钟路968号1幢18号楼一层商铺18-101\" },\n        { \"value\": \"贡茶\", \"address\": \"上海市长宁区金钟路633号\" },\n        { \"value\": \"豪大大香鸡排超级奶爸\", \"address\": \"上海市嘉定区曹安公路曹安路1685号\" },\n        { \"value\": \"茶芝兰（奶茶，手抓饼）\", \"address\": \"上海市普陀区同普路1435号\" },\n        { \"value\": \"十二泷町\", \"address\": \"上海市北翟路1444弄81号B幢-107\" },\n        { \"value\": \"星移浓缩咖啡\", \"address\": \"上海市嘉定区新郁路817号\" },\n        { \"value\": \"阿姨奶茶/豪大大\", \"address\": \"嘉定区曹安路1611号\" },\n        { \"value\": \"新麦甜四季甜品炸鸡\", \"address\": \"嘉定区曹安公路2383弄55号\" },\n        { \"value\": \"Monica摩托主题咖啡店\", \"address\": \"嘉定区江桥镇曹安公路2409号1F，2383弄62号1F\" },\n        { \"value\": \"浮生若茶（凌空soho店）\", \"address\": \"上海长宁区金钟路968号9号楼地下一层\" },\n        { \"value\": \"NONO JUICE  鲜榨果汁\", \"address\": \"上海市长宁区天山西路119号\" },\n        { \"value\": \"CoCo都可(北新泾店）\", \"address\": \"上海市长宁区仙霞西路\" },\n        { \"value\": \"快乐柠檬（神州智慧店）\", \"address\": \"上海市长宁区天山西路567号1层R117号店铺\" },\n        { \"value\": \"Merci Paul cafe\", \"address\": \"上海市普陀区光复西路丹巴路28弄6号楼819\" },\n        { \"value\": \"猫山王（西郊百联店）\", \"address\": \"上海市长宁区仙霞西路88号第一层G05-F01-1-306\" },\n        { \"value\": \"枪会山\", \"address\": \"上海市普陀区棕榈路\" },\n        { \"value\": \"纵食\", \"address\": \"元丰天山花园(东门) 双流路267号\" },\n        { \"value\": \"钱记\", \"address\": \"上海市长宁区天山西路\" },\n        { \"value\": \"壹杯加\", \"address\": \"上海市长宁区通协路\" },\n        { \"value\": \"唦哇嘀咖\", \"address\": \"上海市长宁区新泾镇金钟路999号2幢（B幢）第01层第1-02A单元\" },\n        { \"value\": \"爱茜茜里(西郊百联)\", \"address\": \"长宁区仙霞西路88号1305室\" },\n        { \"value\": \"爱茜茜里(近铁广场)\", \"address\": \"上海市普陀区真北路818号近铁城市广场北区地下二楼N-B2-O2-C商铺\" },\n        { \"value\": \"鲜果榨汁（金沙江路和美广店）\", \"address\": \"普陀区金沙江路2239号金沙和美广场B1-10-6\" },\n        { \"value\": \"开心丽果（缤谷店）\", \"address\": \"上海市长宁区威宁路天山路341号\" },\n        { \"value\": \"超级鸡车（丰庄路店）\", \"address\": \"上海市嘉定区丰庄路240号\" },\n        { \"value\": \"妙生活果园（北新泾店）\", \"address\": \"长宁区新渔路144号\" },\n        { \"value\": \"香宜度麻辣香锅\", \"address\": \"长宁区淞虹路148号\" },\n        { \"value\": \"凡仔汉堡（老真北路店）\", \"address\": \"上海市普陀区老真北路160号\" },\n        { \"value\": \"港式小铺\", \"address\": \"上海市长宁区金钟路968号15楼15-105室\" },\n        { \"value\": \"蜀香源麻辣香锅（剑河路店）\", \"address\": \"剑河路443-1\" },\n        { \"value\": \"北京饺子馆\", \"address\": \"长宁区北新泾街道天山西路490-1号\" },\n        { \"value\": \"饭典*新简餐（凌空SOHO店）\", \"address\": \"上海市长宁区金钟路968号9号楼地下一层9-83室\" },\n        { \"value\": \"焦耳·川式快餐（金钟路店）\", \"address\": \"上海市金钟路633号地下一层甲部\" },\n        { \"value\": \"动力鸡车\", \"address\": \"长宁区仙霞西路299弄3号101B\" },\n        { \"value\": \"浏阳蒸菜\", \"address\": \"天山西路430号\" },\n        { \"value\": \"四海游龙（天山西路店）\", \"address\": \"上海市长宁区天山西路\" },\n        { \"value\": \"樱花食堂（凌空店）\", \"address\": \"上海市长宁区金钟路968号15楼15-105室\" },\n        { \"value\": \"壹分米客家传统调制米粉(天山店)\", \"address\": \"天山西路428号\" },\n        { \"value\": \"福荣祥烧腊（平溪路店）\", \"address\": \"上海市长宁区协和路福泉路255弄57-73号\" },\n        { \"value\": \"速记黄焖鸡米饭\", \"address\": \"上海市长宁区北新泾街道金钟路180号1层01号摊位\" },\n        { \"value\": \"红辣椒麻辣烫\", \"address\": \"上海市长宁区天山西路492号\" },\n        { \"value\": \"(小杨生煎)西郊百联餐厅\", \"address\": \"长宁区仙霞西路88号百联2楼\" },\n        { \"value\": \"阳阳麻辣烫\", \"address\": \"天山西路389号\" },\n        { \"value\": \"南拳妈妈龙虾盖浇饭\", \"address\": \"普陀区金沙江路1699号鑫乐惠美食广场A13\" }\n      ];\n    },\n    querySearchAsync(queryString, cb) {\n      var restaurants = this.restaurants;\n      var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        cb(results);\n      }, 300);\n    },\n    createStateFilter(queryString) {\n      return (state) => {\n        return (state.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n      };\n    },\n    handleSelect(item) {\n      console.log(item);\n    },\n    handleSelect (v) {\n      console.log(v)\n    }\n  }\n}\n</script>\n\n<style lang='scss' scoped>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/home/autoComplete.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"autoComplete\"},[_c('el-autocomplete',{attrs:{\"fetch-suggestions\":_vm.querySearchAsync,\"placeholder\":\"请输入内容\"},on:{\"select\":_vm.handleSelect},model:{value:(_vm.state),callback:function ($$v) {_vm.state=$$v},expression:\"state\"}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-07498730\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/autoComplete.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"page-index\">\n    <el-row :gutter=\"16\">\n      <el-col :span=\"12\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>echarts-keyboard</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\">go</el-button>\n          </div>\n          <KeyboardChart id=\"chart-keyboard\" width=\"100%\" height=\"\"></KeyboardChart>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>echarts-line</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\">go</el-button>\n          </div>\n          <LineChart id=\"chart-line\" width=\"100%\" height=\"100%\"></LineChart>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>echarts-mixChart</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\">go</el-button>\n          </div>\n          <MixChart id=\"chart-mix\" width=\"100%\" height=\"100%\"></MixChart>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>加法计算器</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\">go</el-button>\n          </div>\n          <Add></Add>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\n  import Add from './add'\n  import KeyboardChart from './charts/keyboard'\n  import LineChart from './charts/line'\n  import MixChart from './charts/mixChart'\n  import AutoComplete from './autoComplete'\n\n  export default {\n    name: '',\n    components: {\n      Add,\n      AutoComplete,\n      KeyboardChart,\n      LineChart,\n      MixChart\n    },\n    props: {\n    },\n    data () {\n      return {\n      }\n    },\n    computed: {\n\n    },\n    watch: {\n\n    },\n    created () {\n    },\n    mounted () {\n    },\n    methods: {\n    }\n  }\n</script>\n\n<style>\n  .text {\n    font-size: 14px;\n  }\n\n  .item {\n    margin-bottom: 18px;\n  }\n\n  .clearfix:before,\n  .clearfix:after {\n    display: table;\n    content: \"\";\n  }\n  .clearfix:after {\n    clear: both\n  }\n\n  .box-card {\n    /* width: 480px; */\n    margin-bottom: 15px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/home/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-index\"},[_c('el-row',{attrs:{\"gutter\":16}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"echarts-keyboard\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('KeyboardChart',{attrs:{\"id\":\"chart-keyboard\",\"width\":\"100%\",\"height\":\"\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"echarts-line\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('LineChart',{attrs:{\"id\":\"chart-line\",\"width\":\"100%\",\"height\":\"100%\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"echarts-mixChart\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('MixChart',{attrs:{\"id\":\"chart-mix\",\"width\":\"100%\",\"height\":\"100%\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"加法计算器\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"}},[_vm._v(\"go\")])],1),_vm._v(\" \"),_c('Add')],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-02525800\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/index.vue\n// module id = null\n// module chunks = ","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkAreaView.js\n// module id = Fkmw\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/parallel.js\n// module id = FlXs\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/geoRoam.js\n// module id = FvdC\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/preprocessor.js\n// module id = GQGX\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = GWV8\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar.js\n// module id = GbHy\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/RadarSeries.js\n// module id = Gevp\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/EffectSymbol.js\n// module id = GnMB\n// module chunks = 0","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/adjustEdge.js\n// module id = Goha\n// module chunks = 0","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/TimelineView.js\n// module id = Gp87\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/View.js\n// module id = H4Od\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/visualMapAction.js\n// module id = H4Wn\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/VisualMapping.js\n// module id = HGSA\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Geo.js\n// module id = HcG6\n// module chunks = 0","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/grid.js\n// module id = ILx8\n// module chunks = 0","var vec2 = require(\"zrender/lib/core/vector\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/forceHelper.js\n// module id = ITiI\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/Breadcrumb.js\n// module id = IkDM\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"autoComplete.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-07498730\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/autoComplete.vue\n// module id = J+Ut\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/radar/IndicatorAxis.js\n// module id = JFJR\n// module chunks = 0","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = JIsR\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Restore.js\n// module id = JMu0\n// module chunks = 0","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge/GaugeSeries.js\n// module id = JNWs\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline.js\n// module id = JRc4\n// module chunks = 0","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/EffectPolyline.js\n// module id = Jd65\n// module chunks = 0","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/Single.js\n// module id = JzYe\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = KAfT\n// module chunks = 0","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/createView.js\n// module id = KGuM\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/ParallelModel.js\n// module id = KjPy\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/MapDraw.js\n// module id = LBXi\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/TreeSeries.js\n// module id = LGKB\n// module chunks = 0","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js\n// module id = LRsb\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/polar.js\n// module id = LbEf\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js\n// module id = LgWN\n// module chunks = 0","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/parallelAxis.js\n// module id = LjPz\n// module chunks = 0","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/commonLayout.js\n// module id = LzVd\n// module chunks = 0","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/treemapVisual.js\n// module id = M9eA\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/custom.js\n// module id = MOpb\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/parallelAxisAction.js\n// module id = MRvz\n// module chunks = 0","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  if (smoothMonotone == null) {\n    if (isMono(points, 'x')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n    } else if (isMono(points, 'y')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n    } else {\n      return drawNonMono.apply(this, arguments);\n    }\n  } else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n    return drawMono.apply(this, arguments);\n  } else {\n    return drawNonMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n\n\nfunction isMono(points, smoothMonotone) {\n  if (points.length <= 1) {\n    return true;\n  }\n\n  var dim = smoothMonotone === 'x' ? 0 : 1;\n  var last = points[0][dim];\n  var lastDiff = 0;\n\n  for (var i = 1; i < points.length; ++i) {\n    var diff = points[i][dim] - last;\n\n    if (!isNaN(diff) && !isNaN(lastDiff) && diff !== 0 && lastDiff !== 0 && diff >= 0 !== lastDiff >= 0) {\n      return false;\n    }\n\n    if (!isNaN(diff) && diff !== 0) {\n      lastDiff = diff;\n      last = points[i][dim];\n    }\n  }\n\n  return true;\n}\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/poly.js\n// module id = MXTC\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkerModel.js\n// module id = Mlni\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/markArea.js\n// module id = Mn6+\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/BoxplotView.js\n// module id = MsVc\n// module chunks = 0","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/sankeyVisual.js\n// module id = Mxrs\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pictorialBar.js\n// module id = N1UU\n// module chunks = 0","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/circularLayout.js\n// module id = NAKW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/linkList.js\n// module id = NGRG\n// module chunks = 0","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = NKek\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    for (var dataIndex = params.start; dataIndex < params.end; dataIndex++) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/visualSolution.js\n// module id = NUWb\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/AxisModel.js\n// module id = NjeB\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap.js\n// module id = O523\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/preprocessor.js\n// module id = OCS9\n// module chunks = 0","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js\n// module id = OQAC\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap/HeatmapView.js\n// module id = OcRu\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/ContinuousModel.js\n// module id = OlnU\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/prepareCustom.js\n// module id = OpfW\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = Oq2I\n// module chunks = 0","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/typeDefaulter.js\n// module id = Osoq\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = Ou7x\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/MapSeries.js\n// module id = OvrE\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = OxCu\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/array/nest.js\n// module id = P05t\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar globalObj = typeof window === 'undefined' ? global : window;\nvar Uint32Arr = globalObj.Uint32Array || Array;\nvar Float64Arr = globalObj.Float64Array || Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/LinesSeries.js\n// module id = P0a5\n// module chunks = 0","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js\n// module id = P7Q7\n// module chunks = 0","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legendScroll.js\n// module id = P7ry\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./PolarModel\");\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, dim);\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, dim);\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/polarCreator.js\n// module id = PBlc\n// module chunks = 0","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataSample.js\n// module id = PWa9\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/treeAction.js\n// module id = PYc7\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/MapView.js\n// module id = PdL8\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Polyline.js\n// module id = PiQa\n// module chunks = 0","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/Definable.js\n// module id = Pmfi\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js\n// module id = Po+l\n// module chunks = 0","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/barItemStyle.js\n// module id = Pobh\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/TimelineAxis.js\n// module id = Pwgp\n// module chunks = 0","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/Painter.js\n// module id = Q5xN\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = QCrJ\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/mapSymbolLayout.js\n// module id = QZ7o\n// module chunks = 0","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js\n// module id = QbUQ\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/nanhai.js\n// module id = Qv0P\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = R0U9\n// module chunks = 0","function _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/calendar/prepareCustom.js\n// module id = RAps\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Axis2D.js\n// module id = RKzr\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = RTd5\n// module chunks = 0","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/labelHelper.js\n// module id = RjA7\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/brushAction.js\n// module id = S+iL\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/ShadowManager.js\n// module id = SMB/\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkerView.js\n// module id = SZjP\n// module chunks = 0","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = SlE6\n// module chunks = 0","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/categoryFilter.js\n// module id = T6W2\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = TCXJ\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/ClippathManager.js\n// module id = TDz/\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0af8515f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./mixChart.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"0038dd08\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0af8515f\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/charts/mixChart.vue\n// module id = TLJB\n// module chunks = 0","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkLineModel.js\n// module id = TTCf\n// module chunks = 0","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/edgeVisual.js\n// module id = TXKS\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.text {\\n  font-size: 14px;\\n}\\n.item {\\n  margin-bottom: 18px;\\n}\\n.clearfix:before,\\n.clearfix:after {\\n  display: table;\\n  content: \\\"\\\";\\n}\\n.clearfix:after {\\n  clear: both\\n}\\n.box-card {\\n  /* width: 480px; */\\n  margin-bottom: 15px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/index.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,gBAAgB;CACjB;AACD;EACE,oBAAoB;CACrB;AACD;;EAEE,eAAe;EACf,YAAY;CACb;AACD;EACE,WAAW;CACZ;AACD;EACE,mBAAmB;EACnB,oBAAoB;CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.text {\\n  font-size: 14px;\\n}\\n.item {\\n  margin-bottom: 18px;\\n}\\n.clearfix:before,\\n.clearfix:after {\\n  display: table;\\n  content: \\\"\\\";\\n}\\n.clearfix:after {\\n  clear: both\\n}\\n.box-card {\\n  /* width: 480px; */\\n  margin-bottom: 15px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-02525800\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/index.vue\n// module id = Tl0V\n// module chunks = 0","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/funnelLayout.js\n// module id = UOrf\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LargeLineDraw.js\n// module id = US3d\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/graphic.js\n// module id = UeW/\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/gridSimple.js\n// module id = UkNE\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3abedb29\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./line.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"2e49aad6\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3abedb29\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/charts/line.vue\n// module id = V6ht\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = Vb+l\n// module chunks = 0","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/core.js\n// module id = VewU\n// module chunks = 0","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/vml.js\n// module id = VmZa\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/SingleAxis.js\n// module id = WK/r\n// module chunks = 0","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = WO3U\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js\n// module id = WbrJ\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.chart-container[data-v-654b2b9c] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/FE/vue-study-note-xiong/src/pages/home/charts/keyboard.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,mBAAmB;EACnB,YAAY;EACZ,cAAc;CACf\",\"file\":\"keyboard.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-654b2b9c] {\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-654b2b9c\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/charts/keyboard.vue\n// module id = Wf6x\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/geoCoord.js\n// module id = WxG6\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = XAC3\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushTargetManager.js\n// module id = XCrL\n// module chunks = 0","/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/traversalHelper.js\n// module id = XFat\n// module chunks = 0","var _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/index.js\n// module id = XLwt\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = XRkS\n// module chunks = 0","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = XhgW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/PiecewiseView.js\n// module id = XiVP\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js\n// module id = Y3kp\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js\n// module id = YbE0\n// module chunks = 0","/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/roamHelper.js\n// module id = YpIy\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/RadiusAxis.js\n// module id = YqdL\n// module chunks = 0","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox.js\n// module id = YsUA\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/backwardCompat.js\n// module id = Z2m1\n// module chunks = 0","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/brushHelper.js\n// module id = ZJ+T\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/PolarModel.js\n// module id = ZRmN\n// module chunks = 0","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkAreaModel.js\n// module id = ZtEr\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js\n// module id = ZuqD\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-07498730\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./autoComplete.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"286b58dc\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-07498730\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/autoComplete.vue\n// module id = a/4j\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js\n// module id = a1DW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = aYad\n// module chunks = 0","function _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/categoryVisual.js\n// module id = akwy\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = auIi\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/singleAxisHelper.js\n// module id = ay5B\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\necharts.registerProcessor({\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  isOverallFilter: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = b/SY\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    normalText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (normalText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      normalText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Line.js\n// module id = bzOU\n// module chunks = 0","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/core.js\n// module id = cI6i\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js\n// module id = cN90\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: createClipShape(coordSys, false, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      var coordSysClipShape = createClipShape(coordSys, false, seriesModel); // Update clipPath\n\n      lineGroup.setClipPath(coordSysClipShape); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: coordSysClipShape\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineView.js\n// module id = cO/Q\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/textCoord.js\n// module id = cU6c\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey.js\n// module id = cWq4\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian.js\n// module id = ct4P\n// module chunks = 0","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = cuL/\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: (coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value'])\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js\n// module id = d1IL\n// module chunks = 0","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/featureManager.js\n// module id = dCQY\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will\n  // cut part of the symbol element shape.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/SymbolDraw.js\n// module id = dZZy\n// module chunks = 0","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = dp0Z\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = dtW/\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/helper.js\n// module id = dzlV\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/animation.js\n// module id = e+YR\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCreator.js\n// module id = eH0a\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BarView.js\n// module id = eHPu\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/FunnelSeries.js\n// module id = eQYg\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/AxisModel.js\n// module id = ecfp\n// module chunks = 0","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js\n// module id = envY\n// module chunks = 0","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/radialLayout.js\n// module id = f0h+\n// module chunks = 0","var positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js\n// module id = fAbo\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/treemapLayout.js\n// module id = fm2I\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/preprocessor.js\n// module id = g8A/\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/TreemapSeries.js\n// module id = gLqW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/treeHelper.js\n// module id = gOx9\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/ContinuousView.js\n// module id = gZam\n// module chunks = 0","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/singleCreator.js\n// module id = ghha\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/RadarView.js\n// module id = guZJ\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/FunnelView.js\n// module id = h4VJ\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js\n// module id = h6Uy\n// module chunks = 0","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge/PointerPath.js\n// module id = hG1p\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/GradientManager.js\n// module id = hZf2\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/BrushView.js\n// module id = hdbT\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js\n// module id = i6Ks\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/timelineAction.js\n// module id = iEm+\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/graphAction.js\n// module id = iZVd\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/BrushModel.js\n// module id = icur\n// module chunks = 0","/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/roamHelper.js\n// module id = ii60\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"add.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-68737547\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/add.vue\n// module id = ij2A\n// module chunks = 0","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = ilLo\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/prepareCustom.js\n// module id = ilox\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/TreemapView.js\n// module id = ix3c\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/radar/Radar.js\n// module id = jJrn\n// module chunks = 0","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/svg.js\n// module id = jLnL\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineSeries.js\n// module id = jMTz\n// module chunks = 0","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/geo/GeoView.js\n// module id = jpt2\n// module chunks = 0","// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js\n// module id = k7nC\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/effectScatter.js\n// module id = k9Bd\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = kQD9\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = koEO\n// module chunks = 0","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoomSelect.js\n// module id = l2wH\n// module chunks = 0","function _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = l4Op\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/radar/RadarView.js\n// module id = lVde\n// module chunks = 0","function _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/radarLayout.js\n// module id = lwXq\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/PictorialBarView.js\n// module id = m5oG\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/barPolar.js\n// module id = mLyJ\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = mcsk\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/title.js\n// module id = miEh\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js\n// module id = mlpt\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/prepareCustom.js\n// module id = n/n4\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/visualEncoding.js\n// module id = n3NR\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js\n// module id = nQkE\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map.js\n// module id = nUSl\n// module chunks = 0","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/linesVisual.js\n// module id = nV/6\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-02525800\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"b3c19b72\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-02525800\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/index.vue\n// module id = nW6X\n// module chunks = 0","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap.js\n// module id = o0k+\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushController.js\n// module id = oDOe\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/SliderTimelineView.js\n// module id = oYIf\n// module chunks = 0","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/typeDefaulter.js\n// module id = od06\n// module chunks = 0","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/sliderMove.js\n// module id = og9+\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"./singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/SingleAxisView.js\n// module id = oqQy\n// module chunks = 0","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkPointModel.js\n// module id = orv6\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/markLine.js\n// module id = p1Ck\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js\n// module id = pSwa\n// module chunks = 0","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n\n    },\n    progressive: null\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/scatter/ScatterSeries.js\n// module id = pmYM\n// module chunks = 0","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/forceLayout.js\n// module id = pzOI\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js\n// module id = qBny\n// module chunks = 0","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/parallelCreator.js\n// module id = qSkD\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\necharts.registerVisual(parallelVisual);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel.js\n// module id = qbKW\n// module chunks = 0","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = r9WW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/RadiusAxisView.js\n// module id = rFvp\n// module chunks = 0","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js\n// module id = rbn0\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = ri8f\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-68737547\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./add.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"af7a685a\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-68737547\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/home/add.vue\n// module id = rjiA\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar.js\n// module id = rjsW\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/AxisModel.js\n// module id = rwkR\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisDefault.js\n// module id = s/lY\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/helper.js\n// module id = s1Aj\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel) && i < ticksCoords.length - 1) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/CartesianAxisView.js\n// module id = s48c\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = sJ4e\n// module chunks = 0","var createListSimply = require(\"../helper/createListSimply\");\n\nvar WhiskerBoxDraw = require(\"../helper/WhiskerBoxDraw\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalPrepareUpdate(seriesModel, ecModel, api);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalUpdate(params, seriesModel, ecModel, api);\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js\n// module id = sK5G\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LinePath.js\n// module id = sOJ4\n// module chunks = 0","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge/GaugeView.js\n// module id = sTIA\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var dataDimensions = zrUtil.map(dimensions, function (axisDim) {\n      return data.mapDimension(axisDim);\n    });\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dataDimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/Parallel.js\n// module id = sYrQ\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/geoCreator.js\n// module id = srbS\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush.js\n// module id = swsf\n// module chunks = 0","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap.js\n// module id = tQk0\n// module chunks = 0","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var stacked = isDimensionStacked(data, valueDim, baseDim);\n  var dataDimsForPoint = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  return {\n    dataDimsForPoint: dataDimsForPoint,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/helper.js\n// module id = tzpD\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataView.js\n// module id = u9lB\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/scatter.js\n// module id = u9yV\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/EffectLine.js\n// module id = uA0k\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/scatter/ScatterView.js\n// module id = uNEE\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js\n// module id = uv9t\n// module chunks = 0","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = v/cD\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkPointView.js\n// module id = vEM8\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/mapDataStatistic.js\n// module id = vIe4\n// module chunks = 0","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/orthogonalLayout.js\n// module id = veIh\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = vjPX\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim, otherDataDim);\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/markerHelper.js\n// module id = vx1D\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    });\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js\n// module id = vxwL\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (!visualMapModel.isTargetSeries(seriesModel)) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/visualEncoding.js\n// module id = w2H/\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/calendar/CalendarView.js\n// module id = w6Zv\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/VisualMapModel.js\n// module id = wH4Y\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = wLWv\n// module chunks = 0","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom.js\n// module id = wQkr\n// module chunks = 0","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/sankeyLayout.js\n// module id = wTOJ\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/GeoModel.js\n// module id = whrq\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/radar/RadarModel.js\n// module id = xLO3\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/calendar/CalendarModel.js\n// module id = yEXw\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    if (!this._finished || seriesModel.pipelineContext.large) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/LinesView.js\n// module id = z+uQ\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/GraphSeries.js\n// module id = z81E\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = zAPJ\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/VisualMapView.js\n// module id = zO13\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines.js\n// module id = zjhG\n// module chunks = 0","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/selector.js\n// module id = zlsk\n// module chunks = 0","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis.js\n// module id = zz1u\n// module chunks = 0"],"sourceRoot":""}